{"version":3,"file":"1216.5245c32c4285ce601546.requests.js","mappings":"iPAMOA,eAAeC,EAAoCC,EAAWC,EAAUC,GAC7E,MAAM,gBACJC,EAAe,YACfC,GACEC,EAAA,EAAMC,MACV,IACML,QCTDH,eAAqCS,EAAcH,EAAaJ,GACrE,MAAMQ,EAAM,IAAG,OAASD,6BAAwCP,cAChE,OAAO,QAAKQ,EAAK,MAAM,OAAKJ,GAAc,CAAEK,QAAS,MACvD,CDOYC,CAAqBP,EAAiBC,EAAaJ,SCLxDF,eAAoCS,EAAcH,EAAaJ,GACpE,MAAMQ,EAAM,IAAG,OAASD,6BAAwCP,WAChE,OAAO,QAAKQ,EAAK,MAAM,OAAKJ,GAAc,CAAEK,QAAS,MACvD,CDIYE,CAAoBR,EAAiBC,EAAaJ,GAEtDE,GACaU,EAAA,EAAMC,IAAIZ,EAAW,0BAA4B,4BAElE,OAAK,sBACP,CAAE,MAAOa,GACPC,QAAQC,MAAMF,GACCF,EAAA,EAAMC,IAAIZ,GACrB,EAAAgB,EAAA,GAAW,CAAC,qCAAqC,CAAC,UAAW,CAAED,MAAQF,EAAEI,SAAW,MACpF,EAAAD,EAAA,GAAW,CAAC,oCAAoC,CAAC,UAAW,CAAED,MAAQF,EAAEI,SAAW,KAEzF,CACF,C,cERA,YAgBwB,iBAAEC,EAAgB,aAAEC,I,OAAmBtB,UACvD,MAAMuB,QAAmB,QAAkBF,EAAkBC,GAE7D,OA1BR,SAAkCD,EAAkBE,GACjCC,EAAA,EAASC,sBAAsBJ,EAAkBE,EAAWG,QAC3E,MAAM,oBAAEC,GAAwBpB,EAAA,EAAMC,MACtCmB,EAAoBN,GAAoBE,EAAWG,OACnDnB,EAAA,EAAMqB,IAAI,CAAED,uBAChB,CAoBQE,CAAsBR,EAAkBE,GACjCA,E,0CArCMO,gB,iBAAkBC,gB,+KAAlBD,iB,sCAAkBC,gB,4FAwCtBxB,EAAA,E,mGArBA,CACXwB,eAAgB,CACd,CACEC,KAAM,YACNC,MAAO,UACPC,QAAUhC,GAAcD,EAAmCC,GAAW,GAAM,IAE9E,CACE8B,KAAM,YACNC,MAAO,SACPC,QAAUhC,GAAcD,EAAmCC,GAAW,GAAO,O,mUA9BnE,wB,yMAAfiC,gB,4hBCcY,CACXC,cAAa,G,oJAdNA,c,SAAgBC,Q,gRAAhBD,e,sBAAgBC,Q,6SCCtBrC,eAAesC,EAAmB7B,EAAcH,EAAaiC,EAAQ,IAC1E,IAAI7B,EAAM,IAAG,OAASD,4BAEtB,OADAC,GAAO,KAAM,QAAa,CAAE6B,WACrB,QAAI7B,GAAK,OAAKJ,GAAc,CAAEK,QAAS,MAChD,C","sources":["webpack:///./src/routes/_actions/requests.js","webpack:///./src/routes/_api/requests.js","webpack:///./src/routes/_pages/requests.html","webpack:///./src/routes/requests.html","webpack:///./src/routes/_api/followRequests.js"],"sourcesContent":["import { store } from '../_store/store.js'\nimport { approveFollowRequest, rejectFollowRequest } from '../_api/requests.js'\nimport { emit } from '../_utils/eventBus.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setFollowRequestApprovedOrRejected (accountId, approved, toastOnSuccess) {\n  const {\n    currentInstance,\n    accessToken\n  } = store.get()\n  try {\n    if (approved) {\n      await approveFollowRequest(currentInstance, accessToken, accountId)\n    } else {\n      await rejectFollowRequest(currentInstance, accessToken, accountId)\n    }\n    if (toastOnSuccess) {\n      /* no await */ toast.say(approved ? \"Approved follow request\" : \"Rejected follow request\")\n    }\n    emit('refreshAccountsList')\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(approved\n      ? formatIntl([\"Unable to approve follow request: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to reject follow request: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { post, WRITE_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport async function approveFollowRequest (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/follow_requests/${accountId}/authorize`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function rejectFollowRequest (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/follow_requests/${accountId}/reject`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","<DynamicPageBanner title=\"Follow requests\" icon=\"#fa-user-plus\" />\n{#if $isUserLoggedIn }\n  <AccountsListPage {accountsFetcher} {accountActions} />\n{/if}\n<script>\n  import AccountsListPage from '../_components/AccountsListPage.html'\n  import { store } from '../_store/store.js'\n  import { getFollowRequests } from '../_api/followRequests.js'\n  import DynamicPageBanner from '../_components/DynamicPageBanner.html'\n  import { setFollowRequestApprovedOrRejected } from '../_actions/requests.js'\n  import { database } from '../_database/database.js'\n\n  // sneakily update the follow reqs count in the cache, since we just fetched it\n  function updateFollowReqsCount ($currentInstance, followReqs) {\n    /* no await */ database.setFollowRequestCount($currentInstance, followReqs.length)\n    const { followRequestCounts } = store.get()\n    followRequestCounts[$currentInstance] = followReqs.length\n    store.set({ followRequestCounts })\n  }\n\n  export default {\n    data: () => ({\n      accountActions: [\n        {\n          icon: '#fa-check',\n          label: \"Approve\",\n          onclick: (accountId) => setFollowRequestApprovedOrRejected(accountId, true, true)\n        },\n        {\n          icon: '#fa-times',\n          label: \"Reject\",\n          onclick: (accountId) => setFollowRequestApprovedOrRejected(accountId, false, true)\n        }\n      ]\n    }),\n    computed: {\n      accountsFetcher: ({ $currentInstance, $accessToken }) => async () => {\n        const followReqs = await getFollowRequests($currentInstance, $accessToken)\n        updateFollowReqsCount($currentInstance, followReqs)\n        return followReqs\n      }\n    },\n    store: () => store,\n    components: {\n      AccountsListPage,\n      DynamicPageBanner\n    }\n  }\n</script>\n","<Title name=\"Follow requests\" />\n\n  <LazyPage {pageComponent} {params} />\n\n<script>\n  import Title from './_components/Title.html'\n  import LazyPage from './_components/LazyPage.html'\n  import pageComponent from './_pages/requests.html'\n\n  export default {\n    components: {\n\n      Title,\n      LazyPage\n    },\n    data: () => ({\n      pageComponent\n    })\n  }\n</script>\n","import { DEFAULT_TIMEOUT, get, post, WRITE_TIMEOUT, paramsString } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport async function getFollowRequests (instanceName, accessToken, limit = 80) {\n  let url = `${basename(instanceName)}/api/v1/follow_requests`\n  url += '?' + paramsString({ limit })\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n\nexport async function authorizeFollowRequest (instanceName, accessToken, id) {\n  const url = `${basename(instanceName)}/api/v1/follow_requests/${id}/authorize`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function rejectFollowRequest (instanceName, accessToken, id) {\n  const url = `${basename(instanceName)}/api/v1/follow_requests/${id}/reject`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n"],"names":["async","setFollowRequestApprovedOrRejected","accountId","approved","toastOnSuccess","currentInstance","accessToken","store","get","instanceName","url","timeout","approveFollowRequest","rejectFollowRequest","toast","say","e","console","error","formatIntl","message","$currentInstance","$accessToken","followReqs","database","setFollowRequestCount","length","followRequestCounts","set","updateFollowReqsCount","accountsFetcher","accountActions","icon","label","onclick","$isUserLoggedIn","pageComponent","params","getFollowRequests","limit"],"sourceRoot":""}