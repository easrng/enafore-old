{"version":3,"file":"135.ff9fb83befb26b5ed616.135.js","mappings":"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","sources":["webpack:///./src/routes/_utils/pointerEvents.js","webpack:///./src/routes/_components/Draggable.html","webpack:///./src/routes/_components/dialog/components/MediaFocalPointEditor.html","webpack:///./src/routes/_utils/asyncModules/importTesseractWorker.js","webpack:///./src/routes/_utils/runTesseract.js","webpack:///./src/routes/_components/dialog/components/MediaAltEditor.html","webpack:///./src/routes/_components/dialog/components/MediaEditDialog.html","webpack:///./src/routes/_components/dialog/creators/showMediaEditDialog.js","webpack:///./src/routes/_thirdparty/intrinsic-scale/intrinsicScale.js"],"sourcesContent":["import { get } from './lodash-lite.js'\n\nconst hasPointerEvents = process.browser && typeof PointerEvent === 'function'\n\n// Epiphany browser reports that it's a touch device even though it's not\nconst isTouchDevice = process.browser && 'ontouchstart' in document && !/Epiphany/.test(navigator.userAgent)\n\nlet pointerDown\nlet pointerUp\nlet pointerLeave\nlet pointerMove\n\nfunction createEventListener (event) {\n  return (node, callback) => {\n    const listener = e => {\n      // lightweight polyfill for clientX/clientY in pointer events,\n      // which is slightly different in touch events\n      if (typeof e.clientX !== 'number') {\n        e.clientX = get(e, ['touches', 0, 'clientX'])\n      }\n      if (typeof e.clientY !== 'number') {\n        e.clientY = get(e, ['touches', 0, 'clientY'])\n      }\n      callback(e)\n    }\n\n    node.addEventListener(event, listener)\n    return {\n      destroy () {\n        node.removeEventListener(event, listener)\n      }\n    }\n  }\n}\n\nif (hasPointerEvents) {\n  pointerDown = createEventListener('pointerdown')\n  pointerUp = createEventListener('pointerup')\n  pointerLeave = createEventListener('pointerleave')\n  pointerMove = createEventListener('pointermove')\n} else if (isTouchDevice) {\n  pointerDown = createEventListener('touchstart')\n  pointerUp = createEventListener('touchend')\n  pointerLeave = createEventListener('touchend')\n  pointerMove = createEventListener('touchmove')\n} else {\n  pointerDown = createEventListener('mousedown')\n  pointerUp = createEventListener('mouseup')\n  pointerLeave = createEventListener('mouseleave')\n  pointerMove = createEventListener('mousemove')\n}\n\nexport { pointerDown, pointerUp, pointerLeave, pointerMove }\n","<div class=\"draggable-area {draggableClassAfterRaf}\"\n     on:pointerMove=\"onPointerMove(event)\"\n     on:pointerLeave=\"onPointerLeave(event)\"\n     on:pointerUp=\"onPointerUp(event)\"\n     on:click=\"onClick(event)\"\n     ref:area\n>\n  <div class=\"draggable-indicator {computedIndicatorClassAfterRaf}\"\n       style={indicatorStyleAfterRaf}\n       on:pointerDown=\"onPointerDown(event)\"\n       ref:indicator\n  >\n    <div class=\"draggable-indicator-inner\">\n      <slot></slot>\n    </div>\n  </div>\n</div>\n<style>\n  .draggable-area {\n    position: relative;\n    touch-action: none;\n    cursor: pointer;\n  }\n  .draggable-indicator {\n    position: absolute;\n    cursor: grab;\n  }\n  .draggable-indicator.grabbing {\n    cursor: grabbing;\n  }\n  .draggable-indicator-inner {\n    pointer-events: none;\n    display: flex;\n  }\n</style>\n<script>\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../_utils/throttleTimer.js'\n  import { pointerUp, pointerDown, pointerLeave, pointerMove } from '../_utils/pointerEvents.js'\n  import { requestPostAnimationFrame } from '../_utils/requestPostAnimationFrame.js'\n  import { classname } from '../_utils/classname.js'\n\n  // ensure DOM writes only happen once after a rAF\n  const updateIndicatorStyle = throttleTimer(requestAnimationFrame)\n  const updateIndicatorClass = throttleTimer(requestAnimationFrame)\n  const updateDraggableClass = throttleTimer(requestAnimationFrame)\n\n  // ensure DOM reads only happen once after a rPAF\n  const calculateGBCR = throttleTimer(requestPostAnimationFrame)\n\n  const clamp = x => Math.max(0, Math.min(1, x))\n\n  export default {\n    oncreate () {\n      this.observe('dragging', dragging => {\n        if (dragging) {\n          this.fire('dragStart')\n        } else {\n          const { x, y } = this.get()\n          this.fire('dragEnd')\n          this.fire('change', { x, y })\n        }\n      }, { init: false })\n      this.observe('indicatorStyle', () => {\n        updateIndicatorStyle(() => {\n          const { indicatorStyle } = this.get()\n          this.set({ indicatorStyleAfterRaf: indicatorStyle })\n        })\n      })\n      this.observe('computedIndicatorClass', () => {\n        updateIndicatorClass(() => {\n          const { computedIndicatorClass } = this.get()\n          this.set(({ computedIndicatorClassAfterRaf: computedIndicatorClass }))\n        })\n      })\n      this.observe('draggableClass', () => {\n        updateDraggableClass(() => {\n          const { draggableClass } = this.get()\n          this.set({ draggableClassAfterRaf: draggableClass })\n        })\n      })\n    },\n    data: () => ({\n      dragging: false,\n      draggableClass: '',\n      draggableClassAfterRaf: '',\n      indicatorClass: '',\n      computedIndicatorClassAfterRaf: '',\n      x: 0,\n      y: 0,\n      indicatorWidth: 0,\n      indicatorHeight: 0,\n      indicatorStyleAfterRaf: ''\n    }),\n    computed: {\n      indicatorStyle: ({ x, y, indicatorWidth, indicatorHeight }) => (\n        `left: calc(${x * 100}% - ${indicatorWidth / 2}px); top: calc(${y * 100}% - ${indicatorHeight / 2}px);`\n      ),\n      computedIndicatorClass: ({ dragging, indicatorClass }) => classname(dragging && 'grabbing', indicatorClass)\n    },\n    methods: {\n      observe,\n      onPointerDown (e) {\n        console.log('Draggable: onPointerDown')\n        const rect = this.refs.indicator.getBoundingClientRect()\n        console.log('Draggable: e.clientX', e.clientX)\n        console.log('Draggable: e.clientY', e.clientY)\n        this.set({\n          dragging: true,\n          dragOffsetX: e.clientX - rect.left,\n          dragOffsetY: e.clientY - rect.top\n        })\n      },\n      onPointerMove (e) {\n        console.log('Draggable: onPointerMove')\n        const { dragging, indicatorWidth, indicatorHeight, dragOffsetX, dragOffsetY } = this.get()\n        if (dragging) {\n          console.log('Draggable: dragging')\n          calculateGBCR(() => {\n            const rect = this.refs.area.getBoundingClientRect()\n            const offsetX = dragOffsetX - (indicatorWidth / 2)\n            const offsetY = dragOffsetY - (indicatorHeight / 2)\n            const x = clamp((e.clientX - rect.left - offsetX) / rect.width)\n            const y = clamp((e.clientY - rect.top - offsetY) / rect.height)\n            this.set({ x, y })\n          })\n        }\n      },\n      onPointerUp (e) {\n        console.log('Draggable: onPointerUp')\n        this.set({ dragging: false })\n      },\n      onPointerLeave (e) {\n        console.log('Draggable: onPointerLeave')\n        this.set({ dragging: false })\n      },\n      onClick (e) {\n        console.log('Draggable: onClick')\n        console.log('Draggable: target classList', e.target.classList)\n        console.log('Draggable: currentTarget classList', e.currentTarget.classList)\n        if (!e.target.classList.contains('draggable-indicator')) {\n          console.log('Draggable: onClick handled')\n          const rect = this.refs.area.getBoundingClientRect()\n          const x = clamp((e.clientX - rect.left) / rect.width)\n          const y = clamp((e.clientY - rect.top) / rect.height)\n          this.set({ x, y })\n          this.fire('change', { x, y })\n        }\n      }\n    },\n    events: {\n      pointerUp,\n      pointerDown,\n      pointerLeave,\n      pointerMove\n    }\n  }\n</script>\n","<form class=\"media-focal-point-container {className}\"\n      aria-label=\"Enter the focal point (X, Y) for this media\"\n      on:resize=\"measure()\"\n>\n  <div class=\"media-focal-point-image-container\" ref:container>\n    <img\n      width={intrinsicWidth}\n      height={intrinsicHeight}\n      class=\"media-focal-point-image\"\n      src={previewSrc}\n      alt={shortName}\n      on:load=\"onImageLoad()\"\n    />\n    <div class=\"media-focal-point-backdrop\"></div>\n    <div class=\"media-draggable-area\"\n         style={draggableAreaStyle}\n    >\n      <!-- 52px == 32px icon width + 10px padding -->\n      <Draggable\n        draggableClass=\"media-draggable-area-inner\"\n        indicatorClass=\"media-focal-point-indicator {imageLoaded ? '': 'hidden'} {dragging ? 'dragging' : ''}\"\n        indicatorWidth={52}\n        indicatorHeight={52}\n        x={indicatorX}\n        y={indicatorY}\n        on:dragStart=\"onDragStart()\"\n        on:dragEnd=\"onDragEnd()\"\n        on:change=\"onDraggableChange(event)\"\n      >\n        <SvgIcon\n          className=\"media-focal-point-indicator-svg\"\n          href=\"#fa-crosshairs\"\n        />\n      </Draggable>\n    </div>\n  </div>\n  <div class=\"media-focal-point-inputs\">\n    <div class=\"media-focal-point-input-pair\">\n      <label for=\"media-focal-point-x-input-{realm}\">\n        X\n      </label>\n      <input type=\"number\"\n             step=\"0.01\"\n             min=\"-1\"\n             max=\"1\"\n             inputmode=\"decimal\"\n             placeholder=\"0\"\n             id=\"media-focal-point-x-input-{realm}\"\n             bind:value=\"rawFocusX\"\n      />\n    </div>\n    <div class=\"media-focal-point-input-pair\">\n      <label for=\"media-focal-point-y-input-{realm}\">\n        Y\n      </label>\n      <input type=\"number\"\n             step=\"0.01\"\n             min=\"-1\"\n             max=\"1\"\n             inputmode=\"decimal\"\n             placeholder=\"0\"\n             id=\"media-focal-point-y-input-{realm}\"\n             bind:value=\"rawFocusY\"\n      />\n    </div>\n  </div>\n</form>\n<style>\n  .media-focal-point-container {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n  }\n  .media-focal-point-image-container {\n    flex: 1;\n    width: 100%;\n    position: relative;\n    min-height: 0;\n  }\n  .media-focal-point-image {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n  }\n\n  .media-focal-point-backdrop {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n  }\n\n  @supports (-webkit-backdrop-filter: blur(1px) saturate(1%)) or (backdrop-filter: blur(1px) saturate(1%)) {\n    .media-focal-point-backdrop {\n      -webkit-backdrop-filter: blur(1px) saturate(105%);\n      backdrop-filter: blur(1px) saturate(105%);\n      background-color: var(--focal-img-backdrop-filter);\n    }\n  }\n\n  @supports not ((-webkit-backdrop-filter: blur(1px) saturate(1%)) or (backdrop-filter: blur(1px) saturate(1%))) {\n    .media-focal-point-backdrop {\n      background-color: var(--focal-img-bg);\n    }\n  }\n\n  .media-focal-point-inputs {\n    display: flex;\n    padding: 10px;\n    justify-content: space-around;\n    width: auto;\n  }\n\n  .media-focal-point-input-pair {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .media-focal-point-input-pair:first-child {\n    margin-right: 10px;\n  }\n\n  .media-focal-point-input-pair input {\n    margin-left: 10px;\n    width: 0;\n    flex-grow: 1;\n  }\n\n  .media-draggable-area {\n    position: absolute;\n  }\n\n  :global(.media-focal-point-indicator) {\n    background: var(--focal-bg);\n    border-radius: 100%;\n    display: flex;\n  }\n\n  :global(.media-focal-point-indicator:hover) {\n    background: var(--focal-bg-hover);\n  }\n\n  :global(.media-focal-point-indicator.dragging) {\n    background: var(--focal-bg-drag);\n  }\n\n  :global(.media-draggable-area-inner) {\n    width: 100%;\n    height: 100%;\n  }\n\n  :global(.media-focal-point-indicator-svg) {\n    width: 32px;\n    height: 32px;\n    padding: 15px;\n    fill: var(--focal-color);\n  }\n\n  @media (max-width: 767px) {\n    .media-focal-point-inputs {\n      padding: 5px 20px;\n      justify-content: space-around;\n    }\n    :global(.media-focal-point-indicator-svg) {\n      width: 32px;\n      height: 32px;\n      padding: 12px;\n      fill: var(--focal-color);\n    }\n    .media-focal-point-input-pair label {\n      font-size: 1.1em;\n    }\n    .media-focal-point-input-pair input {\n      font-size: 1.1em;\n    }\n  }\n</style>\n<script>\n  import { store } from '../../../_store/store.js'\n  import { get } from '../../../_utils/lodash-lite.js'\n  import { observe } from 'svelte-extras'\n  import { scheduleIdleTask } from '../../../_utils/scheduleIdleTask.js'\n  import { coordsToPercent, percentToCoords } from '../../../_utils/coordsToPercent.js'\n  import SvgIcon from '../../SvgIcon.html'\n  import { intrinsicScale } from '../../../_thirdparty/intrinsic-scale/intrinsicScale.js'\n  import { resize } from '../../../_utils/events.js'\n  import Draggable from '../../Draggable.html'\n\n  const parseAndValidateFloat = rawText => {\n    let float = parseFloat(rawText)\n    if (Number.isNaN(float)) {\n      float = 0\n    }\n    float = Math.min(1, float)\n    float = Math.max(-1, float)\n    float = Math.round(float * 100) / 100\n    return float\n  }\n\n  export default {\n    oncreate () {\n      this.setupSyncFromStore()\n      this.setupSyncToStore()\n    },\n    components: {\n      SvgIcon,\n      Draggable\n    },\n    data: () => ({\n      dragging: false,\n      rawFocusX: '0',\n      rawFocusY: '0',\n      containerWidth: 0,\n      containerHeight: 0,\n      imageLoaded: false,\n      className: ''\n    }),\n    store: () => store,\n    computed: {\n      mediaItem: ({ media, index }) => get(media, [index]),\n      focusX: ({ mediaItem }) => get(mediaItem, ['focusX'], 0),\n      focusY: ({ mediaItem }) => get(mediaItem, ['focusY'], 0),\n      previewSrc: ({ mediaItem }) => mediaItem.data.preview_url,\n      nativeWidth: ({ mediaItem }) => (\n        get(mediaItem, ['data', 'meta', 'original', 'width'], 300) // TODO: Pleroma placeholder\n      ),\n      nativeHeight: ({ mediaItem }) => (\n        get(mediaItem, ['data', 'meta', 'original', 'height'], 200) // TODO: Pleroma placeholder\n      ),\n      shortName: ({ mediaItem }) => (\n        // sometimes we no longer have the file, e.g. in a delete and redraft situation,\n        // so fall back to the description if it was provided\n        get(mediaItem, ['file', 'name']) || get(mediaItem, ['description']) || 'media'\n      ),\n      // intrinsic width/height to avoid layout shifting https://chromestatus.com/feature/5695266130755584\n      // note pleroma does not give us intrinsic width/height\n      intrinsicWidth: ({ mediaItem }) => get(mediaItem, ['data', 'meta', 'original', 'width']),\n      intrinsicHeight: ({ mediaItem }) => get(mediaItem, ['data', 'meta', 'original', 'height']),\n      scale: ({ nativeWidth, nativeHeight, containerWidth, containerHeight }) => (\n        intrinsicScale(containerWidth, containerHeight, nativeWidth, nativeHeight)\n      ),\n      scaleWidth: ({ scale }) => scale.width,\n      scaleHeight: ({ scale }) => scale.height,\n      scaleX: ({ scale }) => scale.x,\n      scaleY: ({ scale }) => scale.y,\n      indicatorX: ({ focusX }) => (coordsToPercent(focusX) / 100),\n      indicatorY: ({ focusY }) => ((100 - coordsToPercent(focusY)) / 100),\n      draggableAreaStyle: ({ scaleWidth, scaleHeight, scaleX, scaleY }) => (\n        `top: ${scaleY}px; left: ${scaleX}px; width: ${scaleWidth}px; height: ${scaleHeight}px;`\n      )\n    },\n    methods: {\n      observe,\n      setupSyncFromStore () {\n        this.observe('mediaItem', mediaItem => {\n          const { rawFocusX, rawFocusY } = this.get()\n\n          const syncFromStore = (rawKey, rawFocus, key) => {\n            const focus = get(mediaItem, [key], 0) || 0\n            const focusAsString = focus.toString()\n            if (focusAsString !== rawFocus) {\n              this.set({ [rawKey]: focusAsString })\n            }\n          }\n\n          syncFromStore('rawFocusX', rawFocusX, 'focusX')\n          syncFromStore('rawFocusY', rawFocusY, 'focusY')\n        })\n      },\n      setupSyncToStore () {\n        const observeAndSync = (rawKey, key) => {\n          this.observe(rawKey, rawFocus => {\n            const { realm, index, media } = this.get()\n            const rawFocusDecimal = parseAndValidateFloat(rawFocus)\n            if (media[index][key] !== rawFocusDecimal) {\n              media[index][key] = rawFocusDecimal\n              this.store.setComposeData(realm, { media })\n              scheduleIdleTask(() => this.store.save())\n            }\n          }, { init: false })\n        }\n\n        observeAndSync('rawFocusX', 'focusX')\n        observeAndSync('rawFocusY', 'focusY')\n      },\n      onDraggableChange ({ x, y }) {\n        scheduleIdleTask(() => {\n          const focusX = parseAndValidateFloat(percentToCoords(x * 100))\n          const focusY = parseAndValidateFloat(percentToCoords(100 - (y * 100)))\n          const { realm, index, media } = this.get()\n          if (media[index].focusX !== focusX || media[index].focusY !== focusY) {\n            media[index].focusX = focusX\n            media[index].focusY = focusY\n            this.store.setComposeData(realm, { media })\n            scheduleIdleTask(() => this.store.save())\n          }\n        })\n      },\n      onDragStart () {\n        this.set({ dragging: true })\n      },\n      onDragEnd () {\n        this.set({ dragging: false })\n      },\n      measure () {\n        requestAnimationFrame(() => {\n          if (!this.refs.container) {\n            return\n          }\n          const rect = this.refs.container.getBoundingClientRect()\n          this.set({\n            containerWidth: rect.width,\n            containerHeight: rect.height\n          })\n        })\n      },\n      onImageLoad () {\n        this.measure()\n        this.set({ imageLoaded: true })\n      }\n    },\n    events: {\n      resize\n    }\n  }\n</script>\n","export const importTesseractWorker = () => import(\n  '../../_utils/tesseractWorker.js'\n).then(mod => mod.default)\n","import { importTesseractWorker } from '../_utils/asyncModules/importTesseractWorker.js'\n\nconst DESTROY_WORKER_DELAY = 300000 // 5 minutes\n\nlet worker\nlet destroyWorkerHandle\n\n// TODO: it seems hacky that we have to spy on the tesseract worker to figure out its progress\nconst steps = [\n  { status: 'loading tesseract core', proportion: 0.1 },\n  { status: 'initializing tesseract', proportion: 0.05 },\n  { status: 'loading language traineddata', proportion: 0.1 },\n  { status: 'initializing api', proportion: 0.2 },\n  { status: 'recognizing text', proportion: 0.55 }\n]\n\nif (process.env.NODE_ENV !== 'production') {\n  if (steps.map(_ => _.proportion).reduce((a, b) => a + b, 0) !== 1) {\n    console.error('Steps do not add up to 1! You should probably fix this.')\n  }\n}\n\nasync function spyOnWorkerProgress (onProgress, runnable) {\n  const listener = event => {\n    const { data } = event\n    if (onProgress && data.status === 'progress' && steps.find(({ status }) => status === data.data.status)) {\n      onProgress(getTotalProgress(data.data))\n    }\n  }\n\n  worker.worker.addEventListener('message', listener)\n  try {\n    const res = await runnable()\n    return res\n  } finally {\n    worker.worker.removeEventListener('message', listener)\n  }\n}\n\nasync function initWorker (onProgress) {\n  if (!worker) {\n    worker = await (await importTesseractWorker())()\n    await spyOnWorkerProgress(onProgress, async () => {\n      await worker.loadLanguage('eng')\n      await worker.initialize('eng')\n    })\n  }\n}\n\nfunction destroyWorker () {\n  console.log('destroying tesseract worker')\n  if (worker) {\n    worker.terminate()\n    worker = null\n  }\n}\n\n// destroy the worker after a delay to reduce memory usage\nfunction scheduleDestroyWorker () {\n  cancelDestroyWorker()\n  destroyWorkerHandle = setTimeout(destroyWorker, DESTROY_WORKER_DELAY)\n}\n\nfunction cancelDestroyWorker () {\n  if (destroyWorkerHandle) {\n    clearTimeout(destroyWorkerHandle)\n    destroyWorkerHandle = null\n  }\n}\n\nfunction getTotalProgress (progressInfo) {\n  const idx = steps.findIndex(({ status }) => progressInfo.status === status)\n  let total = 0\n  for (let i = 0; i < idx; i++) {\n    total += steps[i].proportion\n  }\n  total += steps[idx].proportion * progressInfo.progress\n  return total\n}\n\nasync function recognize (url, onProgress) {\n  return spyOnWorkerProgress(onProgress, () => worker.recognize(url, 'eng'))\n}\n\nexport async function runTesseract (url, onProgress) {\n  cancelDestroyWorker()\n  await initWorker(onProgress)\n  try {\n    const res = await recognize(url, onProgress)\n    console.log('result', res)\n    return res.data.text\n  } finally {\n    scheduleDestroyWorker()\n  }\n}\n","<div class=\"media-alt-editor {className}\">\n  <textarea\n    id=\"the-media-alt-input-{realm}-{index}\"\n    class=\"media-alt-input\"\n    placeholder=\"Describe for visually impaired people\"\n    ref:textarea\n    bind:value=rawText\n  ></textarea>\n  <label for=\"the-media-alt-input-{realm}-{index}\" class=\"sr-only\">\n    Describe for visually impaired people\n  </label>\n  <LengthGauge\n    {length}\n    {overLimit}\n    max={mediaAltCharLimit}\n  />\n  <LengthIndicator\n    {length}\n    {overLimit}\n    max={mediaAltCharLimit}\n    style=\"width: 100%; text-align: right;\"\n  />\n  <button class=\"extract-text-button\" type=\"button\"\n          on:click=\"onClick()\"\n          disabled={extracting}\n          aria-label={extractButtonLabel}\n  >\n    <SvgIcon href=\"{extracting ? '#fa-spinner' : '#fa-magic'}\"\n             className=\"extract-text-svg {extracting ? 'spin' : ''}\"\n    />\n    <span>{extractButtonText}</span>\n  </button>\n  <LengthGauge\n    length={extractionProgress}\n    overLimit={false}\n    max={100}\n  />\n</div>\n<style>\n  .media-alt-editor {\n    display: flex;\n    flex-direction: column;\n  }\n  .media-alt-input {\n    padding: 5px;\n    border: 1px solid var(--input-border);\n    min-height: 40px;\n    resize: none;\n    overflow: hidden;\n    word-wrap: break-word;\n    /* Text must be at least 16px or else iOS Safari zooms in */\n    font-size: 1.2em;\n    max-height: 70vh;\n  }\n\n  .extract-text-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10px;\n  }\n\n  .extract-text-button span {\n    margin-left: 15px;\n  }\n\n  :global(.extract-text-svg) {\n    fill: var(--button-text);\n    width: 18px;\n    height: 18px;\n  }\n\n  @media (max-height: 767px) {\n    .media-alt-input {\n      max-height: 40vh;\n      width: 100%;\n      overflow: auto;\n    }\n    .extract-text-button {\n      margin-top: 0;\n    }\n    button.extract-text-button {\n      padding: 7px 10px;\n    }\n  }\n\n  @media (min-height: 768px) {\n    .media-alt-input {\n      min-width: 250px;\n      min-height: 75px;\n    }\n  }\n</style>\n<script>\n  import { requestPostAnimationFrame } from '../../../_utils/requestPostAnimationFrame.js'\n  import { mark, stop } from '../../../_utils/marks.js'\n  import { autosize } from '../../../_thirdparty/autosize/autosize.js'\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../../../_utils/throttleTimer.js'\n  import { get } from '../../../_utils/lodash-lite.js'\n  import { store } from '../../../_store/store.js'\n  import { MEDIA_ALT_CHAR_LIMIT } from '../../../_static/media.js'\n  import LengthGauge from '../../LengthGauge.html'\n  import LengthIndicator from '../../LengthIndicator.html'\n  import { length } from 'stringz'\n  import { runTesseract } from '../../../_utils/runTesseract.js'\n  import SvgIcon from '../../SvgIcon.html'\n  import { toast } from '../../toast/toast.js'\n  import { formatIntl } from '../../../_utils/formatIntl.js'\n  import { database } from '../../../_database/database.js'\n\n  const updateRawTextInStore = throttleTimer(requestPostAnimationFrame)\n\n  export default {\n    oncreate () {\n      this.setupAutosize()\n      this.setupSyncFromStore()\n      this.setupSyncToStore()\n    },\n    ondestroy () {\n      this.teardownAutosize()\n    },\n    store: () => store,\n    data: () => ({\n      rawText: '',\n      mediaAltCharLimit: MEDIA_ALT_CHAR_LIMIT,\n      extracting: false,\n      className: '',\n      extractionProgress: 0\n    }),\n    computed: {\n      length: ({ rawText }) => length(rawText || ''),\n      overLimit: ({ mediaAltCharLimit, length }) => length > mediaAltCharLimit,\n      url: ({ media, index }) => get(media, [index, 'data', 'url']),\n      mediaId: ({ media, index }) => get(media, [index, 'data', 'id']),\n      extractButtonText: ({ extracting }) => extracting ? \"Extracting text…\" : \"Extract text from image\",\n      extractButtonLabel: ({ extractButtonText, extractionProgress, extracting }) => {\n        if (extracting) {\n          return formatIntl([\"Extracting text (\",[\"percent\"],\"% complete)…\"], { percent: Math.round(extractionProgress) })\n        }\n        return extractButtonText\n      }\n    },\n    methods: {\n      observe,\n      setupSyncFromStore () {\n        this.observe('media', media => {\n          media = media || []\n          const { index, rawText } = this.get()\n          const text = get(media, [index, 'description'], '')\n          if (rawText !== text) {\n            this.set({ rawText: text })\n          }\n        })\n      },\n      setupSyncToStore () {\n        this.observe('rawText', rawText => {\n          updateRawTextInStore(() => {\n            const { realm, index, media } = this.get()\n            if (media[index].description !== rawText) {\n              media[index].description = rawText\n              this.store.setComposeData(realm, { media })\n              this.store.save()\n            }\n            this.fire('resize')\n          })\n        }, { init: false })\n      },\n      setupAutosize () {\n        const textarea = this.refs.textarea\n        requestPostAnimationFrame(() => {\n          mark('autosize()')\n          autosize(textarea)\n          stop('autosize()')\n        })\n      },\n      teardownAutosize () {\n        mark('autosize.destroy()')\n        autosize.destroy(this.refs.textarea)\n        stop('autosize.destroy()')\n      },\n      measure () {\n        autosize.update(this.refs.textarea)\n      },\n      async onClick () {\n        this.set({ extracting: true })\n        try {\n          const { url, mediaId } = this.get()\n          const onProgress = progress => {\n            requestAnimationFrame(() => {\n              this.set({ extractionProgress: progress * 100 })\n            })\n          }\n          const file = await database.getCachedMediaFile(mediaId)\n          let text\n          if (file) { // Avoid downloading from the network a file that the user *just* uploaded\n            const fileUrl = URL.createObjectURL(file)\n            try {\n              text = await runTesseract(fileUrl, onProgress)\n            } finally {\n              URL.revokeObjectURL(fileUrl)\n            }\n          } else {\n            text = await runTesseract(url, onProgress)\n          }\n          const { media, index, realm } = this.get()\n          if (media[index].description !== text) {\n            media[index].description = text\n            this.store.setComposeData(realm, { media })\n            this.store.save()\n          }\n        } catch (err) {\n          console.error(err)\n          /* no await */ toast.say(\"Unable to extract text.\")\n        } finally {\n          this.set({ extracting: false })\n          setTimeout(() => {\n            requestAnimationFrame(() => {\n              this.set({ extractionProgress: 0 })\n            })\n          }, 400)\n        }\n      }\n    },\n    components: {\n      LengthGauge,\n      LengthIndicator,\n      SvgIcon\n    }\n  }\n</script>\n","<ModalDialog\n  {id}\n  {label}\n  {title}\n  background=\"var(--main-bg)\"\n  className=\"media-edit-dialog\"\n  on:show=\"measure()\"\n>\n  <div class=\"media-edit-dialog-container\">\n    <div class=\"media-edit-header-and-item media-edit-header-and-item-alt\">\n      <h2>Description</h2>\n      <MediaAltEditor\n        className=\"media-edit-item\"\n        {realm}\n        {index}\n        {media}\n        on:resize=\"measure()\"\n        ref:altEditor\n      />\n    </div>\n    {#if type === 'image' || type === 'gifv'}\n      <div class=\"media-edit-header-and-item media-edit-header-and-item-focal\">\n        <h2>Preview (focal point)</h2>\n        <MediaFocalPointEditor\n          className=\"media-edit-item\"\n          {realm}\n          {index}\n          {media}\n          ref:focalPointEditor\n        />\n      </div>\n    {/if}\n  </div>\n</ModalDialog>\n<style>\n  :global(.media-edit-dialog) {\n    max-width: calc(100%);\n  }\n\n  .media-edit-dialog-container {\n    display: flex;\n    flex-direction: row;\n    max-height: calc(100% - 44px); /* 44px X button height */\n    height: 100%;\n    width: 100%;\n  }\n\n  .media-edit-header-and-item {\n    padding: 10px;\n  }\n\n  .media-edit-header-and-item h2 {\n    margin-bottom: 10px;\n  }\n\n  @media (max-width: 767px) {\n    .media-edit-dialog-container {\n      flex-direction: column;\n      overflow: hidden;\n    }\n\n    .media-edit-dialog-container {\n      max-height: calc(100% - 25px); /* 25px X button height */\n    }\n\n    .media-edit-header-and-item {\n      flex: 1;\n      min-height: 0;\n      padding: 5px 10px;\n    }\n    .media-edit-header-and-item {\n      display: flex;\n      flex-direction: column;\n    }\n\n    :global(.media-edit-item) {\n      flex: 1;\n      min-height: 0;\n    }\n    .media-edit-header-and-item-alt {\n      flex-basis: 40%;\n    }\n    .media-edit-header-and-item-focal {\n      flex-basis: 60%;\n    }\n\n    .media-edit-header-and-item h2 {\n      font-size: 1.2em;\n      margin-bottom: 5px;\n    }\n  }\n\n</style>\n<script>\n  import ModalDialog from './ModalDialog.html'\n  import { show } from '../helpers/showDialog.js'\n  import { close } from '../helpers/closeDialog.js'\n  import { oncreate } from '../helpers/onCreateDialog.js'\n  import MediaFocalPointEditor from '../components/MediaFocalPointEditor.html'\n  import MediaAltEditor from '../components/MediaAltEditor.html'\n  import { store } from '../../../_store/store.js'\n  import { get } from '../../../_utils/lodash-lite.js'\n\n  export default {\n    oncreate,\n    components: {\n      ModalDialog,\n      MediaFocalPointEditor,\n      MediaAltEditor\n    },\n    methods: {\n      show,\n      close,\n      measure () {\n        this.refs.altEditor.measure()\n        if (this.refs.focalPointEditor) {\n          this.refs.focalPointEditor.measure()\n        }\n      }\n    },\n    store: () => store,\n    computed: {\n      media: ({ $currentInstance, $composeData, realm }) => (\n        get($composeData, [$currentInstance, realm, 'media'])\n      )\n    }\n  }\n</script>\n","import MediaFocalPointDialog from '../components/MediaEditDialog.html'\nimport { showDialog } from './showDialog.js'\n\nexport default function showMediaEditDialog (realm, index, type) {\n  return showDialog(MediaFocalPointDialog, {\n    label: \"Edit media\",\n    title: \"Edit media\",\n    realm,\n    index,\n    type\n  })\n}\n","// via https://github.com/bfred-it/intrinsic-scale/blob/3d058f79902653484092ad9a2f3e1d9a3d03f09e/index.js\n\nexport const intrinsicScale = (parentWidth, parentHeight, childWidth, childHeight) => {\n  const doRatio = childWidth / childHeight\n  const cRatio = parentWidth / parentHeight\n  let width = parentWidth\n  let height = parentHeight\n\n  if (doRatio > cRatio) {\n    height = width / doRatio\n  } else {\n    width = height * doRatio\n  }\n\n  return {\n    width,\n    height,\n    x: (parentWidth - width) / 2,\n    y: (parentHeight - height) / 2\n  }\n}\n"],"names":["hasPointerEvents","PointerEvent","isTouchDevice","document","test","navigator","userAgent","pointerDown","pointerUp","pointerLeave","pointerMove","createEventListener","event","node","callback","listener","e","clientX","clientY","addEventListener","destroy","removeEventListener","updateIndicatorStyle","throttleTimer","requestAnimationFrame","updateIndicatorClass","updateDraggableClass","calculateGBCR","requestPostAnimationFrame","clamp","x","Math","max","min","observe","onPointerDown","rect","this","refs","indicator","getBoundingClientRect","set","dragging","dragOffsetX","left","dragOffsetY","top","onPointerMove","indicatorWidth","indicatorHeight","get","area","offsetX","offsetY","width","y","height","onPointerUp","onPointerLeave","onClick","target","classList","currentTarget","contains","fire","init","indicatorStyle","indicatorStyleAfterRaf","computedIndicatorClass","computedIndicatorClassAfterRaf","draggableClass","draggableClassAfterRaf","indicatorClass","classname","parseAndValidateFloat","rawText","float","parseFloat","Number","isNaN","round","setupSyncFromStore","mediaItem","rawFocusX","rawFocusY","syncFromStore","rawKey","rawFocus","key","focusAsString","toString","setupSyncToStore","observeAndSync","realm","index","media","rawFocusDecimal","store","setComposeData","scheduleIdleTask","save","onDraggableChange","focusX","focusY","onDragStart","onDragEnd","measure","container","containerWidth","containerHeight","onImageLoad","imageLoaded","className","indicatorX","indicatorY","intrinsicWidth","intrinsicHeight","previewSrc","shortName","draggableAreaStyle","data","preview_url","nativeWidth","nativeHeight","intrinsicScale","scale","coordsToPercent","scaleWidth","scaleHeight","scaleX","scaleY","importTesseractWorker","then","mod","default","DESTROY_WORKER_DELAY","worker","destroyWorkerHandle","steps","status","proportion","async","spyOnWorkerProgress","onProgress","runnable","find","progressInfo","idx","findIndex","total","i","progress","getTotalProgress","destroyWorker","terminate","cancelDestroyWorker","clearTimeout","runTesseract","url","loadLanguage","initialize","initWorker","res","recognize","text","setTimeout","updateRawTextInStore","description","setupAutosize","textarea","autosize","s","teardownAutosize","update","extracting","mediaId","extractionProgress","file","database","getCachedMediaFile","fileUrl","URL","createObjectURL","revokeObjectURL","err","console","error","toast","say","mediaAltCharLimit","length","overLimit","extractButtonText","extractButtonLabel","formatIntl","percent","show","close","altEditor","focalPointEditor","type","id","label","title","$currentInstance","$composeData","showMediaEditDialog","parentWidth","parentHeight","childWidth","childHeight","doRatio"],"sourceRoot":""}