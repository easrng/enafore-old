{"version":3,"file":"4977.9b31dfc980e061487f84.4977.js","mappings":"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","sources":["webpack:///./src/routes/_components/MediaControlsFix.html","webpack:///./src/routes/_components/dialog/components/MediaInDialog.html","webpack:///./src/routes/_components/dialog/components/PinchZoomable.html","webpack:///./src/routes/_components/dialog/components/MediaDialog.html","webpack:///./src/routes/_components/dialog/creators/showMediaDialog.js","webpack:///./src/routes/_thirdparty/intrinsic-scale/intrinsicScale.js"],"sourcesContent":["<!--\n  Nasty hack for video/audio with controls in dialogs. Audio/video controls in a dialog\n  can't work probably with tab focusing per aria-practices guidelines, so we add\n  an extra focusable element after the video/audio element that just loops focus back around\n  to the beginning of the dialog.\n  Things that are impossible to fix, however:\n    - Shift-Tab cycling to the last element inside the video/audio shadow\n    - Pressing Esc while inside the video/audio shadow closes the dialog\n  See: https://github.com/w3c/aria-practices/issues/1772\n-->\n<div class=\"media-controls-fix\"\n     on:focus=\"onFocus()\"\n     on:documentKeydown=\"onDocumentKeydown(event)\"\n     aria-hidden=\"true\"\n     tabindex=\"0\"\n></div>\n<style>\n  .media-controls-fix {\n    width: 1px;\n    height: 1px;\n    pointer-events: none;\n    position: absolute;\n  }\n</style>\n<script>\n  import { FOCUSABLE_ELEMENTS_QUERY } from '../_thirdparty/a11y-dialog/a11y-dialog.js'\n  import { documentKeydown } from '../_utils/events.js'\n\n  export default {\n    data: () => ({\n      tabKeyHadShift: undefined\n    }),\n    events: {\n      documentKeydown\n    },\n    methods: {\n      onDocumentKeydown (event) {\n        if (event.key === 'Tab') {\n          this.set({ tabKeyHadShift: !!event.shiftKey })\n        }\n      },\n      onFocus () {\n        const { tabKeyHadShift } = this.get()\n        const modal = document.querySelector('.modal-dialog-contents')\n        if (tabKeyHadShift) { // user typed Shift-Tab\n          // focus the last element in the modal dialog which is not this element.\n          // This _should_ be the last element inside of the video/audio controls, but it's not possible\n          // to target these shadow elements, so just target the whole video/audio controls.\n          const elements = modal.querySelectorAll(FOCUSABLE_ELEMENTS_QUERY)\n          elements[elements.length - 2].focus()\n        } else { // user typed Tab\n          // focus the first element in the modal dialog, which should be the X (close) button\n          modal.querySelector(FOCUSABLE_ELEMENTS_QUERY).focus()\n        }\n      }\n    }\n  }\n</script>\n","{#if type === 'video'}\n  <video\n    class=\"media-fit\"\n    aria-label={description}\n    src={url}\n    {poster}\n    controls\n    width={intrinsicWidth}\n    height={intrinsicHeight}\n    ref:player\n  />\n  <MediaControlsFix />\n{:elseif type === 'audio'}\n  <div class=\"audio-player-container\">\n    <audio\n      class=\"audio-player\"\n      aria-label={description}\n      src={url}\n      controls\n      ref:player\n    />\n  </div>\n  <MediaControlsFix />\n{:elseif type === 'gifv'}\n  <video\n    class=\"media-fit\"\n    aria-label={description}\n    src={url}\n    {poster}\n    autoplay\n    muted\n    loop\n    webkit-playsinline\n    playsinline\n    width={intrinsicWidth}\n    height={intrinsicHeight}\n  />\n{:elseif type === 'unknown'}\n  <div class=\"file-container\">\n    <a href={url} class=\"file-link\" rel=\"noopener\" target=\"_blank\">\n      <SvgIcon className=\"file-modal-icon\" href=\"#fa-file\" />\n      <div class=\"file-label\">Download File</div>\n    </a>\n  </div>\n{:else}\n  <img\n    class=\"media-fit\"\n    alt={description}\n    title={description}\n    src={url}\n    width={intrinsicWidth}\n    height={intrinsicHeight}\n  />\n{/if}\n<style>\n  .media-fit {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n  }\n  .audio-player-container {\n    min-height: 50vh;\n    min-width: 400px;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: var(--audio-bg);\n  }\n  .audio-player {\n    padding: 30px 10px;\n    margin: 10px;\n  }\n  .file-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    min-height: 200px;\n  }\n  .file-link {\n    background: var(--audio-bg);\n    border-radius: 6px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 10px 30px;\n    font-size: 1rem;\n  }\n  :global(.file-modal-icon) {\n    fill: currentColor;\n    width: 72px;\n    height: 72px;\n    margin: 10px;\n  }\n  @media (max-width: 767px) {\n    .audio-player-container {\n      min-height: 200px;\n      min-width: calc(100vw - 40px);\n      align-items: center;\n    }\n  }\n</style>\n<script>\n  import { get } from '../../../_utils/lodash-lite.js'\n  import MediaControlsFix from '../../MediaControlsFix.html'\n  import SvgIcon from '../../SvgIcon.html'\n\n  export default {\n    computed: {\n      type: ({ media }) => media.type,\n      url: ({ media }) => media.url,\n      description: ({ media }) => media.description || '',\n      poster: ({ media }) => media.preview_url,\n      static_url: ({ media }) => media.static_url,\n      // intrinsic width/height to avoid layout shifting https://chromestatus.com/feature/5695266130755584\n      // note pleroma does not give us intrinsic width/height\n      intrinsicWidth: ({ media }) => get(media, ['meta', 'original', 'width']),\n      intrinsicHeight: ({ media }) => get(media, ['meta', 'original', 'height'])\n    },\n    ondestroy () {\n      const player = this.refs.player\n      if (player && !player.paused) {\n        player.pause()\n      }\n    },\n    components: {\n      MediaControlsFix,\n      SvgIcon\n    }\n  }\n</script>\n","<div class=\"pinch-zoom {className ? className : ''}\" >\n  <pinch-zoom class=\"pinch-zoom-inner\" ref:node>\n    <slot></slot>\n  </pinch-zoom>\n  <IconButton\n    className=\"pinch-zoom-button pinch-zoom-button-zoom-out\"\n    muted={true}\n    label=\"Zoom out\"\n    href=\"#fa-search-minus\"\n    on:click=\"zoomOut()\"\n  />\n  <IconButton\n    className=\"pinch-zoom-button pinch-zoom-button-zoom-in\"\n    muted={true}\n    label=\"Zoom in\"\n    href=\"#fa-search-plus\"\n    on:click=\"zoomIn()\"\n  />\n</div>\n<style>\n  .pinch-zoom {\n    position: relative;\n  }\n  .pinch-zoom-inner {\n    width: 100%;\n    height: 100%;\n  }\n\n  :global(.icon-button.pinch-zoom-button) {\n    position: absolute;\n    z-index: 110;\n    bottom: 10px;\n    background: var(--mask-opaque-bg);\n  }\n\n  :global(.pinch-zoom-button-zoom-in) {\n    right: 10px;\n  }\n\n  :global(.pinch-zoom-button-zoom-out) {\n    left: 10px;\n  }\n\n  @media (max-width: 767px) {\n    :global(.pinch-zoom-button-zoom-in) {\n      right: 5px;\n    }\n\n    :global(.pinch-zoom-button-zoom-out) {\n      left: 5px;\n    }\n  }\n\n  @media (max-width: 320px) {\n    :global(.icon-button.pinch-zoom-button) {\n      padding-left: 5px;\n      padding-right: 5px;\n    }\n  }\n</style>\n<script>\n  import IconButton from '../../IconButton.html'\n  import 'pinch-zoom-element'\n\n  const ZOOM_INCREMENT = 0.1\n\n  export default {\n    components: {\n      IconButton\n    },\n    methods: {\n      zoomIn () {\n        this.zoomBy(ZOOM_INCREMENT)\n      },\n      zoomOut () {\n        this.zoomBy(-ZOOM_INCREMENT)\n      },\n      zoomBy (increment) {\n        const { node } = this.refs\n        const scale = node.scale || 1\n        node.scaleTo(scale + increment, {\n          originX: '50%',\n          originY: '50%'\n        })\n      }\n    }\n  }\n</script>\n","<ModalDialog\n  {id}\n  {label}\n  background=\"var(--muted-modal-bg)\"\n  muted=\"true\"\n  clickHeaderToClose={true}\n  className=\"media-modal-dialog\"\n  on:show=\"onShow()\"\n>\n  <div class=\"media-container\">\n    <ul class=\"media-scroll\" ref:scroller  on:click=\"onImageClick(event)\">\n      {#each mediaItems as media (media.id)}\n        <li class=\"media-scroll-item\">\n          <div class=\"media-scroll-item-inner\">\n            <div class=\"media-scroll-item-image-area\">\n                {#if canPinchZoom && pinchZoomMode}\n                  <PinchZoomable className='media-pinch-zoom' >\n                    <MediaInDialog {media} />\n                  </PinchZoomable>\n                {:else}\n                  <MediaInDialog {media} />\n                {/if}\n            </div>\n          </div>\n        </li>\n      {/each}\n    </ul>\n    <div class=\"media-controls-outside\" on:click=\"onMediaControlsClick(event)\">\n      {#if canPinchZoom}\n        <IconButton\n          className=\"media-control-button media-control-button-dummy-spacer\"\n          svgClassName=\"media-control-button-svg\"\n          href=\"#fa-search\"\n          label=\"\"\n          ariaHidden={true}\n        />\n      {/if}\n      {#if dots.length > 1}\n        <!-- Roughly based on https://www.w3.org/WAI/tutorials/carousels/functionality/\n             Since this toolbar contains a mix of left/right/first/second/third/fourth buttons,\n             just list them and explicitly label the current one as \"current.\" -->\n        <ul class=\"media-controls\" aria-label=\"Navigate media items\">\n            <li class=\"media-control\">\n              <IconButton\n                className=\"media-control-button\"\n                svgClassName=\"media-control-button-svg\"\n                disabled={scrolledItem === 0}\n                label=\"Show previous media\"\n                href=\"#fa-angle-left\"\n                on:click=\"prev()\"\n              />\n            </li>\n            {#each dots as dot, i (dot.i)}\n              <li class=\"media-control\">\n                <IconButton\n                  className=\"media-control-button\"\n                  svgClassName=\"media-control-button-svg\"\n                  pressable={true}\n                  label=\"{createLabel(i, false)}\"\n                  pressedLabel=\"{createLabel(i, true)}\"\n                  pressed={i === scrolledItem}\n                  href={i === scrolledItem ? '#fa-circle' : '#fa-circle-o'}\n                  sameColorWhenPressed={true}\n                  on:click=\"onButtonClick(i)\"\n                />\n              </li>\n            {/each}\n            <li class=\"media-control\">\n              <IconButton\n                className=\"media-control-button\"\n                svgClassName=\"media-control-button-svg\"\n                disabled={scrolledItem === length - 1}\n                label=\"Show next media\"\n                href=\"#fa-angle-right\"\n                on:click=\"next()\"\n              />\n            </li>\n        </ul>\n      {/if}\n      {#if canPinchZoom}\n        <IconButton\n          className=\"media-control-button\"\n          svgClassName=\"media-control-button-svg\"\n          pressable={true}\n          pressed={pinchZoomMode}\n          label=\"Pinch-zoom mode\"\n          pressedLabel=\"Exit pinch-zoom mode\"\n          href=\"#fa-search\"\n          on:click=\"togglePinchZoomMode()\"\n        />\n      {/if}\n    </div>\n  </div>\n</ModalDialog>\n\n{#if !$leftRightChangesFocus }\n  <Shortcut scope='modal-{id}' key=\"ArrowLeft\" on:pressed=\"prev()\" />\n  <Shortcut scope='modal-{id}' key=\"ArrowRight\" on:pressed=\"next()\" />\n{/if}\n<style>\n  :global(.media-modal-dialog) {\n    max-width: 100%;\n  }\n  .media-container {\n    height: calc(100% - 64px); /* 44px X button height + 20px padding */\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n  }\n  .media-scroll {\n    -webkit-overflow-scrolling: touch;\n    display: flex;\n    align-items: center;\n    overflow-x: auto;\n    width: 100%;\n    flex: 1;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n  }\n\n  ul.media-scroll {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n\n  .media-scroll::-webkit-scrollbar {\n    display: none;\n  }\n\n  .media-scroll-item {\n    height: 100%;\n  }\n  .media-scroll-item-inner {\n    width: 100vw;\n    height: 100%;\n    overflow: hidden;\n  }\n  .media-scroll-item-image-area {\n    height: calc(100% - 20px); /* 15px padding top + 5px padding bottom */\n    width: calc(100% - 10px); /* 5px padding left + 5px padding right */\n    padding: 15px 5px 5px 5px;\n  }\n\n  .media-controls-outside {\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    overflow: auto;\n  }\n\n  .media-controls {\n    display: flex;\n    justify-content: space-between;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n  li.media-control {\n    margin: 0;\n    padding: 0;\n    display: flex;\n  }\n\n  :global(.media-pinch-zoom) {\n    width: 100%;\n    height: 100%;\n  }\n\n  :global(.media-control-button-dummy-spacer) {\n    visibility: hidden;\n  }\n\n  :global(.icon-button.media-control-button) {\n    margin: 0 5px;\n  }\n\n  :global(.media-control-button-svg) {\n    /* ensure that click events do not fall on these svgs */\n    pointer-events: none;\n  }\n\n  @media (max-width: 767px) {\n    :global(.icon-button.media-control-button) {\n      margin: 0;\n      padding-left: 5px;\n      padding-right: 5px;\n    }\n  }\n\n  @media (max-width: 320px) {\n    :global(.icon-button.media-control-button) {\n      padding-left: 2px;\n      padding-right: 2px;\n    }\n  }\n\n  @supports (scroll-snap-align: start) {\n    /* modern scroll snap points */\n    .media-scroll {\n      scroll-snap-type: x mandatory;\n    }\n    .media-scroll-item {\n      scroll-snap-align: center;\n    }\n  }\n  @supports not (scroll-snap-align: start) {\n    /* old scroll snap points spec */\n    .media-scroll {\n      -webkit-scroll-snap-type: mandatory;\n              scroll-snap-type: mandatory;\n      -webkit-scroll-snap-destination: 0% center;\n              scroll-snap-destination: 0% center;\n      -webkit-scroll-snap-points-x: repeat(100%);\n              scroll-snap-points-x: repeat(100%);\n    }\n\n    .media-scroll-item {\n      scroll-snap-coordinate: 0 0;\n    }\n  }\n\n  @media (max-width: 767px) {\n    .media-container {\n      height: calc(100vh - 64px);\n    }\n  }\n\n\n</style>\n<script>\n  import ModalDialog from './ModalDialog.html'\n  import MediaInDialog from './MediaInDialog.html'\n  import IconButton from '../../IconButton.html'\n  import Shortcut from '../../shortcut/Shortcut.html'\n  import PinchZoomable from './PinchZoomable.html'\n  import { show } from '../helpers/showDialog.js'\n  import { oncreate as onCreateDialog } from '../helpers/onCreateDialog.js'\n  import { close } from '../helpers/closeDialog.js'\n  import { debounce } from '../../../_thirdparty/lodash/timers.js'\n  import { times, get } from '../../../_utils/lodash-lite.js'\n  import { smoothScroll, hasNativeSmoothScroll } from '../../../_utils/smoothScroll.js'\n  import { store } from '../../../_store/store.js'\n  import { intrinsicScale } from '../../../_thirdparty/intrinsic-scale/intrinsicScale.js'\n  import { formatIntl } from '../../../_utils/formatIntl.js'\n\n  // padding for .media-scroll-item-image-area\n  const IMAGE_AREA_PADDING = {\n    top: 15,\n    left: 5,\n    right: 5,\n    bottom: 5\n  }\n\n  export default {\n    oncreate () {\n      onCreateDialog.call(this)\n      this.onScroll = debounce(this.onScroll.bind(this), 50, { leading: false, trailing: true })\n    },\n    ondestroy () {\n      this.teardownScroll()\n    },\n    store: () => store,\n    data: () => ({\n      pinchZoomMode: false\n    }),\n    computed: {\n      length: ({ mediaItems }) => mediaItems.length,\n      dots: ({ length }) => times(length, i => ({ i })),\n      canPinchZoom: ({ mediaItems }) => !mediaItems.some(media => ['video', 'audio'].includes(media.type)),\n      mediaItem: ({ mediaItems, scrolledItem }) => mediaItems[scrolledItem],\n      nativeWidth: ({ mediaItem }) => get(mediaItem, ['meta', 'original', 'width'], 300), // TODO: Pleroma placeholder\n      nativeHeight: ({ mediaItem }) => get(mediaItem, ['meta', 'original', 'height'], 200) // TODO: Pleroma placeholder\n    },\n    components: {\n      ModalDialog,\n      MediaInDialog,\n      IconButton,\n      Shortcut,\n      PinchZoomable\n    },\n    helpers: {\n      createLabel (i, current) {\n        return formatIntl([\"Show \",[\"index\",\"select\",{\"1\":[\"first\"],\"2\":[\"second\"],\"3\":[\"third\"],\"other\":[\"fourth\"]}],\" media \",[\"current\",\"select\",{\"true\":[\"(current)\"],\"other\":[]}]], { index: i + 1, current })\n      }\n    },\n    methods: {\n      show,\n      close,\n      setupScroll () {\n        this.refs.scroller.addEventListener('scroll', this.onScroll)\n      },\n      teardownScroll () {\n        this.refs.scroller.removeEventListener('scroll', this.onScroll)\n      },\n      onScroll () {\n        const { length } = this.get()\n        const { scroller } = this.refs\n        if (!scroller) {\n          return\n        }\n        const { scrollWidth, scrollLeft } = scroller\n        const scrolledItem = Math.round((scrollLeft / scrollWidth) * length)\n        this.set({ scrolledItem })\n      },\n      onButtonClick (i) {\n        const { scrolledItem } = this.get()\n        if (scrolledItem !== i) {\n          this.scrollToItem(i, true)\n        }\n      },\n      next () {\n        const { scrolledItem, length } = this.get()\n        if (scrolledItem < length - 1) {\n          this.scrollToItem(scrolledItem + 1, true)\n        }\n      },\n      prev () {\n        const { scrolledItem } = this.get()\n        if (scrolledItem > 0) {\n          this.scrollToItem(scrolledItem - 1, true)\n        }\n      },\n      onShow () {\n        const { scrolledItem } = this.get()\n        if (scrolledItem) {\n          requestAnimationFrame(() => {\n            this.scrollToItem(scrolledItem, false)\n            this.setupScroll()\n          })\n        } else {\n          this.setupScroll()\n        }\n      },\n      scrollToItem (scrolledItem, smooth) {\n        this.set({ scrolledItem })\n        const { length } = this.get()\n        const { scroller } = this.refs\n        const { scrollWidth } = scroller\n        const scrollLeft = Math.floor(scrollWidth * (scrolledItem / length))\n        if (smooth) {\n          if (!hasNativeSmoothScroll && 'StyleMedia' in window) {\n            // Edge has a weird bug where it changes the height if we try to\n            // smooth scroll, so disable smooth scrolling\n            scroller.scrollLeft = scrollLeft\n          } else {\n            smoothScroll(scroller, scrollLeft, /* horizontal */ true, /* preferFast */ false)\n          }\n        } else {\n          console.log('setting scrollLeft', scrollLeft)\n          scroller.scrollLeft = scrollLeft\n        }\n      },\n      togglePinchZoomMode () {\n        this.set({ pinchZoomMode: !this.get().pinchZoomMode })\n      },\n      onImageClick (e) {\n        const { nativeWidth, nativeHeight, pinchZoomMode } = this.get()\n        if (pinchZoomMode) {\n          return\n        }\n        let rect = this.refs.scroller.getBoundingClientRect()\n        // apply padding\n        rect = {\n          width: rect.width - IMAGE_AREA_PADDING.left - IMAGE_AREA_PADDING.right,\n          height: rect.height - IMAGE_AREA_PADDING.top - IMAGE_AREA_PADDING.bottom,\n          left: rect.left + IMAGE_AREA_PADDING.left,\n          top: rect.top + IMAGE_AREA_PADDING.top\n        }\n        const scale = intrinsicScale(rect.width, rect.height, nativeWidth, nativeHeight)\n        const x = e.clientX - rect.left\n        const y = e.clientY - rect.top\n        const insideImage = x >= scale.x && x <= (scale.x + scale.width) && y >= scale.y && y <= (scale.y + scale.height)\n        if (!insideImage) {\n          // close dialog when clicking outside of image\n          e.preventDefault()\n          e.stopPropagation()\n          this.close()\n        }\n      },\n      onMediaControlsClick (e) {\n        const { pinchZoomMode } = this.get()\n        if (pinchZoomMode) {\n          return\n        }\n        const { target } = e\n        if (target.tagName !== 'BUTTON' && !target.classList.contains('media-controls')) {\n          e.preventDefault()\n          e.stopPropagation()\n          // close dialog when clicking on the controls but not on a button inside the controls,\n          // or between the buttons\n          this.close()\n        }\n      }\n    }\n  }\n</script>\n","import MediaDialog from '../components/MediaDialog.html'\nimport { showDialog } from './showDialog.js'\n\nexport default function showMediaDialog (mediaItems, scrolledItem) {\n  return showDialog(MediaDialog, {\n    label: \"Media\",\n    mediaItems,\n    scrolledItem\n  })\n}\n","// via https://github.com/bfred-it/intrinsic-scale/blob/3d058f79902653484092ad9a2f3e1d9a3d03f09e/index.js\n\nexport const intrinsicScale = (parentWidth, parentHeight, childWidth, childHeight) => {\n  const doRatio = childWidth / childHeight\n  const cRatio = parentWidth / parentHeight\n  let width = parentWidth\n  let height = parentHeight\n\n  if (doRatio > cRatio) {\n    height = width / doRatio\n  } else {\n    width = height * doRatio\n  }\n\n  return {\n    width,\n    height,\n    x: (parentWidth - width) / 2,\n    y: (parentHeight - height) / 2\n  }\n}\n"],"names":["onDocumentKeydown","event","key","this","set","tabKeyHadShift","shiftKey","onFocus","get","modal","document","querySelector","elements","querySelectorAll","length","focus","undefined","player","refs","paused","pause","description","url","intrinsicWidth","intrinsicHeight","poster","type","media","preview_url","static_url","zoomIn","zoomBy","zoomOut","increment","node","scale","scaleTo","originX","originY","className","IMAGE_AREA_PADDING","i","current","formatIntl","index","show","close","setupScroll","scroller","addEventListener","onScroll","teardownScroll","removeEventListener","scrollWidth","scrollLeft","scrolledItem","Math","round","onButtonClick","scrollToItem","next","prev","onShow","requestAnimationFrame","smooth","floor","window","smoothScroll","togglePinchZoomMode","pinchZoomMode","onImageClick","e","nativeWidth","nativeHeight","rect","getBoundingClientRect","width","height","left","top","intrinsicScale","x","clientX","y","clientY","preventDefault","stopPropagation","onMediaControlsClick","target","tagName","classList","contains","onCreateDialog","call","bind","leading","trailing","canPinchZoom","dots","dot","createLabel","id","store","mediaItems","label","$leftRightChangesFocus","some","includes","mediaItem","showMediaDialog","parentWidth","parentHeight","childWidth","childHeight","doRatio"],"sourceRoot":""}