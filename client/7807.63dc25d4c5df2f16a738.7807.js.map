{"version":3,"file":"7807.63dc25d4c5df2f16a738.7807.js","mappings":"gNAkCa,CACPA,KAAI,IACJC,MAAK,IACL,OAAAC,CAASC,GACP,MAAM,MAAEC,EAAK,UAAEC,GAAcC,KAAKC,MACjB,eAAbJ,EAAKK,IACPC,EAAA,EAAMC,eAAeN,EAAO,CAAEC,WAAYA,MCtC7C,SAAyBD,EAAOO,GACrCF,EAAA,EAAMC,eAAeN,EAAO,CAAEQ,YAAaD,GAC7C,CDsCUE,CAAeT,EAAOD,EAAKK,KAC3BF,KAAKL,QAEb,G,mDAfeQ,EAAA,E,4HACA,CACXK,mBAAoB,O,8nBAzBO,E,QAAOC,O,0EAAiBb,QAAQc,E,gBAN9DC,G,QACAC,M,QACAC,M,kBACiB,E,sRAGoBJ,O,iCANrCE,I,oBACAC,O,oBACAC,O,ifAqBH,UAwBoB,oBAAEC,EAAmB,MAAEhB,I,OAAYgB,EAAoBhB,IAAU,CAAC,C,kIAI/D,YAAEiB,EAAW,0BAAEC,IAC9B,OAAOD,EAAYT,aAAeU,EAA0BC,OAAOC,OAC3E,C,kGALoB,eAAEb,IACd,OAAO,KAAqBc,MAAKC,GAAKA,EAAElB,MAAQG,GACxD,C,wFAIkB,YAAEU,IACZ,OAAOA,EAAYhB,SAC3B,C,+IACc,YAAEO,EAAW,mBAAEE,EAAkB,yBAAEa,EAAwB,UAAEtB,IACnE,MAAMU,EAAQD,EAAmBc,KAAIC,IAAU,CAC7CrB,IAAKqB,EAAOrB,IACZU,MAAOW,EAAOX,MACdY,KAAMD,EAAOC,KACbC,SAAUnB,EAAYJ,MAAQqB,EAAOrB,QAUvC,OARImB,GAA4BA,EAAyBK,YACvDjB,EAAMkB,KAAK,CACTf,MAAO,aACPV,IAAK,aACLsB,KAAM,WACNC,SAAU1B,IAGPU,CACf,C,4CEvEe,SAASmB,EAAuB9B,GAC7C,OAAO,OAAW,EAAmB,CACnCc,MAAO,eACPC,MAAO,eACPf,SAEJ,C","sources":["webpack:///./src/routes/_components/dialog/components/PostPrivacyDialog.html","webpack:///./src/routes/_actions/postPrivacy.js","webpack:///./src/routes/_components/dialog/creators/showPostPrivacyDialog.js"],"sourcesContent":["<ModalDialog\n  {id}\n  {label}\n  {title}\n  shrinkWidthToFit={true}\n  background=\"var(--main-bg)\"\n>\n  <GenericDialogList selectable={true} {items} on:click=\"onClick(event)\" />\n</ModalDialog>\n<style>\n  :global(.generic-dialog-list-item[data-key='local_only']) {\n    border-top: 3px solid var(--settings-list-item-border);\n  }\n</style>\n<script>\n  import ModalDialog from './ModalDialog.html'\n  import { store } from '../../../_store/store.js'\n  import { POST_PRIVACY_OPTIONS } from '../../../_static/statuses.js'\n  import { setPostPrivacy } from '../../../_actions/postPrivacy.js'\n  import GenericDialogList from './GenericDialogList.html'\n  import { show } from '../helpers/showDialog.js'\n  import { close } from '../helpers/closeDialog.js'\n  import { oncreate } from '../helpers/onCreateDialog.js'\n\n  export default {\n    oncreate,\n    components: {\n      ModalDialog,\n      GenericDialogList\n    },\n    store: () => store,\n    data: () => ({\n      postPrivacyOptions: POST_PRIVACY_OPTIONS\n    }),\n    methods: {\n      show,\n      close,\n      onClick (item) {\n        const { realm, localOnly } = this.get()\n        if (item.key === 'local_only') {\n          store.setComposeData(realm, { localOnly: !localOnly })\n        } else {\n          setPostPrivacy(realm, item.key)\n          this.close()\n        }\n      }\n    },\n    computed: {\n      composeData: ({ $currentComposeData, realm }) => $currentComposeData[realm] || {},\n      postPrivacy: ({ postPrivacyKey }) => {\n        return POST_PRIVACY_OPTIONS.find(_ => _.key === postPrivacyKey)\n      },\n      postPrivacyKey: ({ composeData, $currentVerifyCredentials }) => {\n        return composeData.postPrivacy || $currentVerifyCredentials.source.privacy\n      },\n      localOnly: ({ composeData }) => {\n        return composeData.localOnly\n      },\n      items: ({ postPrivacy, postPrivacyOptions, $currentSupportedToggles, localOnly }) => {\n        const items = postPrivacyOptions.map(option => ({\n          key: option.key,\n          label: option.label,\n          icon: option.icon,\n          selected: postPrivacy.key === option.key\n        }))\n        if ($currentSupportedToggles && $currentSupportedToggles.local_only) {\n          items.push({\n            label: \"Local only\",\n            key: 'local_only',\n            icon: '#fa-home',\n            selected: localOnly\n          })\n        }\n        return items\n      }\n    }\n  }\n</script>\n","import { store } from '../_store/store.js'\n\nexport function setPostPrivacy (realm, postPrivacyKey) {\n  store.setComposeData(realm, { postPrivacy: postPrivacyKey })\n}\n","import PostPrivacyDialog from '../components/PostPrivacyDialog.html'\nimport { showDialog } from './showDialog.js'\n\nexport default function showPostPrivacyDialog (realm) {\n  return showDialog(PostPrivacyDialog, {\n    label: \"Post privacy\",\n    title: \"Post privacy\",\n    realm\n  })\n}\n"],"names":["show","close","onClick","item","realm","localOnly","this","get","key","store","setComposeData","postPrivacyKey","postPrivacy","setPostPrivacy","postPrivacyOptions","items","event","id","label","title","$currentComposeData","composeData","$currentVerifyCredentials","source","privacy","find","_","$currentSupportedToggles","map","option","icon","selected","local_only","push","showPostPrivacyDialog"],"sourceRoot":""}