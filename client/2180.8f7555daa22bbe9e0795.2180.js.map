{"version":3,"file":"2180.8f7555daa22bbe9e0795.2180.js","mappings":"4MA4Ba,CACPA,KAAI,IACJC,MAAK,IACL,OAAAC,CAASC,GACP,MAAM,MAAEC,GAAUC,KAAKC,MACvBD,KAAKE,MAAMC,eAAeJ,EAAO,CAAEK,YAA0B,YAAbN,EAAKO,IAAoB,KAAOP,EAAKO,MACrFL,KAAKJ,OACX,G,6CAXeM,EAAA,E,0FACA,CACXI,aAAc,O,uTAnBa,E,QAAOC,O,0EAAiBV,QAAQW,E,gBAN9DC,G,QACAC,M,QACAC,M,kBACiB,E,sRAGoBJ,O,iCANrCE,I,oBACAC,O,oBACAC,O,ifAeH,UAoBoB,oBAAEC,EAAmB,MAAEb,I,OAAYa,EAAoBb,IAAU,CAAC,C,6FAClE,YAAEc,IACd,OAAOA,EAAYT,WAC3B,C,oIAC4B,aAAEE,EAAY,kBAAEQ,IACpC,OAAOC,OAAOC,KAAKV,GAAcW,QAAOC,GAAW,YAANA,GAAmBJ,EAAkBK,SAASD,IACnG,C,iIACc,YAAEd,EAAW,aAAEE,EAAY,oBAAEc,IACnC,OAAOA,EAAoBC,KAAIH,IAAK,IAAMZ,EAAaY,GAAIb,IAAKa,EAAGI,SAAUJ,IAAMd,GAAsB,YAANc,IAAoBE,EAAoBD,SAASf,MAC5J,C,4CC5Ce,SAASmB,EAAuBxB,GAC7C,OAAO,OAAW,EAAmB,CACnCW,MAAO,eACPC,MAAO,eACPZ,SAEJ,C","sources":["webpack:///./src/routes/_components/dialog/components/ContentTypeDialog.html","webpack:///./src/routes/_components/dialog/creators/showContentTypeDialog.js"],"sourcesContent":["<ModalDialog\r\n  {id}\r\n  {label}\r\n  {title}\r\n  shrinkWidthToFit={true}\r\n  background=\"var(--main-bg)\"\r\n>\r\n  <GenericDialogList selectable={true} {items} on:click=\"onClick(event)\" />\r\n</ModalDialog>\r\n<script>\r\n  import ModalDialog from './ModalDialog.html'\r\n  import { store } from '../../../_store/store.js'\r\n  import { KNOWN_CONTENT_TYPES } from '../../../_static/statuses.js'\r\n  import GenericDialogList from './GenericDialogList.html'\r\n  import { show } from '../helpers/showDialog.js'\r\n  import { close } from '../helpers/closeDialog.js'\r\n  import { oncreate } from '../helpers/onCreateDialog.js'\r\n\r\n  export default {\r\n    oncreate,\r\n    components: {\r\n      ModalDialog,\r\n      GenericDialogList\r\n    },\r\n    store: () => store,\r\n    data: () => ({\r\n      contentTypes: KNOWN_CONTENT_TYPES\r\n    }),\r\n    methods: {\r\n      show,\r\n      close,\r\n      onClick (item) {\r\n        const { realm } = this.get()\r\n        this.store.setComposeData(realm, { contentType: item.key === 'default' ? null : item.key })\r\n        this.close()\r\n      }\r\n    },\r\n    computed: {\r\n      composeData: ({ $currentComposeData, realm }) => $currentComposeData[realm] || {},\r\n      contentType: ({ composeData }) => {\r\n        return composeData.contentType\r\n      },\r\n      allowedContentTypes: ({ contentTypes, $currentPostTypes }) => {\r\n        return Object.keys(contentTypes).filter(e => e === 'default' || $currentPostTypes.includes(e))\r\n      },\r\n      items: ({ contentType, contentTypes, allowedContentTypes }) => {\r\n        return allowedContentTypes.map(e => ({ ...contentTypes[e], key: e, selected: e === contentType || (e === 'default' && !allowedContentTypes.includes(contentType)) }))\r\n      }\r\n    }\r\n  }\r\n</script>\r\n","import ContentTypeDialog from '../components/ContentTypeDialog.html'\r\nimport { showDialog } from './showDialog.js'\r\n\r\nexport default function showContentTypeDialog (realm) {\r\n  return showDialog(ContentTypeDialog, {\r\n    label: \"Content type\",\r\n    title: \"Content type\",\r\n    realm\r\n  })\r\n}\r\n"],"names":["show","close","onClick","item","realm","this","get","store","setComposeData","contentType","key","contentTypes","items","event","id","label","title","$currentComposeData","composeData","$currentPostTypes","Object","keys","filter","e","includes","allowedContentTypes","map","selected","showContentTypeDialog"],"sourceRoot":""}