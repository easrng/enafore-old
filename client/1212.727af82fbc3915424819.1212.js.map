{"version":3,"file":"1212.727af82fbc3915424819.1212.js","mappings":"wOA6Fa,CACP,iBAAAA,GACE,MAAM,UAAEC,GAAcC,KAAKC,OAC3B,QAAK,aAAaF,IACxB,EACI,mBAAMG,GACJ,MAAM,QAAEC,GAAYH,KAAKC,YACnB,OAA2BE,EACvC,G,4CAzFiBC,a,iBAAeC,e,SAAiBC,O,WAASC,S,eAAWC,a,UACpDL,Q,YAAUJ,U,OAAYU,K,iFACjB,wB,oTATTC,U,cACGC,UAAS,iB,8CAEDC,MAAQ,I,2BACTC,S,yBACFC,U,0HAEJV,c,sCAAeC,gB,sBAAiBC,Q,0BAASC,U,kCAAWC,c,wBACpDL,S,4BAAUJ,W,kBAAYU,M,YAChCM,gB,gFATML,W,4BACGC,UAAS,kB,kBAEDC,MAAQ,K,mEACTC,Q,uCACFC,U,4EATZF,M,SAAQC,O,eAASL,a,gBAAeQ,c,gBAAgBC,c,SAChDX,O,eAASF,a,kBAAeW,iB,mOADxBH,O,sBAAQC,Q,kCAASL,c,oCAAeQ,e,oCAAgBC,e,sBAChDX,Q,kCAASF,c,wCAAeW,iB,gEAaZG,cAAa,S,4EAAsBpB,mB,mBACnCoB,cAAa,S,mFAAsBhB,e,kOADnCgB,e,+CACAA,e,8GAuCNC,EAAA,E,+GAHA,CACXJ,gBAAiB,O,i0BArDlBT,OAAM,E,0gBA8CX,UAWgB,aAAEF,I,OAAmBA,EAAaD,O,iFAChC,QAAEA,I,OAAcA,EAAQiB,E,mGACnB,aAAEhB,I,OAAmBA,EAAagB,E,2FAChC,aAAEhB,I,OAAmBA,EAAaiB,I,yEAC5C,aAAEjB,I,OAAmBA,EAAaE,M,8EAChC,OAAEA,I,OAAaA,GAAUA,EAAOc,E,kJACpC,iBAAEE,EAAgB,aAAEd,EAAY,cAAEQ,EAAa,eAAEX,EAAc,SAAEE,I,OACtE,EAAAgB,EAAA,GAA+BD,EAAkBd,EAAcQ,EAAeX,EAAgBE,E,2EAEpF,KAAEE,I,OAAWA,C,6FACT,UAAEC,I,OAAgBA,C,mJACtB,OAAEJ,EAAM,QAAEH,EAAO,yBAAEqB,EAAwB,iBAAEC,IACvD,GAAInB,EACF,OAEF,MAAMoB,EAAS,CACbC,MAAM,EAAAC,EAAA,GAAyBzB,EAASqB,GACxCrB,QAAS,IAAIA,EAAQ0B,QAEvB,MAAyB,kBAArBJ,GACK,EAAAK,EAAA,GAAW,CAAC,CAAC,QAAQ,eAAe,CAAC,YAAaJ,GAC3B,mBAArBD,GACF,EAAAK,EAAA,GAAW,CAAC,CAAC,QAAQ,6BAA6B,CAAC,YAAaJ,GACzC,iBAArBD,GACF,EAAAK,EAAA,GAAW,CAAC,CAAC,QAAQ,oBAAoB,CAAC,YAAaJ,IAEvD,EAAAI,EAAA,GAAW,CAAC,CAAC,QAAQ,kBAAkB,CAAC,YAAaJ,EAEtE,C,0FACkB,gBAAEK,I,OAAuB,EAAAC,EAAA,GACnC,uBACA,qBACA,YACAD,GAAmB,kB,uLCzFXE,aAAa7B,a,eACb6B,aAAazB,a,gBACZyB,aAAajB,c,gBACbiB,aAAahB,c,iBACX,E,QACViB,a,SACCC,gB,uOANMF,aAAa7B,c,kCACb6B,aAAazB,c,mCACZyB,aAAajB,e,mCACbiB,aAAahB,e,2BAErBiB,c,6BACCC,e","sources":["webpack:///./src/routes/_components/status/Notification.html","webpack:///./src/routes/_components/timeline/NotificationVirtualListItem.html"],"sourcesContent":["{#if status}\n  <Status {index} {length} {timelineType} {timelineValue} {focusSelector}\n          {status} {notification} {enableShortcuts} on:recalculateHeight\n  />\n{:else}\n  <article id={elementId}\n           class={className}\n           tabindex=\"0\"\n           aria-posinset={index + 1}\n           aria-setsize={length}\n           aria-label={ariaLabel}\n  >\n    <StatusHeader {notification} {notificationId} {status} {statusId} {timelineType}\n                  {account} {accountId} {uuid} isStatusInNotification=\"true\" />\n    {#if enableShortcuts}\n      <Shortcut scope={shortcutScope} key=\"p\" on:pressed=\"openAuthorProfile()\" />\n      <Shortcut scope={shortcutScope} key=\"m\" on:pressed=\"mentionAuthor()\" />\n    {/if}\n  </article>\n{/if}\n<style>\n  .notification-article {\n    padding: var(--status-pad-v) var(--status-pad-h);\n    width: 560px;\n    max-width: calc(100vw - 40px);\n    border-bottom: 1px solid var(--main-border);\n  }\n  @media (max-width: 767px) {\n    .notification-article {\n      max-width: calc(100vw - 20px);\n      width: 580px;\n    }\n  }\n</style>\n<script>\n  import Status from './Status.html'\n  import StatusHeader from './StatusHeader.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { store } from '../../_store/store.js'\n  import { getAccountAccessibleName } from '../../_a11y/getAccountAccessibleName.js'\n  import { goto } from '../../../../__sapper__/client.js'\n  import { composeNewStatusMentioning } from '../../_actions/mention.js'\n  import { classname } from '../../_utils/classname.js'\n  import { createStatusOrNotificationUuid } from '../../_utils/createStatusOrNotificationUuid.js'\n  import { formatIntl } from '../../_utils/formatIntl.js'\n\n  export default {\n    components: {\n      Status,\n      StatusHeader,\n      Shortcut\n    },\n    data: () => ({\n      enableShortcuts: null\n    }),\n    store: () => store,\n    computed: {\n      account: ({ notification }) => notification.account,\n      accountId: ({ account }) => account.id,\n      notificationId: ({ notification }) => notification.id,\n      notificationType: ({ notification }) => notification.type,\n      status: ({ notification }) => notification.status,\n      statusId: ({ status }) => status && status.id,\n      uuid: ({ $currentInstance, timelineType, timelineValue, notificationId, statusId }) => (\n        createStatusOrNotificationUuid($currentInstance, timelineType, timelineValue, notificationId, statusId)\n      ),\n      elementId: ({ uuid }) => uuid,\n      shortcutScope: ({ elementId }) => elementId,\n      ariaLabel: ({ status, account, $omitEmojiInDisplayNames, notificationType }) => {\n        if (status) {\n          return undefined // aria-label not needed if there's a status\n        }\n        const params = {\n          name: getAccountAccessibleName(account, $omitEmojiInDisplayNames),\n          account: `@${account.acct}`\n        }\n        if (notificationType === 'admin.sign_up') {\n          return formatIntl([[\"name\"],\" signed up, \",[\"account\"]], params)\n        } else if (notificationType === 'follow_request') {\n          return formatIntl([[\"name\"],\" requested to follow you, \",[\"account\"]], params)\n        } else if (notificationType === 'admin.report') {\n          return formatIntl([[\"name\"],\" filed a report, \",[\"account\"]], params)\n        } else { // 'follow'\n          return formatIntl([[\"name\"],\" followed you, \",[\"account\"]], params)\n        }\n      },\n      className: ({ $underlineLinks }) => (classname(\n        'notification-article',\n        'shortcut-list-item',\n        'focus-fix',\n        $underlineLinks && 'underline-links'\n      ))\n    },\n    methods: {\n      openAuthorProfile () {\n        const { accountId } = this.get()\n        goto(`/accounts/${accountId}`)\n      },\n      async mentionAuthor () {\n        const { account } = this.get()\n        await composeNewStatusMentioning(account)\n      }\n    }\n  }\n</script>\n","<Notification\n  notification={virtualProps.notification}\n  timelineType={virtualProps.timelineType}\n  timelineValue={virtualProps.timelineValue}\n  focusSelector={virtualProps.focusSelector}\n  enableShortcuts={true}\n  index={virtualIndex}\n  length={virtualLength}\n  on:recalculateHeight />\n<script>\n  import Notification from '../status/Notification.html'\n\n  export default {\n    components: {\n      Notification\n    }\n  }\n</script>\n"],"names":["openAuthorProfile","accountId","this","get","mentionAuthor","account","notification","notificationId","status","statusId","timelineType","uuid","elementId","className","index","length","ariaLabel","enableShortcuts","timelineValue","focusSelector","shortcutScope","store","id","type","$currentInstance","createStatusOrNotificationUuid","$omitEmojiInDisplayNames","notificationType","params","name","getAccountAccessibleName","acct","formatIntl","$underlineLinks","classname","virtualProps","virtualIndex","virtualLength"],"sourceRoot":""}