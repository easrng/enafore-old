{"version":3,"file":"3976.e3e47a549837e65c9258.settings_general.js","mappings":"m7BAkJa,CACP,QAAAA,CAAUC,GAER,MAAM,qBAAEC,EAAoB,0BAAEC,GAA8BC,KAAKC,MAAMC,MACnEJ,GAAwBC,IACF,gCAApBF,EAAMM,OAAOC,GACfJ,KAAKC,MAAMI,IAAI,CAAEN,2BAA2B,IAE5CC,KAAKC,MAAMI,IAAI,CAAEP,sBAAsB,KAG3CE,KAAKC,MAAMK,MACjB,G,4CA/B+BC,kB,uFADxBC,Y,qGAAAA,Y,+JAAAA,Y,+CACwBD,kB,yGAiChBN,EAAA,E,k9CAzJiDL,SAASC,E,yEAKnBD,SAASC,E,wEAKTD,SAASC,E,8EAKJD,SAASC,E,sEAKjBD,SAASC,E,iFASED,SAASC,E,+EAKXD,SAASC,E,2UAUrBD,SAASC,E,wEAKJD,SAASC,E,oEAKdD,SAASC,E,oEAKTD,SAASC,E,oFAKOD,SAASC,E,wEAKrBD,SAASC,E,mFAKED,SAASC,E,uEASrBD,SAASC,E,8EAKFD,SAASC,E,qVAUVD,SAASC,E,kFAKJD,SAASC,E,gFAKXD,SAASC,E,0EAKfD,SAASC,E,UAK3C,wB,w0WAtHKY,4B,mEAKAC,kB,mEAKCC,iB,mEAKDC,uB,mEAKAC,e,mMASAC,0B,mEAKAC,wB,qFAUAC,Y,mEAKAC,iB,uEAKAC,Y,0EAKAC,Y,0EAKAC,4B,0EAKAC,gB,0EAKAC,2B,gQASAC,e,4EAKAC,sB,+FAUAC,qB,4EAKAC,0B,4EAKAC,wB,4EAKAC,kB,sNAjHAnB,4B,iCAKAC,kB,gCAKCC,iB,sCAKDC,uB,8BAKAC,e,yCASAC,0B,uCAKAC,wB,2BAUAC,Y,gCAKAC,iB,4BAKAC,Y,4BAKAC,Y,4CAKAC,4B,gCAKAC,gB,2CAKAC,2B,+BASAC,e,sCAKAC,sB,qCAUAC,qB,0CAKAC,0B,wCAKAC,wB,kCAKAC,kB,EAKpBC,gB,o9CAcP,UAuBmB,0BAAEC,EAAyB,iBAAEvB,I,OACxCuB,EAA0BC,OAAS,GAC/B,EAAAC,EAAA,GAAW,CAAC,aAAa,CAAC,aAAc,CAAEC,SAAU1B,IACpD,O,2GCtJK,CACX2B,cAAa,G,6IAhB0B,K,mBAEhCA,c,SAAgBC,Q,gRAAhBD,e,sBAAgBC,Q","sources":["webpack:///./src/routes/_pages/settings/general.html","webpack:///./src/routes/settings/general.html"],"sourcesContent":["<SettingsLayout page='settings/general' label=\"General\">\n  <h1>General settings</h1>\n\n  <h2>Media</h2>\n  <form class=\"ui-settings\">\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-never-mark-media-sensitive\"\n             bind:checked=\"$neverMarkMediaAsSensitive\" on:change=\"onChange(event)\">\n      Show sensitive media by default\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-show-all-spoilers\"\n             bind:checked=\"$showAllSpoilers\" on:change=\"onChange(event)\">\n      Expand content warnings by default\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-use-blurhash\"\n              bind:checked=\"$ignoreBlurhash\" on:change=\"onChange(event)\">\n      Show a plain gray color for sensitive media\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-mark-media-sensitive\"\n             bind:checked=\"$markMediaAsSensitive\" on:change=\"onChange(event)\">\n      Treat all media as sensitive\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-autoplay-gif\"\n             bind:checked=\"$autoplayGifs\" on:change=\"onChange(event)\">\n      Autoplay animated GIFs\n    </label>\n  </form>\n\n  <h2>UI</h2>\n  <form class=\"ui-settings\">\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-disable-custom-scrollbars\"\n             bind:checked=\"$disableCustomScrollbars\" on:change=\"onChange(event)\">\n      Disable custom scrollbars\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-disable-infinite-scroll\"\n             bind:checked=\"$disableInfiniteScroll\" on:change=\"onChange(event)\">\n      Disable\n        <Tooltip\n          text=\"infinite scroll\"\n          tooltipText=\"When infinite scroll is disabled, new posts will not automatically appear at the bottom or top of the timeline. Instead, buttons will allow you to load more content on demand.\"\n        />\n      \n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-hide-cards\"\n             bind:checked=\"$hideCards\" on:change=\"onChange(event)\">\n      Hide link preview cards\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-underline-links\"\n             bind:checked=\"$underlineLinks\" on:change=\"onChange(event)\">\n      Underline links in posts and profiles\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-center-nav\"\n             bind:checked=\"$centerNav\" on:change=\"onChange(event)\">\n      Center the navigation bar\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-bottom-nav\"\n             bind:checked=\"$bottomNav\" on:change=\"onChange(event)\">\n      Place the navigation bar at the bottom of the screen\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-disable-follow-request-count\"\n             bind:checked=\"$disableFollowRequestCount\" on:change=\"onChange(event)\">\n      Hide follow request count\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-hide-long-posts\"\n             bind:checked=\"$hideLongPosts\" on:change=\"onChange(event)\">\n      Collapse long posts without content warnings\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-disable-decomoji-converter\"\n             bind:checked=\"$disableDecomojiConverter\" on:change=\"onChange(event)\">\n      Disable conversion of <span class=\"decomoji\">でこもじ</span> emojis to text\n    </label>\n  </form>\n\n  <h2>Accessibility</h2>\n  <form class=\"ui-settings\">\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-reduce-motion\"\n             bind:checked=\"$reduceMotion\" on:change=\"onChange(event)\">\n      Reduce motion in UI animations\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-always-show-focus-ring\"\n             bind:checked=\"$alwaysShowFocusRing\" on:change=\"onChange(event)\">\n      Always show\n      <Tooltip\n        text=\"focus ring\"\n        tooltipText=\"The focus ring is the outline showing the currently focused element. By default, it's only shown when using the keyboard (not mouse or touch), but you may choose to always show it.\"\n      />\n      \n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-disable-tap-on-status\"\n             bind:checked=\"$disableTapOnStatus\" on:change=\"onChange(event)\">\n      Disable tappable area on entire post\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-omit-emoji-in-display-names\"\n             bind:checked=\"$omitEmojiInDisplayNames\" on:change=\"onChange(event)\">\n      Remove emoji from user display names\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-disable-long-aria-labels\"\n             bind:checked=\"$disableLongAriaLabels\" on:change=\"onChange(event)\">\n      Use short article ARIA labels\n    </label>\n    <label class=\"setting-group\">\n      <input type=\"checkbox\" id=\"choice-grayscale\"\n             bind:checked=\"$enableGrayscale\" on:change=\"onChange(event)\">\n      Show emojis, images, and videos in grayscale\n    </label>\n  </form>\n\n  {#if $isUserLoggedIn }\n    <h2>{themeTitle}</h2>\n    <ThemeSettings instanceName={$currentInstance} />\n  {/if}\n</SettingsLayout>\n<UISettingsStyles />\n<script>\n  import SettingsLayout from '../../_components/settings/SettingsLayout.html'\n  import ThemeSettings from '../../_components/settings/instance/ThemeSettings.html'\n  import { store } from '../../_store/store.js'\n  import Tooltip from '../../_components/Tooltip.html'\n  import UISettingsStyles from '../../_components/settings/UISettingsStyles.html'\n  import { formatIntl } from '../../_utils/formatIntl.js'\n\n  export default {\n    components: {\n      SettingsLayout,\n      ThemeSettings,\n      Tooltip,\n      UISettingsStyles\n    },\n    methods: {\n      onChange (event) {\n        // these two are mutually exclusive\n        const { markMediaAsSensitive, neverMarkMediaAsSensitive } = this.store.get()\n        if (markMediaAsSensitive && neverMarkMediaAsSensitive) {\n          if (event.target.id === 'choice-mark-media-sensitive') {\n            this.store.set({ neverMarkMediaAsSensitive: false })\n          } else {\n            this.store.set({ markMediaAsSensitive: false })\n          }\n        }\n        this.store.save()\n      }\n    },\n    store: () => store,\n    computed: {\n      themeTitle: ({ $loggedInInstancesInOrder, $currentInstance }) => (\n        $loggedInInstancesInOrder.length > 1\n          ? formatIntl([\"Theme for \",[\"instance\"]], { instance: $currentInstance })\n          : \"Theme\"\n      )\n    }\n  }\n</script>\n","<Title name=\"General settings\" settingsPage={true} />\n\n  <LazyPage {pageComponent} {params} />\n\n<script>\n  import Title from '../_components/Title.html'\n  import LazyPage from '../_components/LazyPage.html'\n  import pageComponent from '../_pages/settings/general.html'\n\n  export default {\n    components: {\n\n      Title,\n      LazyPage\n    },\n    data: () => ({\n      pageComponent\n    })\n  }\n</script>\n"],"names":["onChange","event","markMediaAsSensitive","neverMarkMediaAsSensitive","this","store","get","target","id","set","save","$currentInstance","themeTitle","$neverMarkMediaAsSensitive","$showAllSpoilers","$ignoreBlurhash","$markMediaAsSensitive","$autoplayGifs","$disableCustomScrollbars","$disableInfiniteScroll","$hideCards","$underlineLinks","$centerNav","$bottomNav","$disableFollowRequestCount","$hideLongPosts","$disableDecomojiConverter","$reduceMotion","$alwaysShowFocusRing","$disableTapOnStatus","$omitEmojiInDisplayNames","$disableLongAriaLabels","$enableGrayscale","$isUserLoggedIn","$loggedInInstancesInOrder","length","formatIntl","instance","pageComponent","params"],"sourceRoot":""}