{"version":3,"file":"4325.2819f2e60e9b9606bbfe.4325.js","mappings":"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","sources":["webpack:///./src/routes/_components/ExternalLink.html","webpack:///./src/routes/_components/status/StatusSidebar.html","webpack:///./src/routes/_components/status/StatusAuthorName.html","webpack:///./src/routes/_components/status/StatusAuthorHandle.html","webpack:///./src/routes/_components/status/StatusRelativeDate.html","webpack:///./src/routes/_utils/formatters.js","webpack:///./src/routes/_components/status/StatusDetails.html","webpack:///./src/routes/_thirdparty/unescape/unescape.js","webpack:///./src/routes/_components/status/StatusCard.html","webpack:///./src/routes/_utils/delegate.js","webpack:///./src/routes/_actions/favorite.js","webpack:///./src/routes/_api/favorite.js","webpack:///./src/routes/_actions/reblog.js","webpack:///./src/routes/_api/reblog.js","webpack:///./src/routes/_static/animations.js","webpack:///./src/routes/_components/status/StatusToolbar.html","webpack:///./src/routes/_components/dialog/asyncDialogs/importShowStatusOptionsDialog.js","webpack:///./src/routes/_components/PlayVideoIcon.html","webpack:///./src/routes/_components/AutoplayVideo.html","webpack:///./src/routes/_components/NonAutoplayGifv.html","webpack:///./src/routes/_components/FileIcon.html","webpack:///./src/routes/_utils/convertCssPropertyToDataUrl.js","webpack:///./src/routes/_components/status/Media.html","webpack:///./src/routes/_components/status/StatusMediaAttachments.html","webpack:///./src/routes/_utils/urlIsCrossOrigin.js","webpack:///./src/routes/_utils/katexify.js","webpack:///./src/routes/_utils/asyncModules/importKatex.js","webpack:///./src/routes/_components/status/StatusContent.html","webpack:///./src/routes/_utils/asyncModules/importConfetti.js","webpack:///./src/routes/_components/status/StatusSpoiler.html","webpack:///./src/routes/_components/status/StatusComposeBox.html","webpack:///./src/routes/_components/status/StatusMentions.html","webpack:///./src/routes/_components/status/StatusReactions.html","webpack:///./src/routes/_components/status/StatusTags.html","webpack:///./src/routes/_thirdparty/timeago/timeago.js","webpack:///./src/routes/_intl/formatTimeagoDate.js","webpack:///./src/routes/_actions/polls.js","webpack:///./src/routes/_api/polls.js","webpack:///./src/routes/_components/status/StatusPoll.html","webpack:///./src/routes/_utils/checkDomAncestors.js","webpack:///./src/routes/_a11y/getAccessibleLabelForStatus.js","webpack:///./src/routes/_components/status/Status.html","webpack:///./src/routes/_components/status/StatusHeader.html","webpack:///./src/routes/_a11y/getAccountAccessibleName.js","webpack:///./src/routes/_actions/accounts.js","webpack:///./src/routes/_api/relationships.js","webpack:///./src/routes/_actions/bookmark.js","webpack:///./src/routes/_api/bookmark.js","webpack:///./src/routes/_actions/mention.js","webpack:///./src/routes/_actions/quote.js","webpack:///./src/routes/_actions/react.js","webpack:///./src/routes/_api/react.js","webpack:///./src/routes/_utils/sortItemSummariesForThread.js","webpack:///./src/routes/_utils/maps.js","webpack:///./src/routes/_actions/timeline.js","webpack:///./src/routes/_api/timelines.js","webpack:///./src/routes/_api/user.js","webpack:///./src/routes/_components/dialog/asyncDialogs/importShowComposeDialog.js","webpack:///./src/routes/_components/dialog/asyncDialogs/importShowMediaDialog.js","webpack:///./src/routes/_static/emojiPickerIntl.js","webpack:///./src/routes/_static/timelines.js","webpack:///./src/routes/_utils/addEmojiTooltips.js","webpack:///./src/routes/_utils/announceAriaLivePolite.js","webpack:///./src/routes/_utils/createStatusOrNotificationUuid.js","webpack:///./src/routes/_utils/emojiDatabase.js","webpack:///./src/routes/_utils/massageUserText.js","webpack:///./src/routes/_utils/statusIdSorting.js"],"sourcesContent":["<a rel=\"nofollow noopener\"\n   target=\"_blank\"\n   {href}\n   aria-label={ariaLabel}\n   class={computedClass}>\n  <slot></slot>{#if showIcon}\n    <SvgIcon className=\"external-link-svg\" href=\"#fa-external-link\" />\n  {/if}</a>\n<style>\n  .external-link-with-icon {\n    display: inline-flex;\n    align-items: center;\n  }\n  :global(.external-link-with-icon.normal-icon-color .external-link-svg) {\n    fill: var(--body-text-color);\n  }\n</style>\n<script>\n  import { classname } from '../_utils/classname.js'\n  import SvgIcon from './SvgIcon.html'\n\n  export default {\n    data: () => ({\n      className: undefined,\n      normalIconColor: false,\n      ariaLabel: '',\n      showIcon: false\n    }),\n    computed: {\n      computedClass: ({ className, showIcon, normalIconColor }) => (classname(\n        'external-link',\n        className,\n        showIcon && 'external-link-with-icon',\n        normalIconColor && 'normal-icon-color'\n      ))\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","<a id={elementId}\n   class=\"status-sidebar size-{size}\"\n   rel=\"prefetch\"\n   href=\"/accounts/{originalAccountId}\"\n   aria-hidden=\"true\"\n   tabindex=\"-1\"\n>\n  <!-- the avatar is duplicated information, so hide from tab order and screenreaders -->\n  <Avatar account={originalAccount}\n          isLink=\"true\"\n          {size} />\n</a>\n<style>\n  .status-sidebar {\n    grid-area: sidebar;\n    margin-right: 15px;\n  }\n\n  .status-sidebar.size-small {\n    width: 48px;\n    height: 48px;\n  }\n\n  .status-sidebar.size-medium {\n    width: 64px;\n    height: 64px;\n  }\n\n  @media (max-width: 767px) {\n    .status-sidebar {\n      margin-right: 5px;\n    }\n  }\n</style>\n<script>\n  import Avatar from '../Avatar.html'\n  export default {\n    components: {\n      Avatar\n    },\n    computed: {\n      elementId: ({ uuid }) => `status-author-avatar-${uuid}`,\n      size: ({ isStatusInOwnThread, $isVeryTinyMobileSize }) => {\n        if ($isVeryTinyMobileSize) {\n          return isStatusInOwnThread ? 'small' : 'extra-small'\n        }\n        return isStatusInOwnThread ? 'medium' : 'small'\n      }\n    }\n  }\n</script>\n","<a id={elementId}\n   class=\"status-author-name {isStatusInNotification ? 'status-in-notification' : '' } {isStatusInOwnThread ? 'status-in-own-thread' : ''}\"\n   rel=\"prefetch\"\n   href=\"/accounts/{originalAccountId}\"\n   title=\"{'@' + originalAccount.acct}\"\n>\n  <AccountDisplayName account={originalAccount} />\n</a>\n<style>\n  .status-author-name {\n    grid-area: author-name;\n    align-self: center;\n    margin-left: 5px;\n    font-size: 1.1em;\n    min-width: 0;\n    font-weight: 600;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .status-author-name.status-in-own-thread {\n    font-size: 1.3em;\n  }\n\n  .status-author-name, .status-author-name:hover, .status-author-name:visited {\n    color: var(--body-text-color);\n  }\n\n  .status-author-name.status-in-notification,\n  .status-author-name.status-in-notification:hover,\n  .status-author-name.status-in-notification:visited {\n    color: var(--very-deemphasized-text-color);\n  }\n\n</style>\n<script>\n  import AccountDisplayName from '../profile/AccountDisplayName.html'\n\n  export default {\n    computed: {\n      elementId: ({ uuid }) => `status-author-name-${uuid}`\n    },\n    components: {\n      AccountDisplayName\n    }\n  }\n</script>\n","<span class=\"status-author-handle {isStatusInNotification ? 'status-in-notification' : '' }\">\n  {'@' + originalAccount.acct}\n</span>\n<style>\n  .status-author-handle {\n    grid-area: author-handle;\n    align-self: center;\n    margin-left: 5px;\n    color: var(--deemphasized-text-color);\n    font-size: 1.1em;\n    min-width: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .status-author-handle.status-in-notification {\n    color: var(--very-deemphasized-text-color);\n  }\n</style>","<span class=\"status-relative-date-wrap\">\n<a id={elementId}\n   class=\"status-relative-date {isStatusInNotification ? 'status-in-notification' : '' }\"\n   href=\"/statuses/{originalStatusId}\"\n   rel=\"prefetch\"\n   {tabindex}\n>\n  {#if editedAtDate}\n  <span class=\"sr-only\">Last Updated </span>\n  {/if}\n  <time datetime={editedAtDate||createdAtDate} title={absoluteFormattedEditedDate||absoluteFormattedCreatedDate}\n        aria-label={formattedDateLabel}>\n    {shortInlineFormattedDate}\n  </time>\n  {#if editedAtDate}\n  <SvgIcon className=\"status-edited-svg\" href=\"#fa-pencil\" />\n  {/if}\n</a>\n{#if localOnly}\n<span title=\"Local only\"><SvgIcon className=\"status-edited-svg\" href=\"#fa-home\"/></span>\n{/if}\n</span>\n<style>\n  .status-relative-date-wrap {\n    grid-area: relative-date;\n    align-self: center;\n    margin-left: 5px;\n    margin-right: 10px;\n    font-size: 1.1em;\n    text-align: right;\n    white-space: nowrap;\n  }\n  .status-relative-date, .status-relative-date:hover, .status-relative-date:visited {\n    color: var(--deemphasized-text-color);\n  }\n  .status-relative-date.status-in-notification,\n  .status-relative-date.status-in-notification:hover,\n  .status-relative-date.status-in-notification:visited {\n    color: var(--very-deemphasized-text-color);\n  }\n\n</style>\n<script>\n  import { formatIntl } from '../../_utils/formatIntl.js'\n  import SvgIcon from '../SvgIcon.html'\n  export default {\n    computed: {\n      elementId: ({ uuid }) => `status-relative-date-${uuid}`,\n      tabindex: ({ $disableTapOnStatus }) => (\n        // If you can't tap on the entire status, then you need some way to click on it. Otherwise it's\n        // just a duplicate link in the focus order.\n        $disableTapOnStatus ? '0' : '-1'\n      ),\n      formattedDateLabel: ({ shortInlineFormattedDate }) => (\n        formatIntl([[\"time\"],\" - click to show thread\"], { time: shortInlineFormattedDate })\n      )\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","import { LOCALE } from '../_static/intl.js'\nimport { thunk } from './thunk.js'\n\nconst safeFormatter = (formatter) => {\n  return {\n    format (date) {\n      if (typeof date !== 'number') {\n        return \"Never\" // null means \"never\" in Misskey\n      }\n      try {\n        return formatter.format(date)\n      } catch (e) {\n        if (e instanceof RangeError) {\n          // The fediverse is wild, so invalid dates may exist. Don't fail with a fatal error in that case.\n          return \"Never\"\n        }\n        throw e\n      }\n    }\n  }\n}\n\nexport const absoluteDateFormatter = thunk(() => safeFormatter(new Intl.DateTimeFormat(LOCALE, {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n})))\n\nexport const shortAbsoluteDateFormatter = thunk(() => safeFormatter(new Intl.DateTimeFormat(LOCALE, {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n})))\n\nexport const dayOnlyAbsoluteDateFormatter = thunk(() => safeFormatter(new Intl.DateTimeFormat(LOCALE, {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric'\n})))\n","<div class=\"status-details\">\n  <span class=\"status-absolute-date\">\n  <ExternalLink href={originalStatus.url}\n                showIcon={true}\n                ariaLabel={externalLinkLabel}\n  >\n    <time datetime={createdAtDate} title={absoluteFormattedCreatedDate}>\n      {displayAbsoluteFormattedCreatedDate}\n    </time>\n  </ExternalLink>\n  {#if editedAtDate}\n  <span class=\"status-edited-date\">\n    Edited <time datetime={editedAtDate} title={absoluteFormattedEditedDate}>\n      {displayAbsoluteFormattedEditedDate}\n    </time>\n  </span>\n  {/if}\n  </span>\n  {#if localOnly}\n  <span class=\"status-favs-reblogs\" title=\"Local only\">\n    <SvgIcon className=\"status-favs-reblogs-svg\" href=\"#fa-home\" />\n  </span>\n  {/if}\n  {#if applicationName}\n    {#if applicationWebsite}\n      <ExternalLink className=\"status-application\"\n                    href={applicationWebsite}\n                    showIcon={false}\n                    ariaLabel={applicationLinkLabel}>\n        <span class=\"status-application-span\">\n          {applicationName}\n        </span>\n      </ExternalLink>\n    {:else}\n      <span class=\"status-application status-application-span\">\n        {applicationName}\n      </span>\n    {/if}\n  {/if}\n  <a class=\"status-favs-reblogs status-reblogs\"\n     rel=\"prefetch\"\n     href=\"/statuses/{originalStatusId}/reblogs\"\n     aria-label={reblogsLabel}>\n    <SvgIcon className=\"status-favs-reblogs-svg\" href=\"#fa-retweet\" />\n    <span>{numReblogs}</span>\n  </a>\n  <a class=\"status-favs-reblogs status-favs\"\n     rel=\"prefetch\"\n     href=\"/statuses/{originalStatusId}/favorites\"\n     aria-label={favoritesLabel}>\n    <SvgIcon className=\"status-favs-reblogs-svg\" href=\"#fa-star\" />\n    <span>{numFavs}</span>\n  </a>\n</div>\n<style>\n  .status-details {\n    grid-area: details;\n    display: flex;\n    flex-wrap: wrap;\n    grid-gap: 0 20px;\n    align-items: center;\n    justify-content: left;\n    margin: 0 5px 10px;\n  }\n\n  :global(.status-absolute-date) {\n    font-size: 1.1em;\n    min-width: 0;\n  }\n\n  :global(.status-edited-date) {\n    margin-left: 20px;\n  }\n\n  :global(.status-absolute-date time) {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  :global(.status-application) {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: pre-wrap;\n    font-size: 1.1em;\n  }\n\n  :global(.status-application, a.status-application, a.status-application:hover) {\n    color: var(--deemphasized-text-color);\n  }\n\n  :global(a.status-application) {\n    display: inline-flex;\n    align-items: center;\n  }\n\n  .status-application-span {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  .status-favs-reblogs {\n    font-size: 1.1em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .status-favs-reblogs span {\n    margin-left: 5px;\n  }\n\n  .status-favs-reblogs,\n  .status-favs-reblogs:hover,\n  .status-favs-reblogs:visited {\n    color: var(--deemphasized-text-color);\n  }\n\n  :global(.status-favs-reblogs-svg) {\n    fill: var(--deemphasized-text-color);\n    width: 18px;\n    height: 18px;\n  }\n\n  :global(.status-absolute-date, .status-absolute-date a, .status-absolute-date a:hover, .status-absolute-date a:visited) {\n    color: var(--deemphasized-text-color);\n  }\n\n  @media (max-width: 479px) {\n    :global(.status-absolute-date) {\n      font-size: 1em;\n    }\n    .status-favs-reblogs {\n      font-size: 1em;\n    }\n    :global(.status-application) {\n      font-size: 1em;\n    }\n    .status-details {\n      grid-gap: 0 10px;\n    }\n\n  }\n\n</style>\n<script>\n  import ExternalLink from '../ExternalLink.html'\n  import { store } from '../../_store/store.js'\n  import { absoluteDateFormatter, shortAbsoluteDateFormatter } from '../../_utils/formatters.js'\n  import SvgIcon from '../SvgIcon.html'\n  import { formatIntl } from '../../_utils/formatIntl.js'\n\n  export default {\n    store: () => store,\n    data: () => ({\n      overrideNumReblogs: undefined,\n      overrideNumFavs: undefined\n    }),\n    computed: {\n      originalStatusId: ({ originalStatus }) => originalStatus.id,\n      application: ({ originalStatus }) => originalStatus.application,\n      applicationName: ({ application }) => (application && application.name),\n      applicationWebsite: ({ application }) => (application && application.website),\n      numReblogs: ({ $disableReblogCounts, overrideNumReblogs, originalStatus }) => {\n        if ($disableReblogCounts) {\n          return 0\n        }\n        if (typeof overrideNumReblogs === 'number') {\n          return overrideNumReblogs\n        }\n        return originalStatus.reblogs_count || 0\n      },\n      numFavs: ({ $disableFavCounts, overrideNumFavs, originalStatus }) => {\n        if ($disableFavCounts) {\n          return 0\n        }\n        if (typeof overrideNumFavs === 'number') {\n          return overrideNumFavs\n        }\n        return originalStatus.favourites_count || 0\n      },\n      displayAbsoluteFormattedCreatedDate: ({ createdAtDateTS, editedAtDateTS, $isMobileSize }) => (\n        ((editedAtDateTS || $isMobileSize) ? shortAbsoluteDateFormatter : absoluteDateFormatter)().format(createdAtDateTS)\n      ),\n      displayAbsoluteFormattedEditedDate: ({ editedAtDateTS, $isMobileSize }) => (\n        ((editedAtDateTS || $isMobileSize) ? shortAbsoluteDateFormatter : absoluteDateFormatter)().format(editedAtDateTS)\n      ),\n      reblogsLabel: ({ $disableReblogCounts, numReblogs }) => {\n        if ($disableReblogCounts) {\n          return \"Boost counts hidden\"\n        }\n        return formatIntl([\"Boosted \",[\"count\",\"plural\",0,{\"one\":[\"1 time\"],\"other\":[[\"count\"],\" times\"]}]], { count: numReblogs })\n      },\n      favoritesLabel: ({ $disableFavCounts, numFavs }) => {\n        if ($disableFavCounts) {\n          return \"Favorite counts hidden\"\n        }\n        return formatIntl([\"Favorited \",[\"count\",\"plural\",0,{\"one\":[\"1 time\"],\"other\":[[\"count\"],\" times\"]}]], { count: numFavs })\n      },\n      externalLinkLabel: ({ absoluteFormattedCreatedDate }) => (\n        formatIntl([[\"label\"],\" (opens in new window)\"], { label: absoluteFormattedCreatedDate })\n      ),\n      applicationLinkLabel: ({ applicationName }) => (\n        formatIntl([[\"label\"],\" (opens in new window)\"], { label: applicationName })\n      )\n    },\n    components: {\n      ExternalLink,\n      SvgIcon\n    }\n  }\n</script>\n","//\n// Originally via https://github.com/jonschlinkert/unescape/blob/98d1e52/index.js\n//\nimport { thunk } from '../../_utils/thunk.js'\n\n// via https://www.htmlhelp.com/reference/html40/entities/special.html\n// plus some more known entities like pound, nbsp, etc\nconst chars = {\n  '&amp;': '&',\n  '&apos;': '\\'',\n  '&bdquo;': '„',\n  '&cent;': '¢',\n  '&circ;': 'ˆ',\n  '&copy;': '©',\n  '&dagger;': '†',\n  '&Dagger;': '‡',\n  '&emsp;': ' ',\n  '&ensp;': ' ',\n  '&euro;': '€',\n  '&gt;': '>',\n  '&ldquo;': '“',\n  '&lrm;': '',\n  '&lsaquo;': '‹',\n  '&lsquo;': '‘',\n  '&lt;': '<',\n  '&mdash;': '—',\n  '&nbsp;': ' ',\n  '&ndash;': '–',\n  '&oelig;': 'œ',\n  '&OElig;': 'Œ',\n  '&permil;': '‰',\n  '&pound;': '£',\n  '&quot;': '\"',\n  '&rdquo;': '”',\n  '&reg;': '®',\n  '&rsaquo;': '›',\n  '&rsquo;': '’',\n  '&sbquo;': '‚',\n  '&scaron;': 'š',\n  '&Scaron;': 'Š',\n  '&thinsp;': ' ',\n  '&tilde;': '˜',\n  '&yen;': '¥',\n  '&Yuml;': 'Ÿ'\n}\n\nconst getRegex = thunk(() => toRegex(chars))\n\n/**\n * Convert HTML entities to HTML characters.\n *\n * @param  {String} `str` String with HTML entities to un-escape.\n * @return {String}\n */\nfunction unescape (str) {\n  return str.replace(getRegex(), replace)\n}\n\nfunction replace (match) {\n  const knownValue = chars[match]\n  if (knownValue) {\n    return knownValue\n  }\n  let codePoint\n  try {\n    if (match.startsWith('&#x')) { // hex\n      codePoint = parseInt(match.substring(3, match.length - 1), 16)\n    } else { // decimal\n      codePoint = parseInt(match.substring(2, match.length - 1), 10)\n    }\n    return String.fromCodePoint(codePoint)\n  } catch (e) {\n    return match // bad code point, bail out\n  }\n}\n\nfunction toRegex (chars) {\n  const patterns = Object.keys(chars).concat([\n    '&#[0-9]{1,6};', // decimal code points\n    '&#x[a-fA-F0-9]{1,6};' // hex code points\n  ])\n\n  return new RegExp('(' + patterns.join('|') + ')', 'g')\n}\n\n/**\n * Expose `unescape`\n */\n\nexport { unescape }\n","<a ref:cardlink href={url} class=\"status-card\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <strong class=\"card-title\" title={unescapedTitle}>\n     {unescapedTitle}\n    </strong>\n  {#if description}\n    <div class=\"card-content\">\n  {#if imageUrl}\n    <div class=\"status-card-image-container\">\n      <LazyImage src={imageUrl} ariaHidden={true} />\n    </div>\n  {/if}\n    <span class=\"card-description\">\n      {unescapedDescription}\n    </span>\n  </div>\n  {/if}\n  {#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"l\" on:pressed=\"open(url)\" />\n  {/if}\n</a>\n<style>\n  .status-card {\n    grid-area: card;\n    display: flex;\n    flex-direction: column;\n    padding: 15px;\n\n    text-decoration: none;\n    color: inherit;\n\n    overflow: hidden;\n    margin: 10px 10px 10px 5px;\n\n    border: 1px solid var(--settings-list-item-border);\n    background: var(--settings-list-item-bg-hover);\n    border-radius: 6px;\n  }\n\n  .status-card:hover {\n    background: transparent;\n  }\n\n  .status-card :first-child:not(span) {\n    flex-shrink: 0;\n  }\n\n  .card-content {\n    display: flex;\n    align-items: center;\n    margin-top: 5px;\n    opacity: 0.8;\n  }\n\n  .status-card-image-container {\n    position: relative;\n    width: 50px;\n    height: 50px;\n  }\n\n  :global(.status-card-image-container img) {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n  }\n\n  .card-title {\n    font-weight: 600;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100%;\n    display: inline-block;\n    opacity: 0.8;\n  }\n\n  .card-description {\n    font-size: small;\n    line-height: 1.4;\n    max-height: 5.6em; /* 4 * line-height */\n    overflow: hidden;\n  }\n\n  .card-description:not(:first-child) {\n    margin-left: 15px;\n  }\n\n\n</style>\n<script>\n  import LazyImage from '../LazyImage.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { unescape } from '../../_thirdparty/unescape/unescape.js'\n\n  export default {\n    components: {\n      Shortcut,\n      LazyImage\n    },\n    computed: {\n      card: ({ originalStatus }) => originalStatus.card,\n      title: ({ card }) => card.title,\n      unescapedTitle: ({ title }) => title && unescape(title),\n      url: ({ card }) => card.url,\n      hostname: ({ url }) => window.URL ? new window.URL(url).hostname : '',\n      description: ({ card, hostname }) => card.description || card.provider_name || hostname,\n      unescapedDescription: ({ description }) => description && unescape(description),\n      imageUrl: ({ card }) => card.image\n    },\n    methods: {\n      open () {\n        if (this.refs.cardlink) {\n          this.refs.cardlink.click()\n        }\n      }\n\n    }\n  }\n</script>\n","// Delegate certain events to the global document for perf purposes.\n\nconst callbacks = {}\n\nif (process.browser) {\n  window.__delegateCallbacks = callbacks\n}\n\nfunction onEvent (e) {\n  const { type, keyCode, target } = e\n  if (!(type === 'click' || (type === 'keydown' && keyCode === 13))) {\n    // we're not interested in any non-click or non-Enter events\n    return\n  }\n  let key\n  let element = target\n  while (element) {\n    if ((key = element.getAttribute('id'))) {\n      break\n    }\n    element = element.parentElement\n  }\n  if (key && callbacks[key]) {\n    if (type === 'click') {\n      const selection = window.getSelection()\n      const selectionStr = selection && selection.toString()\n      if (selectionStr && selectionStr.length && target.contains(selection.anchorNode)) {\n        return // ignore if the user is selecting text inside the clickable area\n      }\n    }\n    const res = callbacks[key](e) // callback returns true to indicate it has handled the action\n    if (process.env.NODE_ENV !== 'production' && typeof res !== 'boolean') {\n      console.warn(`Callback returned a non-boolean response: \"${key}\". This should never happen.`)\n    }\n    if (res) {\n      e.preventDefault()\n      e.stopPropagation()\n    }\n  }\n}\n\nexport function registerClickDelegates (component, delegates) {\n  Object.assign(callbacks, delegates)\n\n  component.on('destroy', () => {\n    Object.keys(delegates).forEach(key => {\n      delete callbacks[key]\n    })\n  })\n}\n\nexport function registerClickDelegate (component, key, callback) {\n  registerClickDelegates(component, { [key]: callback })\n}\n\nif (process.browser) {\n  document.addEventListener('click', onEvent)\n  document.addEventListener('keydown', onEvent)\n}\n","import { favoriteStatus, unfavoriteStatus } from '../_api/favorite.js'\nimport { store } from '../_store/store.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { database } from '../_database/database.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setFavorited (statusId, favorited) {\n  const { online } = store.get()\n  if (!online) {\n    /* no await */ toast.say(favorited ? \"You cannot favorite while offline\" : \"You cannot unfavorite while offline\")\n    return\n  }\n  const { currentInstance, accessToken } = store.get()\n  const networkPromise = favorited\n    ? favoriteStatus(currentInstance, accessToken, statusId)\n    : unfavoriteStatus(currentInstance, accessToken, statusId)\n  store.setStatusFavorited(currentInstance, statusId, favorited) // optimistic update\n  try {\n    await networkPromise\n    await database.setStatusFavorited(currentInstance, statusId, favorited)\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(favorited\n      ? formatIntl([\"Unable to favorite: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unfavorite: \",[\"error\"]], { error: (e.message || '') })\n    )\n    store.setStatusFavorited(currentInstance, statusId, !favorited) // undo optimistic update\n  }\n}\n","import { post, WRITE_TIMEOUT } from '../_utils/ajax.js'\nimport { basename, auth } from './utils.js'\n\nexport async function favoriteStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/favourite`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function unfavoriteStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/unfavourite`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","import { store } from '../_store/store.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { reblogStatus, unreblogStatus } from '../_api/reblog.js'\nimport { database } from '../_database/database.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setReblogged (statusId, reblogged) {\n  const online = store.get()\n  if (!online) {\n    /* no await */ toast.say(reblogged ? \"You cannot boost while offline.\" : \"You cannot unboost while offline.\")\n    return\n  }\n  const { currentInstance, accessToken } = store.get()\n  const networkPromise = reblogged\n    ? reblogStatus(currentInstance, accessToken, statusId)\n    : unreblogStatus(currentInstance, accessToken, statusId)\n  store.setStatusReblogged(currentInstance, statusId, reblogged) // optimistic update\n  try {\n    await networkPromise\n    await database.setStatusReblogged(currentInstance, statusId, reblogged)\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(reblogged\n      ? formatIntl([\"Failed to boost: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Failed to unboost: \",[\"error\"]], { error: (e.message || '') })\n    )\n    store.setStatusReblogged(currentInstance, statusId, !reblogged) // undo optimistic update\n  }\n}\n","import { post } from '../_utils/ajax.js'\nimport { basename, auth } from './utils.js'\n\nexport async function reblogStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/reblog`\n  return post(url, null, auth(accessToken))\n}\n\nexport async function unreblogStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/unreblog`\n  return post(url, null, auth(accessToken))\n}\n","const growBigThenSmall = {\n  properties: [\n    { transform: 'scale(1)' },\n    { transform: 'scale(2)' },\n    { transform: 'scale(1)' }\n  ],\n  options: {\n    duration: 333,\n    easing: 'ease-in-out'\n  }\n}\n\nconst fadeColorToPressedState = {\n  properties: [\n    { fill: 'var(--action-button-fill-color)' },\n    { fill: 'var(--action-button-fill-color-pressed)' }\n  ],\n  options: {\n    duration: 333,\n    easing: 'linear'\n  }\n}\n\nexport const REBLOG_ANIMATION = [\n  growBigThenSmall,\n  fadeColorToPressedState\n]\n\nexport const FAVORITE_ANIMATION = [\n  {\n    properties: [\n      { transform: 'rotate(0deg)' },\n      { transform: 'rotate(180deg)' },\n      { transform: 'rotate(360deg)' }\n    ],\n    options: {\n      duration: 666,\n      easing: 'ease-in-out'\n    }\n  },\n  fadeColorToPressedState\n]\n\nexport const CHECKMARK_ANIMATION = [\n  fadeColorToPressedState\n]\n\nexport const REACT_ANIMATION = [\n  {\n    properties: [\n      { backgroundColor: 'var(--action-button-fill-color)' },\n      { backgroundColor: 'var(--action-button-fill-color-pressed)' }\n    ],\n    options: {\n      duration: 222,\n      easing: 'linear'\n    }\n  },\n  {\n    properties: [\n      { transform: 'scale(1)' },\n      { transform: 'scale(1.175)' },\n      { transform: 'scale(1)' }\n    ],\n    options: {\n      duration: 222,\n      easing: 'ease-in-out'\n    }\n  }\n]\n","<div class=\"status-toolbar {isStatusInOwnThread ? 'status-in-own-thread' : ''}\" ref:node>\n  <IconButton className=\"status-toolbar-reply-button\" label={replyLabel} pressedLabel=\"Close reply\"\n    pressable={true} pressed={replyShown} href={replyIcon} clickListener={false} elementId={replyKey} />\n  <IconButton label={reblogLabel} pressedLabel=\"Unboost\" pressable={!reblogDisabled} pressed={reblogged}\n    checked={reblogged} disabled={reblogDisabled} href={reblogIcon} clickListener={false} elementId={reblogKey}\n    ref:reblogIcon rightClickListener={hasQuote} on:rightClick=\"openQuoteDialog()\" />\n  <IconButton label=\"Favorite\" pressedLabel=\"Unfavorite\" pressable={true} pressed={favorited}\n    checked={favorited} href=\"#fa-star\" clickListener={false} elementId={favoriteKey} ref:favoriteIcon\n    rightClickListener={hasReactions} on:rightClick=\"pickEmojiReaction()\" />\n  <IconButton label=\"More options\" href=\"#fa-ellipsis-h\" clickListener={false} elementId={optionsKey} />\n</div>\n{#if enableShortcuts}\n<Shortcut scope={shortcutScope} key=\"f\" on:pressed=\"toggleFavorite(true)\" />\n<Shortcut scope={shortcutScope} key=\"r\" on:pressed=\"reply()\" />\n<Shortcut scope={shortcutScope} key=\"escape\" on:pressed=\"dismiss()\" />\n<Shortcut scope={shortcutScope} key=\"b\" on:pressed=\"reblog(true)\" />\n<Shortcut scope={shortcutScope} key=\"a\" on:pressed=\"bookmark()\" />\n{/if}\n<style>\n  .status-toolbar {\n    grid-area: toolbar;\n    display: flex;\n    justify-content: space-between;\n    pointer-events: none;\n  }\n\n  .status-toolbar.status-in-own-thread {\n    margin-left: 63px;\n    /* offset to align all toolbar items: 48px avatar + 15px margin-right */\n  }\n\n  @media (max-width: 767px) {\n    .status-toolbar.status-in-own-thread {\n      margin-left: 53px;\n      /* offset to align all toolbar items: 48px avatar + 5px margin-right */\n    }\n  }\n\n  @media (max-width: 240px) {\n    :global(.status-toolbar .icon-button-svg:not(.icon-button-check)) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n</style>\n<script>\n  import IconButton from '../IconButton.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { store } from '../../_store/store.js'\n  import { registerClickDelegates } from '../../_utils/delegate.js'\n  import { setFavorited } from '../../_actions/favorite.js'\n  import { setReblogged } from '../../_actions/reblog.js'\n  import { importShowStatusOptionsDialog } from '../dialog/asyncDialogs/importShowStatusOptionsDialog.js'\n  import { updateProfileAndRelationship } from '../../_actions/accounts.js'\n  import { CHECKMARK_ANIMATION, FAVORITE_ANIMATION, REBLOG_ANIMATION } from '../../_static/animations.js'\n  import { on } from '../../_utils/eventBus.js'\n  import { announceAriaLivePolite } from '../../_utils/announceAriaLivePolite.js'\n  import { setStatusBookmarkedOrUnbookmarked } from '../../_actions/bookmark.js'\n  import { pickEmojiReaction } from '../../_actions/react.js'\n  import { quote } from '../../_actions/quote.js'\n\n  export default {\n    oncreate () {\n      const {\n        favoriteKey,\n        reblogKey,\n        replyKey,\n        optionsKey\n      } = this.get()\n      registerClickDelegates(this, {\n        [favoriteKey]: () => {\n          this.toggleFavorite()\n          return true\n        },\n        [reblogKey]: () => {\n          this.reblog()\n          return true\n        },\n        [replyKey]: () => {\n          this.reply()\n          return true\n        },\n        [optionsKey]: () => {\n          this.onOptionsClick()\n          return true\n        }\n      })\n      on('postedStatus', this, this.onPostedStatus)\n    },\n    components: {\n      IconButton,\n      Shortcut\n    },\n    store: () => store,\n    methods: {\n      toggleFavorite (announce) {\n        const { originalStatusId, favorited } = this.get()\n        const newFavoritedValue = !favorited\n        /* no await */ setFavorited(originalStatusId, newFavoritedValue)\n        if (newFavoritedValue) {\n          this.refs.favoriteIcon.animate(FAVORITE_ANIMATION, CHECKMARK_ANIMATION)\n        }\n        if (announce) {\n          announceAriaLivePolite(newFavoritedValue ? \"favorited\" : \"unfavorited\")\n        }\n      },\n      reblog (announce) {\n        const { originalStatusId, reblogged } = this.get()\n        const newRebloggedValue = !reblogged\n        /* no await */ setReblogged(originalStatusId, newRebloggedValue)\n        if (newRebloggedValue) {\n          this.refs.reblogIcon.animate(REBLOG_ANIMATION, CHECKMARK_ANIMATION)\n        }\n        if (announce) {\n          announceAriaLivePolite(newRebloggedValue ? \"boosted\" : \"unboosted\")\n        }\n      },\n      reply () {\n        requestAnimationFrame(() => {\n          const { uuid } = this.get()\n          const { repliesShown } = this.store.get()\n          repliesShown[uuid] = !repliesShown[uuid]\n          this.store.set({ repliesShown })\n          this.fire('recalculateHeight')\n        })\n      },\n      dismiss () {\n        const { replyShown } = this.get()\n        if (replyShown) {\n          this.reply()\n          this.fire('focusArticle')\n        }\n      },\n      async onOptionsClick () {\n        const { originalStatus, originalAccountId } = this.get()\n        const updateRelationshipPromise = updateProfileAndRelationship(originalAccountId)\n        const showStatusOptionsDialog = await importShowStatusOptionsDialog()\n        await Promise.resolve()\n        showStatusOptionsDialog(originalStatus)\n        await updateRelationshipPromise\n      },\n      onPostedStatus (realm, inReplyToUuid) {\n        const {\n          originalStatusId,\n          uuid\n        } = this.get()\n        if (realm !== originalStatusId ||\n          inReplyToUuid !== uuid) {\n          return\n        }\n        try {\n          // return status to the reply button after posting a reply\n          this.refs.node.querySelector('.status-toolbar-reply-button').focus({ preventScroll: true })\n        } catch (e) { /* ignore */ }\n      },\n      bookmark () {\n        const { originalStatus, originalStatusId } = this.get()\n        /* no await */ setStatusBookmarkedOrUnbookmarked(originalStatusId, !originalStatus.bookmarked)\n      },\n      async pickEmojiReaction () {\n        const { originalStatus } = this.get()\n        pickEmojiReaction(originalStatus)\n      },\n      openQuoteDialog () {\n        const { originalStatus } = this.get()\n        quote(originalStatus)\n      }\n    },\n    data: () => ({\n      favoriteAnimation: FAVORITE_ANIMATION,\n      reblogAnimation: REBLOG_ANIMATION\n    }),\n    computed: {\n      replyLabel: ({ inReplyToId }) => (\n        inReplyToId ? \"Reply to thread\" : \"Reply\"\n      ),\n      replyIcon: ({ inReplyToId }) => inReplyToId ? '#fa-reply-all' : '#fa-reply',\n      isUser: ({ originalAccountId, $currentVerifyCredentials }) => $currentVerifyCredentials && originalAccountId === $currentVerifyCredentials.id,\n      reblogLabel: ({ visibility, isUser }) => {\n        switch (visibility) {\n          case 'private':\n            return isUser ? \"Boost\" + ' (' + \"Followers-only\" + ')' : \"Cannot be boosted because this is followers-only\"\n          case 'direct':\n            return \"Cannot be boosted because this is a direct message\"\n          default:\n            return \"Boost\"\n        }\n      },\n      reblogIcon: ({ visibility, isUser }) => {\n        switch (visibility) {\n          case 'private':\n            return isUser ? '#fa-retweet-lock' : '#fa-lock'\n          case 'direct':\n            return '#fa-envelope'\n          default:\n            return '#fa-retweet'\n        }\n      },\n      reblogDisabled: ({ visibility, isUser }) => {\n        return visibility === 'direct' || (visibility === 'private' && !isUser)\n      },\n      reblogged: ({ originalStatusId, $currentStatusModifications, originalStatus }) => {\n        if ($currentStatusModifications && originalStatusId in $currentStatusModifications.reblogs) {\n          return $currentStatusModifications.reblogs[originalStatusId]\n        }\n        return originalStatus.reblogged\n      },\n      favorited: ({ originalStatusId, $currentStatusModifications, originalStatus }) => {\n        if ($currentStatusModifications && originalStatusId in $currentStatusModifications.favorites) {\n          return $currentStatusModifications.favorites[originalStatusId]\n        }\n        return originalStatus.favourited\n      },\n      favoriteKey: ({ uuid }) => `fav-${uuid}`,\n      reblogKey: ({ uuid }) => `reblog-${uuid}`,\n      replyKey: ({ uuid }) => `reply-${uuid}`,\n      optionsKey: ({ uuid }) => `options-${uuid}`,\n      hasReactions: ({ status }) => Boolean(status.reactions || status.emoji_reactions),\n      hasQuote: ({ status }) => 'quote' in status\n    }\n  }\n</script>\n","export const importShowStatusOptionsDialog = () => import(\n  '../creators/showStatusOptionsDialog.js'\n).then(mod => mod.default)\n","<div class=\"play-video-icon {className || ''}\">\n  <SvgIcon className=\"play-video-icon-svg\" href=\"#fa-play-circle\" />\n</div>\n<style>\n  .play-video-icon {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 40;\n    pointer-events: none;\n  }\n  :global(.play-video-icon-svg) {\n    width: 72px;\n    height: 72px;\n    fill: var(--mask-svg-fill);\n    border-radius: 100%;\n    background: var(--mask-opaque-bg);\n  }\n</style>\n<script>\n  import SvgIcon from './SvgIcon.html'\n\n  export default {\n    data: () => ({\n      className: undefined\n    }),\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","<div class=\"autoplay-wrapper\">\n    <video\n    class=\"autoplay-video\"\n    aria-label={ariaLabel || ''}\n    style=\"{focusStyle} background-image: url({poster}); \"\n    {poster}\n    {width}\n    {height}\n    {src}\n    autoplay\n    muted\n    loop\n    webkit-playsinline\n    playsinline\n    />\n</div>\n<style>\n  .autoplay-wrapper {\n    position: relative;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .autoplay-video {\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n</style>\n<script>\n  import { store } from '../_store/store.js'\n  import { coordsToPercent } from '../_utils/coordsToPercent.js'\n\n  export default {\n\n    data: () => ({\n      focus: undefined\n    }),\n    store: () => store,\n    computed: {\n      focusStyle: ({ focus }) => {\n        // Here we do a pure css version instead of using\n        // https://github.com/jonom/jquery-focuspoint#1-calculate-your-images-focus-point\n\n        if (!focus) return 'background-position: center;'\n        return `object-position: ${coordsToPercent(focus.x)}% ${100 - coordsToPercent(focus.y)}%;`\n      }\n    }\n  }\n</script>\n","<div class=\"non-autoplay-gifv\"\n     on:mouseover=\"onMouseOver(event)\"\n     ref:node\n>\n  {#if playing}\n    <AutoplayVideo\n      ariaLabel={label}\n      {poster}\n      {src}\n      {width}\n      {height}\n      {focus}\n      />\n  {:else}\n    <LazyImage\n      alt={label || ''}\n      title={label || ''}\n      src={staticSrc}\n      {blurhash}\n      fallback={oneTransparentPixel}\n      {width}\n      {height}\n      background=\"var(--loading-bg)\"\n      {focus}\n    />\n  {/if}\n  {#if !blurhash}\n    <PlayVideoIcon className={playing ? 'hidden' : ''}/>\n  {/if}\n</div>\n<style>\n  .non-autoplay-gifv {\n    cursor: zoom-in;\n    display: flex;\n    position: relative;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n\n  :global(.non-autoplay-gifv .play-video-icon) {\n    transition: opacity 0.2s linear;\n  }\n</style>\n<script>\n  import { mouseover } from '../_utils/events.js'\n  import PlayVideoIcon from './PlayVideoIcon.html'\n  import { ONE_TRANSPARENT_PIXEL } from '../_static/media.js'\n  import LazyImage from './LazyImage.html'\n  import AutoplayVideo from './AutoplayVideo.html'\n\n  export default {\n    methods: {\n      onMouseOver (mouseOver) {\n        this.set({ playing: mouseOver })\n      }\n    },\n    events: {\n      mouseover\n    },\n    data: () => ({\n      oneTransparentPixel: ONE_TRANSPARENT_PIXEL,\n      focus: undefined\n    }),\n    components: {\n      PlayVideoIcon,\n      LazyImage,\n      AutoplayVideo\n    }\n  }\n</script>\n","<div class=\"file-icon {className || ''}\">\n  <SvgIcon className=\"file-icon-svg\" href=\"#fa-file\" />\n</div>\n<style>\n  .file-icon {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 40;\n    pointer-events: none;\n  }\n  :global(.file-icon-svg) {\n    width: 72px;\n    height: 72px;\n    fill: var(--mask-svg-fill);\n    background: var(--mask-opaque-bg);\n  }\n</style>\n<script>\n  import SvgIcon from './SvgIcon.html'\n\n  export default {\n    data: () => ({\n      className: undefined\n    }),\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","const colorsToUrls = new Map()\nlet canvas\nlet context\n\nexport function convertCssPropertyToDataUrl (prop) {\n  const color = getComputedStyle(document.documentElement).getPropertyValue(prop)\n  let url = colorsToUrls.get(color)\n  if (!url) {\n    if (!canvas) {\n      canvas = document.createElement('canvas')\n      canvas.width = 1\n      canvas.height = 1\n      context = canvas.getContext('2d')\n    }\n    context.fillStyle = color\n    context.rect(0, 0, 1, 1)\n    context.fill()\n    url = canvas.toDataURL()\n    colorsToUrls.set(color, url)\n  }\n  return url\n}\n","{#if !blurhash && type === 'unknown'}\n  <button id={elementId}\n            type=\"button\"\n            class=\"inline-media file-button focus-after\"\n            aria-label=\"attatched file\"\n            {tabindex}\n            aria-hidden={ariaHidden}\n            data-width={inlineWidth}\n            data-height={inlineHeight}>\n      <FileIcon />\n  </button>\n{:else}\n  {#if !blurhash && (type === 'video' || type === 'audio')}\n    <button id={elementId}\n            type=\"button\"\n            class=\"inline-media play-video-button focus-after {type === 'audio' ? 'play-audio-button' : ''} {noNativeWidthHeight ? 'no-native-width-height' : ''}\"\n            aria-label={videoOrAudioButtonLabel}\n            {tabindex}\n            aria-hidden={ariaHidden}\n            data-width={inlineWidth}\n            data-height={inlineHeight}>\n      <PlayVideoIcon />\n      {#if type === 'video'}\n        <LazyImage\n          alt={description}\n          title={description}\n          src={previewUrl}\n          fallback={oneTransparentPixel}\n          {blurhash}\n          width={inlineWidth}\n          height={inlineHeight}\n          background=\"var(--loading-bg)\"\n          {focus}\n        />\n      {/if}\n    </button>\n  {:else}\n    <button id={elementId}\n          type=\"button\"\n          class=\"inline-media show-image-button focus-after {(noNativeWidthHeight && !blurhash) ? 'no-native-width-height' : ''}\"\n          aria-label={imageButtonAriaLabel}\n          title={description}\n          on:mouseover=\"set({mouseover: event})\"\n          {tabindex}\n          aria-hidden={ariaHidden}\n          data-width={inlineWidth}\n          data-height={inlineHeight}\n  >\n  {#if type === 'gifv' && $autoplayGifs && !blurhash}\n    <AutoplayVideo\n      ariaLabel={animatedLabel}\n      poster={previewUrl}\n      src={url}\n      width={inlineWidth}\n      height={inlineHeight}\n      {focus}\n    />\n  {:elseif type === 'gifv'}\n    <NonAutoplayGifv\n      class={noNativeWidthHeight ? 'no-native-width-height' : ''}\n      label={animatedLabel}\n      poster={previewUrl}\n      {blurhash}\n      src={url}\n      staticSrc={previewUrl}\n      width={inlineWidth}\n      height={inlineHeight}\n      playing={mouseover}\n      {focus}\n    />\n  {:else}\n    <LazyImage\n      alt={description}\n      title={description}\n      src={previewUrl}\n      fallback={oneTransparentPixel}\n      {blurhash}\n      width={inlineWidth}\n      height={inlineHeight}\n      background=\"var(--loading-bg)\"\n      {focus}\n    />\n  {/if}\n    </button>\n  {/if}\n{/if}\n<style>\n  :global(.status-media video, .status-media img) {\n    object-fit: cover;\n  }\n\n  .play-video-button, .show-image-button, .file-button {\n    margin: auto;\n    padding: 0;\n    border-radius: 0;\n    border: none;\n    background: none;\n  }\n\n  .file-button {\n    background: var(--mask-bg);\n  }\n\n  .play-audio-button {\n    background: var(--audio-bg);\n  }\n\n  .show-image-button {\n    cursor: zoom-in;\n  }\n\n  .inline-media {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  :global(.no-native-width-height img, .no-native-width-height video){\n    object-fit: contain;\n  }\n</style>\n<script>\n  import { DEFAULT_MEDIA_WIDTH, DEFAULT_MEDIA_HEIGHT, ONE_TRANSPARENT_PIXEL } from '../../_static/media.js'\n  import { importShowMediaDialog } from '../dialog/asyncDialogs/importShowMediaDialog.js'\n  import { mouseover } from '../../_utils/events.js'\n  import NonAutoplayGifv from '../NonAutoplayGifv.html'\n  import PlayVideoIcon from '../PlayVideoIcon.html'\n  import FileIcon from '../FileIcon.html'\n  import { store } from '../../_store/store.js'\n  import LazyImage from '../LazyImage.html'\n  import AutoplayVideo from '../AutoplayVideo.html'\n  import { registerClickDelegate } from '../../_utils/delegate.js'\n  import { convertCssPropertyToDataUrl } from '../../_utils/convertCssPropertyToDataUrl.js'\n  import { formatIntl } from '../../_utils/formatIntl.js'\n\nexport default {\n    async oncreate () {\n      const { elementId } = this.get()\n      registerClickDelegate(this, elementId, () => this.onClick())\n    },\n    computed: {\n      focus: ({ meta }) => meta && meta.focus,\n      // width/height to show inline\n      inlineWidth: ({ smallWidth }) => {\n        return smallWidth || DEFAULT_MEDIA_WIDTH\n      },\n      inlineHeight: ({ smallHeight }) => {\n        return smallHeight || DEFAULT_MEDIA_HEIGHT\n      },\n      // width/height to show in a modal\n      modalWidth: ({ originalWidth, smallWidth }) => originalWidth || smallWidth || 0,\n      modalHeight: ({ originalHeight, smallHeight }) => originalHeight || smallHeight || 0,\n      meta: ({ media }) => media.meta,\n      small: ({ meta }) => meta && meta.small,\n      original: ({ meta }) => meta && meta.original,\n      smallWidth: ({ small }) => small && small.width,\n      smallHeight: ({ small }) => small && small.height,\n      originalWidth: ({ original }) => original && original.width,\n      originalHeight: ({ original }) => original && original.height,\n      noNativeWidthHeight: ({ smallWidth, smallHeight }) => typeof smallWidth !== 'number' || typeof smallHeight !== 'number',\n      elementId: ({ media, uuid }) => `media-${uuid}-${media.id}`,\n      description: ({ media }) => media.description || '',\n      previewUrl: ({ media }) => media.preview_url,\n      decodedBlurhash: ({ media }) => media.decodedBlurhash,\n      blurhashToUse: ({ decodedBlurhash, $ignoreBlurhash }) => {\n        if (!$ignoreBlurhash && decodedBlurhash) {\n          return decodedBlurhash\n        }\n        return convertCssPropertyToDataUrl('--mask-bg')\n      },\n      blurhash: ({ blurhashToUse, showAsSensitive }) => showAsSensitive && blurhashToUse,\n      url: ({ media }) => media.url,\n      type: ({ media }) => media.type,\n      tabindex: ({ showAsSensitive }) => showAsSensitive ? '-1' : '0',\n      ariaHidden: ({ showAsSensitive }) => showAsSensitive,\n      imageButtonAriaLabel: ({ type, description }) => (\n        formatIntl([\"Show \",[\"animated\",\"select\",{\"true\":[\"animated\"],\"other\":[]}],\" image: \",[\"description\"]], { animated: type === 'gifv', description })\n      ),\n      videoOrAudioButtonLabel: ({ type, description }) => (\n        formatIntl([\"Play \",[\"audio\",\"select\",{\"true\":[\"audio\"],\"other\":[\"video\"]}],\": \",[\"description\"]], { audio: type === 'audio', description })\n      ),\n      animatedLabel: ({ description }) => (\n        formatIntl([\"Animated image: \",[\"description\"]], { description })\n      )\n    },\n    methods: {\n      onClick () {\n        (async () => {\n          const { mediaAttachments, index } = this.get()\n          console.log(mediaAttachments[index])\n          const showMediaDialog = await importShowMediaDialog()\n          showMediaDialog(mediaAttachments, index)\n        })()\n        return true\n      }\n    },\n    data: () => ({\n      oneTransparentPixel: ONE_TRANSPARENT_PIXEL,\n      mouseover: undefined\n    }),\n    store: () => store,\n    events: {\n      mouseover\n    },\n    components: {\n      NonAutoplayGifv,\n      PlayVideoIcon,\n      FileIcon,\n      LazyImage,\n      AutoplayVideo\n    }\n  }\n</script>\n","{#if sensitive }\n<div class={computedClass}>\n  <easrng-image-grid class={innerComputedClass} style={computedStyle}>\n    <div slot=\"extra\">\n      {#if sensitiveShown}\n        <button id={elementId}\n              type=\"button\"\n              class=\"status-sensitive-media-button\"\n              aria-label=\"Hide sensitive media\"\n              ref:hideSensitiveMedia\n      >\n        <div class=\"svg-wrapper\">\n          <SvgIcon className=\"status-sensitive-media-svg\"\n                   href=\"#fa-eye-slash\" />\n        </div>\n        </button>\n      {:else}\n        <button id={elementId}\n              type=\"button\"\n              class=\"status-sensitive-media-button\"\n              aria-label=\"Show sensitive media\"\n              ref:showSensitiveMedia\n      >\n\n        <div class=\"status-sensitive-media-warning\">\n          <div class=\"status-sensitive-media-warning-text\">\n            Sensitive content. Click to show.\n          </div>\n        </div>\n        <div class=\"svg-wrapper\">\n          <SvgIcon className=\"status-sensitive-media-svg\" href=\"#fa-eye\" />\n        </div>\n        </button>\n      {/if}\n    </div>\n    {#each mediaAttachments as media, index}\n      <Media {media} {uuid} {mediaAttachments} {index} {showAsSensitive} />\n    {/each}\n  </easrng-image-grid>\n</div>\n{#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"y\" on:pressed=\"toggleSensitiveMedia(false)\"/>\n{/if}\n{:else}\n  <div class=\"status-media\">\n    <easrng-image-grid class={innerComputedClass} style={computedStyle}>\n      {#each mediaAttachments as media, index}\n        <Media {media} {uuid} {mediaAttachments} {index} {showAsSensitive} />\n      {/each}\n    </easrng-image-grid>\n  </div>\n{/if}\n{#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"i\" on:pressed=\"showFirstMedia()\" />\n{/if}\n<style>\n  .status-sensitive-media-container {\n    grid-area: media;\n    width: 100%;\n    margin: 10px 0;\n    position: relative;\n    border-radius: 0;\n    border: none;\n    background: none;\n  }\n\n  .status-sensitive-inner-div {\n    height: 100%;\n  }\n\n  .status-sensitive-media-container .status-sensitive-inner-div {\n    position: relative;\n    width: 100%;\n  }\n\n  .status-sensitive-media-button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n\n  .status-sensitive-media-button:hover {\n    background: none;\n  }\n\n  .status-sensitive-media-button:active {\n    background: none;\n  }\n\n  .status-sensitive-media-shown .status-sensitive-media-button {\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    z-index: 90;\n  }\n\n  .status-sensitive-media-hidden .status-sensitive-media-button {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .status-sensitive-media-container .status-sensitive-media-warning {\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--deemphasized-text-color);\n    z-index: 60;\n    padding: 0 10px;\n    position: absolute;\n  }\n\n  .status-sensitive-media-container .status-sensitive-media-warning .status-sensitive-media-warning-text {\n    background: var(--mask-bg);\n    padding: 10px;\n    border-radius: 6px;\n    color: var(--blurhash-sensitive-text-color);\n  }\n\n  .status-sensitive-media-container .svg-wrapper {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    z-index: 40;\n    pointer-events: none;\n    background: var(--mask-bg);\n  }\n\n  .status-sensitive-media-hidden .svg-wrapper {\n    position: absolute;\n    background: none;\n    top: 5px;\n    left: 5px;\n    right: 0;\n    bottom: 0;\n  }\n\n  .status-sensitive-media-container .svg-wrapper {\n    border-radius: 6px;\n  }\n\n  .status-sensitive-media-container.status-sensitive-media-shown .svg-wrapper {\n    background: none;\n  }\n\n  :global(.status-sensitive-media-svg) {\n    width: 24px;\n    height: 24px;\n    fill: var(--mask-svg-fill);\n    border-radius: 2px;\n    background: var(--mask-opaque-bg);\n    margin: 5px;\n    padding: 6px 10px;\n  }\n  \n  :global(.status-sensitive-media-container.status-sensitive-media-hidden .status-sensitive-media-svg) {\n    fill: var(--blurhash-sensitive-text-color);\n    background: var(--mask-bg);\n  }\n\n  .status-media {\n    grid-area: media;\n    margin: 10px 10px 10px 5px;\n  }\n\n  .status-media easrng-image-grid {\n    overflow: hidden;\n    border-radius: 6px;\n    position: relative;\n    max-height: calc(50vh * var(--attatchment-count));\n  }\n\n  .status-media :global(.inline-media img),\n  .status-media :global(.inline-media .lazy-image) {\n    width: 100%;\n    height: 100%;\n  }\n  \n  .status-media.status-media-is-sensitive {\n    height: inherit;\n    margin: 0;\n  }\n</style>\n<script>\n  import Media from './Media.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import SvgIcon from '../SvgIcon.html'\n  import { store } from '../../_store/store.js'\n  import { registerClickDelegate } from '../../_utils/delegate.js'\n  import { classname } from '../../_utils/classname.js'\n  import { importShowMediaDialog } from '../dialog/asyncDialogs/importShowMediaDialog.js'\n  import '@easrng/image-grid/index.js'\n\nexport default {\n    oncreate () {\n      const { elementId } = this.get()\n      registerClickDelegate(this, elementId, () => this.toggleSensitiveMedia(true))\n    },\n    components: {\n      Media,\n      Shortcut,\n      SvgIcon\n    },\n    store: () => store,\n    computed: {\n      computedClass: ({ sensitiveShown }) => classname(\n        'status-sensitive-media-container',\n        sensitiveShown ? 'status-sensitive-media-shown' : 'status-sensitive-media-hidden',\n        'status-media'\n      ),\n      mediaAttachments: ({ originalStatus }) => originalStatus.media_attachments,\n      sensitiveShown: ({ $sensitivesShown, uuid }) => !!$sensitivesShown[uuid],\n      sensitive: ({ originalStatus, $markMediaAsSensitive, $neverMarkMediaAsSensitive }) => (\n        !$neverMarkMediaAsSensitive && ($markMediaAsSensitive || originalStatus.sensitive || originalStatus.spoiler_text)\n      ),\n      elementId: ({ uuid }) => `sensitive-${uuid}`,\n      innerComputedClass: ({ sensitive }) => classname(\n        sensitive && 'status-media-is-sensitive'\n      ),\n      computedStyle: ({ mediaAttachments }) => `--attatchment-count:${mediaAttachments.length}`,\n      showAsSensitive: ({ sensitive, sensitiveShown }) => {\n        return sensitive ? !sensitiveShown : false\n      }\n    },\n    methods: {\n      toggleSensitiveMedia (changeFocus) {\n        const { uuid } = this.get()\n        const { sensitivesShown } = this.store.get()\n        sensitivesShown[uuid] = !sensitivesShown[uuid]\n        this.store.set({ sensitivesShown })\n        this.fire('recalculateHeight')\n        // Only change focus for clicks, not for hotkeys. It's weird if, when the entire toot\n        // is focused and you press \"y\", that the focus changes to the sensitive media button.\n        if (changeFocus) {\n          requestAnimationFrame(() => {\n            const element = this.refs.hideSensitiveMedia || this.refs.showSensitiveMedia\n            try {\n              element.focus({ preventScroll: true })\n            } catch (e) {\n              console.error('ignored focus error', e)\n            }\n          })\n        }\n        return true\n      },\n      async showFirstMedia () {\n        const { mediaAttachments } = this.get()\n        const showMediaDialog = await importShowMediaDialog()\n        showMediaDialog(mediaAttachments, 0)\n      }\n    }\n  }\n</script>\n","export function urlIsCrossOrigin (href) {\n  try {\n    return new URL(href, location.href).origin !== location.origin\n  } catch (e) {\n    console.error('Ignoring malformed URL', href)\n    return true\n  }\n}\n","import { importKatex } from './asyncModules/importKatex.js'\n\nfunction grabAllTextNodes (node, allText) {\n  const childNodes = node.childNodes\n  let length = childNodes.length\n  let subnode\n  let nodeType\n  while (length--) {\n    subnode = childNodes[length]\n    nodeType = subnode.nodeType\n    if (nodeType === 3) {\n      allText.push(subnode)\n    } else if (\n      nodeType === 1 &&\n      !('ownerSVGElement' in subnode) &&\n      !/^(?:iframe|noframes|noscript|script|select|style|textarea|code|pre)$/.test(\n        subnode.nodeName.toLowerCase()\n      )\n    ) {\n      grabAllTextNodes(subnode, allText)\n    }\n  }\n  return allText\n}\n\nfunction consumeBalanced (string, open, close) {\n  let balance = 1\n  let index = 0\n  while (index < string.length) {\n    if (string[index] === '\\\\' && string[index + 1] === open) {\n      balance++\n      index += 2\n    } else if (string[index] === '\\\\' && string[index + 1] === close) {\n      balance--\n      if (balance === 0) {\n        break\n      }\n      index += 2\n    } else {\n      index++\n    }\n  }\n  return {\n    consumed: string.slice(0, index),\n    remaining: string.slice(index + 2)\n  }\n}\n\nexport function katexify (node) {\n  const promises = []\n  const allText = grabAllTextNodes(node, [])\n  let length = allText.length\n  let modified\n  let fragment\n  let subnode\n  let text\n  while (length--) {\n    modified = false\n    fragment = document.createDocumentFragment()\n    subnode = allText[length]\n    text = subnode.nodeValue\n    function render (string, displayMode) {\n      modified = true\n      const element = document.createElement('span')\n      element.textContent = string\n      promises.push(importKatex().then(katex => {\n        katex.render(string, element, {\n          throwOnError: false,\n          displayMode\n        })\n      }))\n      return element\n    }\n    let match\n    while ((match = text.match(/((?<!\\$)\\$\\$(?!\\$))|(\\\\\\()|(\\\\\\[)/))) {\n      const prev = text.slice(0, match.index)\n      if (prev !== '') fragment.appendChild(document.createTextNode(prev))\n      text = text.slice(match.index + match[0].length)\n      if (match[1]) {\n        const consumed = text.slice(0, text.indexOf('$$'))\n        fragment.appendChild(render(consumed, false))\n        text = text.slice(consumed.length + 2)\n      } else if (match[2]) {\n        const { consumed, remaining } = consumeBalanced(text, '(', ')')\n        fragment.appendChild(render(consumed, false))\n        text = remaining\n      } else if (match[3]) {\n        const { consumed, remaining } = consumeBalanced(text, '[', ']')\n        fragment.appendChild(render(consumed, true))\n        text = remaining\n      }\n    }\n    if (text !== '') fragment.appendChild(document.createTextNode(text))\n    if (modified) {\n      subnode.parentNode.replaceChild(fragment, subnode)\n    }\n  }\n  return promises.length ? Promise.all(promises) : null\n}\n","export const importKatex = () =>\n  Promise.all([\n    import('katex'),\n    new Promise((resolve, reject) => {\n      if (document.querySelector('#theKatexStyle')) {\n        return resolve()\n      }\n      const style = document.createElement('link')\n      style.addEventListener('load', resolve)\n      style.addEventListener('error', reject)\n      style.id = 'theKatexStyle'\n      style.rel = 'stylesheet'\n      style.integrity = 'sha384-3UiQGuEI4TTMaFmGIZumfRPtfKQ3trwQE2JgosJxCnGmQpL/lJdjpcHkaaFwHlcI'\n      style.crossOrigin = 'anonymous'\n      style.href = 'https://cdn.jsdelivr.net/npm/katex@0.16.7/dist/katex.min.css'\n      document.head.appendChild(style)\n    })\n  ]).then(e => e[0].default)\n","<div class=\"status-content-wrapper\">\n  <div class={computedClass} ref:node>\n    {@html massagedContent}\n  </div>\n  {#if showTranslate}\n    <div class=\"status-translate-toolbar\">\n      <div class=\"status-translate-toolbar-label\">\n        {#if translating}\n          Translating...\n        {:else}\n          {#if translateError}\n            There was an error translating this post\n          {:else}\n            Translated post from {translatedFrom}\n          {/if}\n        {/if}\n      </div>\n      <IconButton\n        label=\"Hide tranlation\"\n        href=\"#fa-times\"\n        on:click=\"onHideTranslateClick()\"\n      />\n    </div>\n  {/if}\n</div>\n<style>\n  .status-content {\n    margin: 10px 10px 10px 5px;\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: pre-wrap;\n    font-size: 1.17em;\n    display: none;\n  }\n\n  .status-content-wrapper {\n    grid-area: content;\n    width: 100%;\n  }\n\n  .status-content.status-in-own-thread {\n    font-size: 1.69em;\n    margin: 20px 10px 20px 5px;\n  }\n\n  .status-content.shown {\n    display: block;\n  }\n\n  .status-translate-toolbar {\n    font-size: 1.17em;\n    margin: 10px 10px 10px 5px;\n    border-radius: 3px;\n    padding: 0.25rem 1rem;\n    padding-right: 1rem;\n    background: var(--toast-bg);\n    color: var(--toast-text);\n    border: 1px solid var(--toast-border);\n    display: flex;\n    align-items: center;\n    padding-right: 0;\n  }\n\n  .status-translate-toolbar-label {\n    flex-grow: 1;\n    word-wrap: break-word;\n    width: 0;\n  }\n\n  :global(\n      .status-content p,\n      .status-content blockquote,\n      .status-content ul,\n      .status-content ol) {\n    margin: 0 0 20px;\n  }\n\n  :global(\n      .status-content p:first-child,\n      .status-content blockquote:first-child,\n      .status-content ul:first-child,\n      .status-content ol:first-child) {\n    margin: 0 0 20px;\n  }\n\n  :global(\n      .status-content p:last-child,\n      .status-content blockquote:last-child,\n      .status-content ul:last-child,\n      .status-content ol:last-child) {\n    margin: 0;\n  }\n\n  :global(.status-content blockquote) {\n    padding-left: 1.5rem;\n    border-left: 5px solid var(--body-bg);\n    /*color: var(--very-deemphasized-text-color);\n    font-style: italic;*/\n  }\n\n  :global(.status-content ul, .status-content ol) {\n    padding-left: 2rem;\n  }\n\n  .status-content.status-in-notification {\n    color: var(--very-deemphasized-text-color);\n  }\n  :global(.status-content.status-in-notification a, .status-mentions.status-in-notification a) {\n    color: var(--very-deemphasized-link-color);\n  }\n\n  :global(.underline-links .status-content a) {\n    text-decoration: underline;\n  }\n\n  @media (max-width: 240px) {\n    :global(\n      .status-content p:last-child,\n      .status-content blockquote:last-child,\n      .status-content ul:last-child,\n      .status-content ol:last-child) {\n      margin: 0 0 10px; /* looks better on KaiOS with some spacing here */\n    }\n  }\n\n</style>\n<script>\n  import { mark, stop } from '../../_utils/marks.js'\n  import { store } from '../../_store/store.js'\n  import { classname } from '../../_utils/classname.js'\n  import { massageUserText } from '../../_utils/massageUserText.js'\n  import { urlIsCrossOrigin } from '../../_utils/urlIsCrossOrigin.js'\n  import { importConfetti } from '../../_utils/asyncModules/importConfetti.js'\n  import { katexify } from '../../_utils/katexify.js'\n  import IconButton from '../IconButton.html'\n\n  export default {\n    components: {\n      IconButton\n    },\n    onupdate ({ changed }) {\n      if (changed.massagedContent || changed.showTranslate) {\n        this.hydrateContent()\n        requestAnimationFrame(() => this.fire('recalculateHeight'))\n      }\n    },\n    store: () => store,\n    computed: {\n      computedClass: ({ isStatusInOwnThread, isStatusInNotification, shown, translating }) => {\n        return classname(\n          'status-content',\n          isStatusInOwnThread && 'status-in-own-thread',\n          isStatusInNotification && 'status-in-notification',\n          shown && 'shown',\n          translating && 'translating'\n        )\n      },\n      content: ({ originalStatus }) => (originalStatus.content || ''),\n      massagedContent: ({ content, originalStatusEmojis, $autoplayGifs, translateContent, showTranslate, $disableDecomojiConverter }) => (\n        (showTranslate && translateContent)\n          ? translateContent\n          : massageUserText(content, originalStatusEmojis, $autoplayGifs, $disableDecomojiConverter)\n      ),\n      computedTranslateClass: ({ isStatusInOwnThread, isStatusInNotification, shown }) => {\n        return classname(\n          'status-translate',\n          isStatusInOwnThread && 'status-in-own-thread',\n          isStatusInNotification && 'status-in-notification',\n          shown && 'shown'\n        )\n      },\n      translateKey: ({ $currentInstance, originalStatusId }) => $currentInstance + '-' + originalStatusId,\n      translateState: ({ translateKey, $statusTranslations }) => {\n        if (!$statusTranslations || !$statusTranslations[translateKey]) return null\n        return $statusTranslations[translateKey]\n      },\n      showTranslate: ({ translateState }) => !!(translateState && translateState.show),\n      translating: ({ translateState }) => !!(translateState && translateState.loading),\n      translateError: ({ translateState }) => !!(translateState && translateState.error),\n      translateContent_: ({ $statusTranslationContents, translateKey }) => {\n        const tc = $statusTranslationContents[translateKey]\n        if (!tc) return {}\n        if (typeof tc === 'string') return { html: tc, detected: 'unknown' }\n        return tc\n      },\n      translateContent: ({ translateContent_ }) => translateContent_.html,\n      translatedFrom: ({ translateContent_, translateState }) => translateState && translateState.languageNames && (translateState.languageNames[translateContent_.detected] ? translateState.languageNames[translateContent_.detected] + ' (Detected)' : (translateState.languageNames[translateContent_.from] || translateContent_.detected))\n    },\n    methods: {\n      hydrateContent () {\n        mark('hydrateContent')\n        const node = this.refs.node\n        const { originalStatus, uuid } = this.get()\n        const { mentions, tags } = originalStatus\n        let count = 0\n        const anchors = Array.from(node.getElementsByTagName('A'))\n\n        for (const anchor of anchors) {\n          // hydrate hashtag\n          if (tags && anchor.classList.contains('hashtag')) {\n            for (const tag of tags) {\n              if (anchor.getAttribute('href').toLowerCase().endsWith(`/${tag.name.toLowerCase()}`)) {\n                anchor.setAttribute('href', `/tags/${tag.name}`)\n                anchor.setAttribute('id', `status-content-link-${uuid}-${++count}`)\n                anchor.removeAttribute('target')\n                anchor.removeAttribute('rel')\n              }\n            }\n          // hydrate mention\n          } else if (mentions && anchor.classList.contains('mention')) {\n            for (const mention of mentions) {\n              if (anchor.getAttribute('href') === mention.url) {\n                anchor.setAttribute('href', `/accounts/${mention.id}`)\n                anchor.setAttribute('title', `@${mention.acct}`)\n                anchor.setAttribute('id', `status-content-link-${uuid}-${++count}`)\n                anchor.removeAttribute('target')\n                anchor.removeAttribute('rel')\n              }\n            }\n          }\n          // hydrate external links\n          const href = anchor.getAttribute('href')\n          const hrefParsed = new URL(href, location.href)\n          const match = hrefParsed.href.match(/^https?:\\/\\/(?:[^/]+?\\.)?(?:twitter\\.com|nitter\\.[^/]+)(?:\\/(.*))?$/)\n          if (match) {\n            anchor.setAttribute('href', `/nitter/${encodeURIComponent(match[1] || '')}`)\n            anchor.setAttribute('target', '_blank')\n            anchor.setAttribute('rel', 'nofollow noopener')\n          } else if (hrefParsed.hostname.startsWith('pinafore') && hrefParsed.pathname === '/confetti') {\n            anchor.setAttribute('title', 'confetti!')\n            anchor.setAttribute('target', '_self')\n            anchor.setAttribute('href', '/confetti')\n            anchor.addEventListener('click', function (e) {\n              e.preventDefault()\n              importConfetti().then(confetti => confetti())\n            })\n          } if (urlIsCrossOrigin(href)) {\n            anchor.setAttribute('title', href)\n            anchor.setAttribute('target', '_blank')\n            anchor.setAttribute('rel', 'nofollow noopener')\n          }\n        }\n        const renderPromise = katexify(node)\n        if (renderPromise) {\n          renderPromise.then(() => {\n            this.fire('recalculateHeight')\n          })\n        }\n        stop('hydrateContent')\n      },\n      onHideTranslateClick () {\n        let { translateKey, translateState } = this.get()\n        translateState = translateState || {}\n        const { statusTranslations, statusTranslationContents } = this.store.get()\n        translateState.show = false\n        statusTranslations[translateKey] = translateState\n        delete statusTranslationContents[translateKey]\n        this.store.set({ statusTranslations, statusTranslationContents })\n      }\n    }\n  }\n</script>\n","export const importConfetti = () => import('../confetti.js').then(mod => mod.default)\r\n","<div class=\"status-spoiler {isStatusInNotification ? 'status-in-notification' : ''} {isStatusInOwnThread ? 'status-in-own-thread' : ''}\">\n  <p>{@html massagedSpoilerText}</p>\n</div>\n<div class=\"status-spoiler-button {isStatusInOwnThread ? 'status-in-own-thread' : ''}\">\n  <button id={elementId} type=\"button\" >\n    {spoilerShown ? \"Show less\" : \"Show more\"}\n  </button>\n</div>\n{#if enableShortcuts}\n<Shortcut scope={shortcutScope} key=\"x\" on:pressed=\"toggleSpoilers()\"/>\n{/if}\n<style>\n  .status-spoiler {\n    grid-area: spoiler;\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: pre-wrap;\n    font-size: 0.9em;\n    margin: 10px 5px;\n  }\n\n  .status-spoiler.status-in-own-thread {\n    font-size: 1.3em;\n    margin: 20px 5px 10px;\n  }\n\n  .status-spoiler.status-in-notification {\n    color: var(--very-deemphasized-text-color);\n  }\n\n  .status-spoiler-button {\n    grid-area: spoiler-btn;\n    margin: 10px 5px;\n  }\n\n  .status-spoiler-button button {\n    padding: 5px 10px;\n    font-size: 1.1em;\n  }\n\n  :global(.underline-links .status-spoiler a) {\n    text-decoration: underline;\n  }\n\n</style>\n<script>\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { store } from '../../_store/store.js'\n  import { registerClickDelegate } from '../../_utils/delegate.js'\n  import { mark, stop } from '../../_utils/marks.js'\n  import { emojifyText } from '../../_utils/emojifyText.js'\n  import { on } from '../../_utils/eventBus.js'\n  import escapeHtml from 'escape-html'\n\n  export default {\n    oncreate () {\n      this.toggleSpoilers = this.toggleSpoilers.bind(this)\n      const { elementId } = this.get()\n      registerClickDelegate(this, elementId, () => this.toggleSpoilers())\n      on('toggleAllSpoilers', this, this.toggleSpoilers)\n    },\n    store: () => store,\n    components: {\n      Shortcut\n    },\n    computed: {\n      massagedSpoilerText: ({ spoilerText, originalStatusEmojis, $autoplayGifs, $disableDecomojiConverter, showTranslate, translateContent }) => {\n        spoilerText = escapeHtml(spoilerText)\n        return (showTranslate && translateContent)\n          ? translateContent\n          : emojifyText(spoilerText, originalStatusEmojis, $autoplayGifs, $disableDecomojiConverter)\n      },\n      elementId: ({ uuid }) => `spoiler-${uuid}`,\n      translateKey: ({ $currentInstance, originalStatusId }) => $currentInstance + '-' + originalStatusId,\n      translateState: ({ translateKey, $statusTranslations }) => {\n        if (!$statusTranslations || !$statusTranslations[translateKey]) return null\n        return $statusTranslations[translateKey]\n      },\n      showTranslate: ({ translateState }) => !!(translateState && translateState.show),\n      translateContent: ({ $statusTranslationContents, translateKey }) => {\n        const tc = $statusTranslationContents[translateKey]\n        if (!tc) return null\n        if (typeof tc === 'string') return null\n        return tc.spoiler\n      }\n    },\n    methods: {\n      toggleSpoilers (shown) {\n        const { uuid } = this.get()\n        const { spoilersShown, showAllSpoilers } = this.store.get()\n        const currentValue = typeof spoilersShown[uuid] === 'undefined' ? !!showAllSpoilers : spoilersShown[uuid]\n        spoilersShown[uuid] = typeof shown === 'undefined' ? !currentValue : !!shown\n        this.store.set({ spoilersShown })\n        requestAnimationFrame(() => {\n          mark('clickSpoilerButton')\n          this.fire('recalculateHeight')\n          stop('clickSpoilerButton')\n        })\n        return true\n      }\n    }\n  }\n</script>\n","<div class=\"status-article-compose-box\">\n  <ComposeBox realm={originalStatusId}\n              autoFocus=\"true\"\n              hideBottomBorder=\"true\"\n              isReply=\"true\"\n              replyVisibility={visibility}\n              replySpoiler={spoilerText}\n              inReplyToUuid={uuid}\n  />\n</div>\n<style>\n  .status-article-compose-box {\n    grid-area: compose;\n    max-width: 100%;\n  }\n</style>\n<script>\n  import ComposeBox from '../compose/ComposeBox.html'\n  import { store } from '../../_store/store.js'\n  import { debounce, throttle } from '../../_thirdparty/lodash/timers.js'\n  import { on } from '../../_utils/eventBus.js'\n  import { observe } from 'svelte-extras'\n\n  const DEBOUNCE_DELAY = 400\n  const THROTTLE_DELAY = 150\n\n  export default {\n    oncreate () {\n      on('postedStatus', this, this.onPostedStatus)\n      this.setupRecalculateHeightListener()\n    },\n    store: () => store,\n    computed: {\n      composeData: ({ $currentComposeData, originalStatusId }) => $currentComposeData[originalStatusId] || {}\n    },\n    methods: {\n      observe,\n      onPostedStatus (realm) {\n        const { originalStatusId } = this.get()\n        if (realm !== originalStatusId) {\n          return\n        }\n        requestAnimationFrame(() => {\n          const { uuid } = this.get()\n          const { repliesShown } = this.store.get()\n          repliesShown[uuid] = false\n          this.store.set({ repliesShown })\n          this.fire('recalculateHeight')\n        })\n      },\n      setupRecalculateHeightListener () {\n        const recalc = () => requestAnimationFrame(() => this.fire('recalculateHeight'))\n        // debounce AND throttle due to 333ms content warning animation\n        const debounced = debounce(recalc, DEBOUNCE_DELAY)\n        const throttled = throttle(() => {\n          debounced()\n          recalc()\n        }, THROTTLE_DELAY, {\n          leading: true,\n          trailing: true\n        })\n        this.observe('composeData', throttled)\n      }\n    },\n    components: {\n      ComposeBox\n    }\n  }\n</script>\n","{#if mentions.length}\n  <div class=\"status-mentions {isStatusInOwnThread ? 'status-in-own-thread' : ''}\">\n    <p>\n      {#each mentions as mention, i}\n        {#if i > 0}\n          <!-- empty space -->\n          &nbsp;\n          <!-- empty space -->\n        {/if}\n        <a id=\"status-mention-link-{uuid}-{mention.id}\"\n           href=\"/accounts/{mention.id}\"\n           rel=\"prefetch\"\n           title=\"@{mention.acct}\"\n        >\n          @{mention.username}\n        </a>\n      {/each}\n    </p>\n  </div>\n{/if}\n<style>\n  .status-mentions {\n    grid-area: mentions;\n    margin: 10px 0 10px 5px;\n    font-size: 0.9em;\n  }\n\n  .status-mentions.status-in-own-thread {\n    font-size: 1.3em;\n    margin: 20px 10px 20px 5px;\n  }\n\n  :global(.underline-links .status-mentions a) {\n    text-decoration: underline;\n  }\n\n</style>\n<script>\n  export default {\n    computed: {\n      mentions: ({ originalStatus }) => originalStatus.mentions || []\n    }\n  }\n</script>\n","<div\r\n  class=\"status-reactions {isStatusInOwnThread ? 'status-in-own-thread' : ''}\"\r\n>\r\n  {#each processedReactions as reaction}\r\n  <button\r\n    class=\"status-reaction not-same-pressed {reaction.me?'pressed':''}\"\r\n    on:click=\"onClick(event, reaction)\"\r\n  >\r\n    {@html reaction.html}\r\n    <span class=\"status-reaction-count\">{reaction.count}</span>\r\n  </button>\r\n  {/each}\r\n</div>\r\n<style>\r\n  .status-reaction {\r\n    border-radius: 4px;\r\n    background: var(--action-button-fill-color);\r\n    padding: 0.25rem 0.5rem;\r\n    border: 0;\r\n    color: var(--button-primary-text);\r\n  }\r\n\r\n  .status-reactions {\r\n    display: flex;\r\n    grid-template-rows: repeat(10001fr);\r\n    margin: 0 5px 10px;\r\n    grid-gap: 7px;\r\n    grid-area: reactions;\r\n  }\r\n\r\n  .status-reaction:hover {\r\n    background: var(--action-button-fill-color-hover);\r\n  }\r\n\r\n  .status-reaction.not-pressable:active,\r\n  .status-reaction.same-pressed:active {\r\n    background: var(--action-button-fill-color-active);\r\n  }\r\n\r\n  .status-reaction.pressed.not-same-pressed {\r\n    background: var(--action-button-fill-color-pressed);\r\n  }\r\n\r\n  .status-reaction.pressed.not-same-pressed:hover {\r\n    background: var(--action-button-fill-color-pressed-hover);\r\n  }\r\n\r\n  .status-reaction.pressed.not-same-pressed:active {\r\n    background: var(--action-button-fill-color-pressed-active);\r\n  }\r\n\r\n  .status-reaction.muted-style {\r\n    background: var(--action-button-deemphasized-fill-color);\r\n  }\r\n\r\n  .status-reaction.muted-style:hover {\r\n    background: var(--action-button-deemphasized-fill-color-hover);\r\n  }\r\n\r\n  .status-reaction.muted-style.not-pressable:active,\r\n  .status-reaction.muted-style.same-pressed:active {\r\n    background: var(--action-button-deemphasized-fill-color-active);\r\n  }\r\n\r\n  .status-reaction.muted-style.pressed.not-same-pressed {\r\n    background: var(--action-button-deemphasized-fill-color-pressed);\r\n  }\r\n\r\n  .status-reaction.muted-style.pressed.not-same-pressed:hover {\r\n    background: var(--action-button-deemphasized-fill-color-pressed-hover);\r\n  }\r\n\r\n  .status-reaction.muted-style.pressed.not-same-pressed:active {\r\n    background: var(--action-button-deemphasized-fill-color-pressed-active);\r\n  }\r\n</style>\r\n<script>\r\n  import { store } from '../../_store/store.js'\r\n  import { emojifyText } from '../../_utils/emojifyText.js'\r\n  import { animate } from '../../_utils/animate.js'\r\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\r\n  import { setReacted } from '../../_actions/react.js'\r\n  import { updateStatus } from '../../_actions/timeline.js'\r\n  import { REACT_ANIMATION } from '../../_static/animations.js'\r\n  \r\n  export default {\r\n    store: () => store,\r\n    components: {},\r\n    methods: {\r\n      async onClick (event, reaction) {\r\n        const { apiVersion, originalStatusId } = this.get()\r\n        const { reduceMotion, currentInstance, accessToken } = this.store.get()\r\n        this.store.setStatusReacted(\r\n          currentInstance,\r\n          originalStatusId,\r\n          reaction,\r\n          !reaction.me\r\n        )\r\n        if (!(reaction.me || reduceMotion)) {\r\n          animate(event.currentTarget, REACT_ANIMATION)\r\n        }\r\n        const didReact = await setReacted(\r\n          originalStatusId,\r\n          !reaction.me,\r\n          reaction,\r\n          apiVersion\r\n        )\r\n        if (didReact) {\r\n          scheduleIdleTask(() =>\r\n            updateStatus(currentInstance, accessToken, originalStatusId)\r\n          )\r\n        } else {\r\n          this.store.setStatusReacted(\r\n            currentInstance,\r\n            originalStatusId,\r\n            reaction,\r\n            reaction.me\r\n          )\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      processedReactions: ({ reactions, $autoplayGifs }) =>\r\n        reactions.map(e => {\r\n          const shortcode = e.url && e.name.replace(/:/g, '')\r\n          return {\r\n            ...e,\r\n            html: emojifyText(\r\n              e.url ? ':' + shortcode + ':' : e.name,\r\n              [\r\n                {\r\n                  url: e.url,\r\n                  static_url: e.static_url || e.url,\r\n                  shortcode\r\n                }\r\n              ],\r\n              $autoplayGifs,\r\n              true\r\n            )\r\n          }\r\n        }),\r\n      apiVersion: ({ $currentPleromaFeatures }) => {\r\n        return {\r\n          customEmojiReactions: $currentPleromaFeatures\r\n            ? $currentPleromaFeatures.includes('custom_emoji_reactions')\r\n            : true,\r\n          externReactions: true,\r\n          isPleroma: !!$currentPleromaFeatures\r\n        }\r\n      },\r\n      reactions: ({\r\n        originalStatus,\r\n        originalStatusId,\r\n        $currentStatusModifications\r\n      }) => {\r\n        const realReactions =\r\n          originalStatus.reactions || originalStatus.emoji_reactions\r\n        const modifiedReactions = $currentStatusModifications ? $currentStatusModifications.reactions || {} : {}\r\n        return realReactions.map(e => ({\r\n          ...e,\r\n          me:\r\n            originalStatusId + '-' + e.name in modifiedReactions\r\n              ? modifiedReactions[originalStatusId + '-' + e.name]\r\n              : e.me,\r\n          count: e.count + ((originalStatusId + '-' + e.name in modifiedReactions) && (modifiedReactions[originalStatusId + '-' + e.name] !== e.me)\r\n            ? (modifiedReactions[originalStatusId + '-' + e.name] ? 1 : -1)\r\n            : 0)\r\n        }))\r\n      }\r\n    }\r\n  }\r\n</script>\r\n","<div class=\"status-hashtag-bar {isStatusInNotification ? 'status-in-notification' : '' }\">\n  {#each hashtagsInBar as hashtagInBar}\n  <a href=\"/tags/{hashtagInBar}\" class=\"hashtag\">#{hashtagInBar}</a>\n  {/each}\n</div>\n<style>\n  .status-hashtag-bar {\n    grid-area: tags;\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 5px 10px;\n    align-items: center;\n    justify-content: left;\n    font-size: 1.1em;\n  }\n  .status-hashtag-bar a {\n    color: var(--deemphasized-text-color);\n    margin-right: 0.5em;\n  }\n  .status-in-notification.status-hashtag-bar a {\n    color: var(--very-deemphasized-text-color)\n  }\n</style>","// adapted from https://unpkg.com/timeago.js@4.0.0-beta.1/lib/index.js\nimport { LOCALE } from '../../_static/intl.js'\nimport { thunk } from '../../_utils/thunk.js'\n\nconst IndexMapEn = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year']\nconst SEC_ARRAY = [60, 60, 24, 7, 365 / 7 / 12, 12]\nconst intlFormat = thunk(() => new Intl.RelativeTimeFormat(LOCALE))\n\nfunction formatRelativeTime (number, index) {\n  if (index === 0) {\n    if (process.env.NODE_ENV === 'test') {\n      return 'just now' // only used in mocha tests\n    }\n    return \"just now\"\n  }\n  const unit = IndexMapEn[Math.floor(index / 2)]\n\n  return intlFormat().format(number, unit)\n}\n\nfunction formatDiff (seconds) {\n  let i = 0\n\n  const pastDate = seconds < 0\n\n  // timein or timeago\n\n  seconds = Math.abs(seconds)\n\n  for (; seconds >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n    seconds /= SEC_ARRAY[i]\n  }\n  seconds = Math.floor(seconds)\n  i *= 2\n\n  if (seconds > (i === 0 ? 9 : 1)) {\n    i += 1\n  }\n  return formatRelativeTime(pastDate ? -seconds : seconds, i)\n}\n\nexport function format (milliseconds) {\n  return formatDiff(milliseconds / 1000)\n}\n","import { format } from '../_thirdparty/timeago/timeago.js'\nimport { mark, stop } from '../_utils/marks.js'\n\n// Format a date in the past\nexport function formatTimeagoDate (date, now) {\n  if (typeof date !== 'number') { // means \"never\" in Misskey\n    return \"Never\"\n  }\n  mark('formatTimeagoDate')\n  // use Math.min() to avoid things like \"in 10 seconds\" when the timestamps are slightly off\n  const res = format(Math.min(0, date - now))\n  stop('formatTimeagoDate')\n  return res\n}\n\n// Format a date in the future\nexport function formatTimeagoFutureDate (date, now) {\n  if (typeof date !== 'number') { // means \"never\" in Misskey\n    return \"Never\"\n  }\n  mark('formatTimeagoFutureDate')\n  // use Math.max() for same reason as above\n  const res = format(Math.max(0, date - now))\n  stop('formatTimeagoFutureDate')\n  return res\n}\n","import { getPoll as getPollApi, voteOnPoll as voteOnPollApi } from '../_api/polls.js'\nimport { store } from '../_store/store.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function getPoll (pollId) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    const poll = await getPollApi(currentInstance, accessToken, pollId)\n    return poll\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(formatIntl([\"Unable to refresh poll: \",[\"error\"]], { error: (e.message || '') }))\n  }\n}\n\nexport async function voteOnPoll (pollId, choices) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    const poll = await voteOnPollApi(currentInstance, accessToken, pollId, choices.map(_ => _.toString()))\n    return poll\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(formatIntl([\"Unable to vote in poll: \",[\"error\"]], { error: (e.message || '') }))\n  }\n}\n","import { get, post, DEFAULT_TIMEOUT, WRITE_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport async function getPoll (instanceName, accessToken, pollId) {\n  const url = `${basename(instanceName)}/api/v1/polls/${pollId}`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n\nexport async function voteOnPoll (instanceName, accessToken, pollId, choices) {\n  const url = `${basename(instanceName)}/api/v1/polls/${pollId}/votes`\n  return post(url, { choices }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","<div class={computedClass} aria-busy={loading} >\n  {#if voted || expired }\n    <ul class=\"poll-choices\" aria-label=\"Poll results\">\n      {#each options as option}\n        <li class=\"poll-choice option\">\n          <div class=\"option-text\">\n            {#if option.ownVote}<span class=\"sr-only\">You voted for</span> {/if}<strong>{option.share}%</strong> <span>{@html cleanTitle(option.title)}</span>{#if option.ownVote} <SvgIcon className=\"poll-own-vote\" href=\"#fa-check\" />{/if}\n          </div>\n          <svg aria-hidden=\"true\">\n            <line x1=\"0\" y1=\"0\" x2=\"{option.share}%\" y2=\"0\" />\n          </svg>\n        </li>\n      {/each}\n    </ul>\n  {:else}\n    <form class=\"poll-form\" aria-label=\"Vote on poll\" on:submit=\"onSubmit(event)\" ref:form>\n      <ul class=\"poll-choices\" aria-label=\"Poll choices\">\n        {#each options as option, i}\n          <li class=\"poll-choice poll-form-option\">\n            <label>\n              <input type=\"{multiple ? 'checkbox' : 'radio'}\"\n                     name=\"poll-choice-{uuid}\"\n                     value=\"{i}\"\n                     on:change=\"onChange()\"\n              >\n              <span>{@html cleanTitle(option.title)}</span>\n            </label>\n          </li>\n        {/each}\n      </ul>\n      <button disabled={formDisabled} type=\"submit\">Vote</button>\n    </form>\n  {/if}\n  <ul class=\"poll-details\" aria-label=\"Poll details\">\n    <li class=\"poll-stat {notification ? 'is-notification' : ''}\">\n      <SvgIcon className=\"poll-icon\" href=\"#fa-bar-chart\" />\n      <span class=\"poll-stat-text\">{votesText}</span>\n    </li>\n    <li class=\"poll-stat {notification ? 'is-notification' : ''}\">\n      <SvgIcon className=\"poll-icon\" href=\"#fa-clock\" />\n      <span class=\"poll-stat-text poll-stat-expiry\">\n        <span class=\"{useNarrowSize ? 'sr-only' : ''}\">{expiryText}</span>\n        <time datetime={expiresAt} title={expiresAtAbsoluteFormatted}>\n          {expiresAtTimeagoFormatted}\n        </time>\n      </span>\n    </li>\n    <li class=\"poll-stat {notification ? 'is-notification' : ''} {expired ? 'poll-expired' : ''}\">\n      <button id={refreshElementId}\n              class=\"focus-fix\"\n              aria-label=\"Refresh\">\n        <SvgIcon className=\"poll-icon\" href=\"#fa-refresh\" />\n        <span class=\"poll-stat-text poll-stat-text-refresh\" aria-hidden=\"true\">\n          Refresh\n        </span>\n      </button>\n    </li>\n  </ul>\n</div>\n<style>\n  .poll {\n    grid-area: poll;\n    margin: 10px 10px 10px 5px;\n    padding: 20px;\n    border: 1px solid var(--main-border);\n    border-radius: 2px;\n    transition: opacity 0.2s linear;\n    display: none;\n  }\n\n  .poll.shown {\n    display: block;\n  }\n\n  .poll.status-in-own-thread {\n    padding: 20px;\n  }\n\n  .poll.poll-loading {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  ul.poll-choices {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li.poll-choice {\n    margin: 10px 0;\n    padding: 0;\n  }\n\n  li.poll-choice:first-child {\n    margin-top: 0;\n  }\n\n  .option {\n    margin: 0 0 10px 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    stroke: var(--svg-fill);\n    stroke-width: 10px;\n  }\n\n  .option-text {\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    font-size: 1.1em;\n  }\n\n  svg {\n    height: 10px;\n    width: 100%;\n    margin-top: 5px;\n  }\n\n  .status-in-notification .option-text {\n    color: var(--very-deemphasized-text-color);\n  }\n\n  .status-in-notification svg {\n    stroke: var(--very-deemphasized-text-color);\n  }\n\n  .status-in-own-thread .option-text {\n    font-size: 1.2em;\n  }\n\n  ul.poll-details {\n    display: grid;\n    grid-template-columns: max-content minmax(0, max-content) max-content;\n    grid-gap: 20px;\n    align-items: center;\n    justify-content: left;\n    margin: 10px 0 0 0;\n    padding: 0;\n    list-style: none;\n    overflow-x: hidden;\n  }\n\n  .poll-stat button {\n    /* reset button styles */\n    background: none;\n    box-shadow: none;\n    border: none;\n    border-spacing: 0;\n    margin: 0;\n    padding: 0;\n    font-size: inherit;\n    font-weight: normal;\n    text-align: left;\n    text-decoration: none;\n    text-indent: 0;\n    display: flex;\n    align-items: center;\n  }\n\n  .poll-stat button:hover {\n    text-decoration: underline;\n  }\n\n  li.poll-stat {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    color: var(--deemphasized-text-color);\n    padding: 0;\n    margin: 0;\n  }\n\n  .poll-stat.is-notification, .poll-stat.is-notification .poll-stat-text {\n    color: var(--very-deemphasized-text-color);\n  }\n\n  .poll-stat.poll-expired {\n    display: none;\n  }\n\n  .poll-stat-text {\n    margin-left: 5px;\n    color: var(--deemphasized-text-color);\n  }\n\n  .poll-stat-expiry {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  :global(.poll-icon) {\n    fill: var(--deemphasized-text-color);\n    width: 18px;\n    height: 18px;\n    min-width: 18px;\n  }\n\n  :global(.poll-own-vote) {\n    width: 18px;\n    height: 18px;\n    stroke: none;\n    fill: var(--svg-fill);\n    vertical-align: middle;\n    margin-left: 5px;\n  }\n\n  :global(.poll-stat.is-notification .poll-icon, .status-in-notification .poll-own-vote) {\n    fill: var(--very-deemphasized-text-color);\n  }\n\n  .poll-form-option {\n    padding-bottom: 10px;\n  }\n\n  .poll-form label span {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    word-break: break-word;\n    white-space: pre-wrap;\n    padding-left: 5px;\n  }\n\n  @media (max-width: 479px) {\n    .poll {\n      padding: 10px 5px;\n    }\n    .poll.status-in-own-thread {\n      padding: 10px;\n    }\n    ul.poll-details {\n      grid-gap: 5px;\n      justify-content: space-between;\n    }\n  }\n\n  @media (max-width: 320px) {\n    .poll-stat-text-refresh {\n      display: none; /* takes up too much space on small devices */\n    }\n    ul.poll-details {\n      grid-gap: 2px;\n    }\n    .poll-stat-text {\n      margin-left: 2px;\n    }\n    li.poll-choice {\n      margin: 5px 0;\n    }\n  }\n</style>\n<script>\n  import SvgIcon from '../SvgIcon.html'\n  import { store } from '../../_store/store.js'\n  import { formatTimeagoFutureDate, formatTimeagoDate } from '../../_intl/formatTimeagoDate.js'\n  import { absoluteDateFormatter } from '../../_utils/formatters.js'\n  import { registerClickDelegate } from '../../_utils/delegate.js'\n  import { classname } from '../../_utils/classname.js'\n  import { getPoll, voteOnPoll } from '../../_actions/polls.js'\n  import escapeHtml from 'escape-html'\n  import { emojifyText } from '../../_utils/emojifyText.js'\n  import { formatIntl } from '../../_utils/formatIntl.js'\n\n  const REFRESH_MIN_DELAY = 1000\n\n  async function doAsyncActionWithDelay (func) {\n    const start = Date.now()\n    const res = await func()\n    const timeElapsed = Date.now() - start\n    if (timeElapsed < REFRESH_MIN_DELAY) {\n      // If less than five seconds, then continue to show the loading animation\n      // so it's clear that something happened.\n      await new Promise(resolve => setTimeout(resolve, REFRESH_MIN_DELAY - timeElapsed))\n    }\n    return res\n  }\n\n  function getChoices (form, options) {\n    const res = []\n    for (let i = 0; i < options.length; i++) {\n      if (form.elements[i].checked) {\n        res.push(i)\n      }\n    }\n    return res\n  }\n\n  export default {\n    oncreate () {\n      this.onRefreshClick = this.onRefreshClick.bind(this)\n      const { refreshElementId } = this.get()\n      registerClickDelegate(this, refreshElementId, this.onRefreshClick)\n    },\n    data: () => ({\n      loading: false,\n      choices: []\n    }),\n    store: () => store,\n    computed: {\n      pollId: ({ originalStatus }) => originalStatus.poll.id,\n      poll: ({ originalStatus, $polls, pollId }) => $polls[pollId] || originalStatus.poll,\n      options: ({ poll, originalStatusEmojis, $autoplayGifs, votersOrVotesCount, $disableDecomojiConverter }) => (\n        poll.options.map(({ title, votes_count: optionsVotesCount }, index) => ({\n          title: emojifyText(escapeHtml(title), originalStatusEmojis, $autoplayGifs, $disableDecomojiConverter),\n          share: votersOrVotesCount ? Math.round(optionsVotesCount / votersOrVotesCount * 100) : 0,\n          ownVote: poll.own_votes.includes(index)\n        }))\n      ),\n      votersCount: ({ poll }) => poll.voters_count,\n      votesCount: ({ poll }) => poll.votes_count,\n      // Misskey reports the \"voters_count\" as null, so just use the \"votes_count\"\n      votersOrVotesCount: ({ votersCount, votesCount }) => typeof votersCount === 'number' ? votersCount : votesCount,\n      voted: ({ poll }) => poll.voted,\n      multiple: ({ poll }) => poll.multiple,\n      expired: ({ poll }) => poll.expired,\n      expiresAt: ({ poll }) => poll.expires_at,\n      // Misskey can have polls that never end. These give expiresAt as null\n      // Also, Mastodon v4+ uses ISO strings, whereas Mastodon pre-v4 used numbers\n      expiresAtTS: ({ expiresAt }) => (\n        (typeof expiresAt === 'number' || typeof expiresAt === 'string') ? new Date(expiresAt).getTime() : null\n      ),\n      expiresAtTimeagoFormatted: ({ expiresAtTS, expired, $now }) => (\n        expired ? formatTimeagoDate(expiresAtTS, $now) : formatTimeagoFutureDate(expiresAtTS, $now)\n      ),\n      expiresAtAbsoluteFormatted: ({ expiresAtTS }) => absoluteDateFormatter().format(expiresAtTS),\n      expiryText: ({ expired }) => expired ? \"Ended\" : \"Ends\",\n      refreshElementId: ({ uuid }) => `poll-refresh-${uuid}`,\n      useNarrowSize: ({ $isMobileSize, expired, isStatusInOwnThread }) => (\n        !isStatusInOwnThread && $isMobileSize && !expired\n      ),\n      formDisabled: ({ choices }) => !choices.length,\n      votesText: ({ votersOrVotesCount }) => (\n        formatIntl([[\"count\",\"plural\",0,{\"one\":[\"1 vote\"],\"other\":[[\"count\"],\" votes\"]}]], { count: votersOrVotesCount })\n      ),\n      computedClass: ({ isStatusInNotification, isStatusInOwnThread, loading, shown }) => (\n        classname(\n          'poll',\n          isStatusInNotification && 'status-in-notification',\n          isStatusInOwnThread && 'status-in-own-thread',\n          loading && 'poll-loading',\n          shown && 'shown'\n        )\n      )\n    },\n    methods: {\n      onRefreshClick () {\n        (async () => {\n          const { pollId } = this.get()\n          this.set({ loading: true })\n          try {\n            const poll = await doAsyncActionWithDelay(() => getPoll(pollId))\n            if (poll) {\n              const { polls } = this.store.get()\n              polls[pollId] = poll\n              this.store.set({ polls })\n            }\n          } finally {\n            this.set({ loading: false })\n          }\n        })()\n        return true\n      },\n      async onSubmit (e) {\n        e.preventDefault()\n        e.stopPropagation()\n        const { pollId, options, formDisabled } = this.get()\n        if (formDisabled) {\n          return\n        }\n        const choices = getChoices(this.refs.form, options)\n        this.set({ loading: true })\n        try {\n          const poll = await doAsyncActionWithDelay(() => voteOnPoll(pollId, choices))\n          if (poll) {\n            const { polls } = this.store.get()\n            polls[pollId] = poll\n            this.store.set({ polls })\n            // the height of the status changes after you vote on the poll\n            requestAnimationFrame(() => this.fire('recalculateHeight'))\n          }\n        } finally {\n          this.set({ loading: false })\n        }\n      },\n      onChange () {\n        const { options } = this.get()\n        const choices = getChoices(this.refs.form, options)\n        this.set({ choices })\n      }\n    },\n    helpers: {\n      cleanTitle (title) {\n        // Remove newlines and tabs.\n        // Mastodon UI doesn't care because in CSS it's formatted to be single-line, but we care\n        // if people somehow insert newlines, because it can really mess up the formatting.\n        return (title && title.replace(/[\\n\\t]+/g, ' ')) || ''\n      }\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","// Check if some condition applies for a node or any of its ancestors,\n// stopping at an element that returns true for the given stopFunc. Returns\n// false if none match\nexport function checkDomAncestors (node, checkFunc, stopFunc) {\n  let thisNode = node\n  while (thisNode) {\n    if (stopFunc(thisNode)) {\n      break\n    }\n    if (checkFunc(thisNode)) {\n      return true\n    }\n    thisNode = thisNode.parentElement\n  }\n  return false\n}\n","import { getAccountAccessibleName } from './getAccountAccessibleName.js'\nimport { POST_PRIVACY_OPTIONS } from '../_static/statuses.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nfunction getNotificationText (notification, omitEmojiInDisplayNames) {\n  if (!notification) {\n    return\n  }\n  const notificationAccountDisplayName = getAccountAccessibleName(notification.account, omitEmojiInDisplayNames)\n  if (notification.type === 'reblog') {\n    return formatIntl([[\"account\"],\" boosted your post\"], { account: notificationAccountDisplayName })\n  } else if (notification.type === 'favourite') {\n    return formatIntl([[\"account\"],\" favorited your post\"], { account: notificationAccountDisplayName })\n  } else if (notification.type === 'update') {\n    return formatIntl([[\"account\"],\" edited their post\"], { account: notificationAccountDisplayName })\n  }\n}\n\nfunction getPrivacyText (visibility) {\n  for (const option of POST_PRIVACY_OPTIONS) {\n    if (option.key === visibility) {\n      return option.label\n    }\n  }\n}\n\nfunction getReblogText (reblog, account, omitEmojiInDisplayNames) {\n  if (!reblog) {\n    return\n  }\n  const accountDisplayName = getAccountAccessibleName(account, omitEmojiInDisplayNames)\n  return formatIntl([\"Boosted by \",[\"account\"]], { account: accountDisplayName })\n}\n\nfunction cleanupText (text) {\n  return text.replace(/\\s+/g, ' ').trim()\n}\n\nexport function getAccessibleLabelForStatus (originalAccount, account, plainTextContent,\n  shortInlineFormattedDate, spoilerText, showContent,\n  reblog, notification, visibility, omitEmojiInDisplayNames,\n  disableLongAriaLabels, showMedia, sensitive, sensitiveShown, mediaAttachments, showPoll) {\n  const originalAccountDisplayName = getAccountAccessibleName(originalAccount, omitEmojiInDisplayNames)\n  const contentTextToShow = (showContent || !spoilerText)\n    ? cleanupText(plainTextContent)\n    : formatIntl([\"Content warning: \",[\"spoiler\"]], { spoiler: cleanupText(spoilerText) })\n  const mediaTextToShow = showMedia && \"has media\"\n  const mediaDescText = (showMedia && (!sensitive || sensitiveShown))\n    ? mediaAttachments.map(media => media.description)\n    : []\n  const pollTextToShow = showPoll && \"has poll\"\n  const privacyText = getPrivacyText(visibility)\n\n  if (disableLongAriaLabels) {\n    // Long text can crash NVDA; allow users to shorten it like we had it before.\n    return formatIntl([[\"privacy\"],\" post by \",[\"account\"]], { privacy: privacyText, account: originalAccountDisplayName })\n  }\n\n  const values = [\n    getNotificationText(notification, omitEmojiInDisplayNames),\n    originalAccountDisplayName,\n    contentTextToShow,\n    mediaTextToShow,\n    ...mediaDescText,\n    pollTextToShow,\n    shortInlineFormattedDate,\n    `@${originalAccount.acct}`,\n    privacyText,\n    getReblogText(reblog, account, omitEmojiInDisplayNames)\n  ].filter(Boolean)\n\n  return values.join(', ')\n}\n","<article id={elementId}\n         class={className}\n         tabindex=\"0\"\n         aria-posinset={index + 1}\n         aria-setsize={length}\n         aria-label={ariaLabel}\n         on:recalculateHeight\n         ref:article\n         on:load|capture=\"recalculateHeight()\"\n         style={\"--status-level:\" + Math.min(8, (treeMetadata && treeMetadata.level) || 0)}\n>\n  {#if showHeader}\n    <StatusHeader {...params} />\n  {/if}\n  <StatusAuthorName {...params} />\n  <StatusAuthorHandle {...params} />\n  {#if !isStatusInOwnThread}\n    <StatusRelativeDate {...params} {...timestampParams} />\n  {/if}\n  <StatusSidebar {...params} />\n  {#if spoilerText}\n    <StatusSpoiler {...params} {spoilerShown} on:recalculateHeight />\n  {/if}\n  {#if !showContent}\n    <StatusMentions {...params} />\n  {/if}\n  {#if content && (showContent || preloadHiddenContent)}\n    <StatusContent {...params} shown={showContent} {plainTextContent} on:recalculateHeight />\n  {/if}\n  <!-- Apparently it's possible for spoilered content to sometimes have embeds, but I can't figure out how.\n       Don't bother optimizing this with the preloadHiddenContent. -->\n  {#if showCard && showContent}\n    <StatusCard {...params} />\n  {/if}\n  {#if showMedia }\n    <StatusMediaAttachments {...params} on:recalculateHeight />\n  {/if}\n  {#if showPoll && (showContent || preloadHiddenContent)}\n    <StatusPoll {...params} shown={showContent} on:recalculateHeight />\n  {/if}\n  {#if showQuote && showContent}\n    <svelte:self status={originalQuote} isQuote={true} on:recalculateHeight />\n  {/if}\n  {#if showHashtagsInBar}\n    <StatusTags {hashtagsInBar} {isStatusInNotification} />\n  {/if}\n  {#if hasReactions}\n    <StatusReactions {...params} />\n  {/if}\n  {#if isStatusInOwnThread}\n    <StatusDetails {...params} {...timestampParams} />\n  {/if}\n  {#if !(isStatusInNotification || isQuote)}\n    <StatusToolbar {...params} {replyShown} on:recalculateHeight on:focusArticle=\"focusArticle()\" />\n  {/if}\n  {#if replyShown}\n    <StatusComposeBox {...params} on:recalculateHeight />\n  {/if}\n</article>\n{#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"o\" on:pressed=\"open()\" />\n  <Shortcut scope={shortcutScope} key=\"p\" on:pressed=\"openAuthorProfile()\" />\n  <Shortcut scope={shortcutScope} key=\"m\" on:pressed=\"mentionAuthor()\" />\n{/if}\n\n<style>\n  .status-article {\n    padding: var(--status-pad-v) var(--status-pad-h);\n    display: grid;\n    grid-template-areas:\n        \"header  header       header        header\"\n        \"sidebar author-name  author-handle relative-date\"\n        \"sidebar spoiler      spoiler       spoiler\"\n        \"sidebar spoiler-btn  spoiler-btn   spoiler-btn\"\n        \"sidebar mentions     mentions      mentions\"\n        \"sidebar content      content       content\"\n        \"sidebar card         card          card\"\n        \"sidebar media        media         media\"\n        \"sidebar poll         poll          poll\"\n        \"quote   quote        quote         quote\"\n        \"....... tags         tags          tags\"\n        \"....... reactions    reactions     reactions\"\n        \"....... toolbar      toolbar       toolbar\"\n        \"compose compose      compose       compose\";\n    grid-template-columns: min-content minmax(0, max-content) 1fr min-content;\n    grid-template-rows: repeat(8, max-content);\n  }\n\n  .status-article.tap-on-status {\n    cursor: pointer;\n  }\n\n  .status-article.status-in-timeline {\n    border-bottom: 1px solid var(--main-border);\n  }\n\n  .status-article.status-direct {\n    background-color: var(--status-direct-background);\n  }\n\n  .status-article.status-in-own-thread {\n    grid-template-areas:\n      \"sidebar     author-name\"\n      \"sidebar     author-handle\"\n      \"spoiler     spoiler\"\n      \"spoiler-btn spoiler-btn\"\n      \"mentions    mentions\"\n      \"content     content\"\n      \"card        card\"\n      \"media       media\"\n      \"poll        poll\"\n      \"quote       quote\"\n      \"tags        tags\"\n      \"reactions   reactions\"\n      \"details     details\"\n      \"toolbar     toolbar\"\n      \"compose     compose\";\n    grid-template-columns: min-content 1fr;\n    grid-template-rows: repeat(7, max-content);\n  }\n  .status-article.status-quoted {\n    grid-area: quote;\n    margin: 10px 10px 10px 5px;\n    border: 1px solid var(--main-border);\n    border-radius: 6px;\n  }\n  .status-article {\n    padding-left: calc(10px * var(--status-level) + var(--status-pad-h)) !important;\n  }\n  .status-article::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: repeating-linear-gradient(90deg, currentColor 0, currentColor 5px, transparent 5px, transparent 10px);\n    width: calc(10px * var(--status-level));\n    height: 100%;\n    z-index: -1;\n    color: var(--body-bg);\n  }\n  .status-article.status-subtree-start {\n    border-top: 4px solid var(--main-border);\n  }\n  .status-article.status-subtree-end {\n    border-bottom: 4px solid var(--main-border);\n  }\n</style>\n<script>\n  import StatusSidebar from './StatusSidebar.html'\n  import StatusHeader from './StatusHeader.html'\n  import StatusAuthorName from './StatusAuthorName.html'\n  import StatusAuthorHandle from './StatusAuthorHandle.html'\n  import StatusRelativeDate from './StatusRelativeDate.html'\n  import StatusDetails from './StatusDetails.html'\n  import StatusCard from './StatusCard.html'\n  import StatusToolbar from './StatusToolbar.html'\n  import StatusMediaAttachments from './StatusMediaAttachments.html'\n  import StatusContent from './StatusContent.html'\n  import StatusSpoiler from './StatusSpoiler.html'\n  import StatusComposeBox from './StatusComposeBox.html'\n  import StatusMentions from './StatusMentions.html'\n  import StatusReactions from './StatusReactions.html'\n  import StatusTags from './StatusTags.html'\n  import StatusPoll from './StatusPoll.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { store } from '../../_store/store.js'\n  import { goto } from '../../../../__sapper__/client.js'\n  import { registerClickDelegate } from '../../_utils/delegate.js'\n  import { classname } from '../../_utils/classname.js'\n  import { checkDomAncestors } from '../../_utils/checkDomAncestors.js'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\n  import { getAccountAccessibleName } from '../../_a11y/getAccountAccessibleName.js'\n  import { getAccessibleLabelForStatus } from '../../_a11y/getAccessibleLabelForStatus.js'\n  import { formatTimeagoDate } from '../../_intl/formatTimeagoDate.js'\n  import { measureText } from '../../_utils/measureText.js'\n  import { LONG_POST_LENGTH, LONG_POST_TEXT } from '../../_static/statuses.js'\n  import { absoluteDateFormatter, dayOnlyAbsoluteDateFormatter } from '../../_utils/formatters.js'\n  import { composeNewStatusMentioning } from '../../_actions/mention.js'\n  import { createStatusOrNotificationUuid } from '../../_utils/createStatusOrNotificationUuid.js'\n  import { addEmojiTooltips } from '../../_utils/addEmojiTooltips.js'\n  import { tryToFocusElement } from '../../_utils/tryToFocusElement.js'\n  import { on } from '../../_utils/eventBus.js'\n  import { rehydrated } from '../../_actions/rehydrateStatusOrNotification.js'\n\n  const INPUT_TAGS = new Set(['a', 'button', 'input', 'textarea', 'label'])\n  const isUserInputElement = node => INPUT_TAGS.has(node.localName)\n  const isToolbar = node => node.classList.contains('status-toolbar')\n  const isStatusArticle = node => node.classList.contains('status-article')\n\n  export default {\n    oncreate () {\n      const { elementId, isStatusInOwnThread, showContent, originalStatusId } = this.get()\n      on('statusUpdated', this, status => {\n        if (status.id === originalStatusId) {\n          this.set({\n            overrideOriginalStatus: status\n          })\n        }\n      })\n      const { disableTapOnStatus } = this.store.get()\n      if (!isStatusInOwnThread && !disableTapOnStatus) {\n        // the whole <article> is clickable in this case\n        registerClickDelegate(this, elementId, (e) => this.onClickOrKeydown(e))\n      }\n      if (!showContent) {\n        scheduleIdleTask(() => {\n          // Perf optimization: lazily load the StatusContent when the user is idle so that\n          // it's fast when they click the \"show more\" button\n          this.set({ preloadHiddenContent: true })\n        })\n      }\n      scheduleIdleTask(() => addEmojiTooltips(this.refs.article))\n    },\n    components: {\n      StatusSidebar,\n      StatusHeader,\n      StatusAuthorName,\n      StatusAuthorHandle,\n      StatusRelativeDate,\n      StatusDetails,\n      StatusToolbar,\n      StatusMediaAttachments,\n      StatusContent,\n      StatusCard,\n      StatusPoll,\n      StatusSpoiler,\n      StatusComposeBox,\n      StatusMentions,\n      StatusReactions,\n      StatusTags,\n      Shortcut\n    },\n    data: () => ({\n      notification: undefined,\n      replyVisibility: undefined,\n      preloadHiddenContent: false,\n      enableShortcuts: null,\n      isQuote: false,\n      overrideOriginalStatus: null\n    }),\n    store: () => store,\n    methods: {\n      onClickOrKeydown (e) {\n        const { type, keyCode, target } = e\n\n        const isClick = type === 'click'\n        const isEnter = type === 'keydown' && keyCode === 13\n        if (!isClick && !isEnter) {\n          return false\n        }\n        if (checkDomAncestors(target, isUserInputElement, isStatusArticle)) {\n          // this element or any ancestors up to the status-article element is\n          // a user input element\n          return false\n        }\n        if (checkDomAncestors(target, isToolbar, isStatusArticle)) {\n          // this element or any of its ancestors is the toolbar\n          return false\n        }\n\n        this.open()\n        return true\n      },\n      open () {\n        const { originalStatusId } = this.get()\n        goto(`/statuses/${originalStatusId}`)\n      },\n      openAuthorProfile () {\n        const { accountForShortcut } = this.get()\n        goto(`/accounts/${accountForShortcut.id}`)\n      },\n      async mentionAuthor () {\n        const { accountForShortcut } = this.get()\n        await composeNewStatusMentioning(accountForShortcut)\n      },\n      focusArticle () {\n        const { elementId } = this.get()\n        tryToFocusElement(elementId, /* scroll */ true)\n      },\n      recalculateHeight () {\n        this.fire('recalculateHeight')\n      }\n    },\n    computed: {\n      originalStatus: ({ status, overrideOriginalStatus }) => {\n        const originalStatus = overrideOriginalStatus || (status.reblog ? status.reblog : status)\n        if (!originalStatus[rehydrated]) {\n          console.warn('status not rehydrated')\n        }\n        return originalStatus\n      },\n      originalStatusId: ({ originalStatus }) => originalStatus.id,\n      statusId: ({ status }) => status.id,\n      notificationId: ({ notification }) => notification && notification.id,\n      account: ({ notification, status }) => (\n        (notification && notification.account) || status.account\n      ),\n      accountId: ({ account }) => account.id,\n      originalAccount: ({ originalStatus }) => originalStatus.account,\n      originalAccountId: ({ originalAccount }) => originalAccount.id,\n      accountForShortcut: ({ originalAccount, notification }) => notification ? notification.account : originalAccount,\n      visibility: ({ originalStatus }) => originalStatus.visibility,\n      plainTextContent: ({ originalStatus }) => originalStatus.plainTextContent || '',\n      plainTextContentOverLength: ({ plainTextContent, $hideLongPosts }) => $hideLongPosts && (\n        // measureText() is expensive, so avoid doing it when possible.\n        // Also measureText() typically only makes text shorter, not longer, so we can measure the raw length\n        // as a shortcut. (The only case where it makes text longer is with short URLs which get expanded to a longer\n        // placeholder.) This isn't 100% accurate, but we don't need perfect accuracy here because this is just\n        // to show a \"long post\" content warning.\n        plainTextContent.length > LONG_POST_LENGTH && measureText(plainTextContent) > LONG_POST_LENGTH\n      ),\n      spoilerText: ({ originalStatus, plainTextContentOverLength }) => (\n        originalStatus.spoiler_text || (plainTextContentOverLength && LONG_POST_TEXT)\n      ),\n      inReplyToId: ({ originalStatus }) => originalStatus.in_reply_to_id,\n      uuid: ({ $currentInstance, timelineType, timelineValue, notificationId, statusId }) => (\n        createStatusOrNotificationUuid($currentInstance, timelineType, timelineValue, notificationId, statusId)\n      ),\n      elementId: ({ uuid }) => uuid,\n      shortcutScope: ({ elementId }) => elementId,\n      isStatusInOwnThread: ({ timelineType, timelineValue, originalStatusId }) => (\n        (timelineType === 'status' || timelineType === 'reply') && timelineValue === originalStatusId\n      ),\n      isStatusInNotification: ({ originalStatusId, notification }) => (\n        notification && notification.status &&\n          notification.type !== 'mention' && notification.status.id === originalStatusId\n      ),\n      spoilerShown: ({ $spoilersShown, uuid, $showAllSpoilers }) => (typeof $spoilersShown[uuid] === 'undefined' ? !!$showAllSpoilers : !!$spoilersShown[uuid]),\n      replyShown: ({ $repliesShown, uuid }) => !!$repliesShown[uuid],\n      showCard: ({ originalStatus, isStatusInNotification, showMedia, $hideCards, showQuote }) => (\n        !$hideCards &&\n        !isStatusInNotification &&\n        !showMedia &&\n        !showQuote &&\n        originalStatus.card &&\n        originalStatus.card.title\n      ),\n      showPoll: ({ originalStatus }) => (\n        originalStatus.poll\n      ),\n      showMedia: ({ originalStatus, isStatusInNotification }) => (\n        !isStatusInNotification &&\n        originalStatus.media_attachments &&\n        originalStatus.media_attachments.length\n      ),\n      originalQuote: ({ originalStatus }) => originalStatus.quote,\n      showQuote: ({ originalQuote, isStatusInNotification }) => originalQuote && !isStatusInNotification,\n      mediaAttachments: ({ originalStatus }) => (\n        originalStatus.media_attachments\n      ),\n      sensitiveShown: ({ $sensitivesShown, uuid }) => !!$sensitivesShown[uuid],\n      sensitive: ({ originalStatus, $markMediaAsSensitive, $neverMarkMediaAsSensitive }) => (\n        !$neverMarkMediaAsSensitive && ($markMediaAsSensitive || originalStatus.sensitive)\n      ),\n      originalAccountEmojis: ({ originalAccount }) => (originalAccount.emojis || []),\n      originalStatusEmojis: ({ originalStatus }) => (originalStatus.emojis || []),\n      originalAccountDisplayName: ({ originalAccount }) => (originalAccount.display_name || originalAccount.username),\n      originalAccountAccessibleName: ({ originalAccount, $omitEmojiInDisplayNames }) => {\n        return getAccountAccessibleName(originalAccount, $omitEmojiInDisplayNames)\n      },\n      editedAtDate: ({ originalStatus }) => originalStatus.edited_at,\n      createdAtDate: ({ originalStatus }) => originalStatus.created_at,\n      editedAtDateTS: ({ editedAtDate }) => editedAtDate && new Date(editedAtDate).getTime(),\n      createdAtDateTS: ({ createdAtDate }) => new Date(createdAtDate).getTime(),\n      absoluteFormattedCreatedDate: ({ createdAtDateTS }) => absoluteDateFormatter().format(createdAtDateTS),\n      absoluteFormattedEditedDate: ({ editedAtDateTS }) => editedAtDateTS && absoluteDateFormatter().format(editedAtDateTS),\n      shortInlineFormattedDate: ({ createdAtDateTS, editedAtDateTS, $now, $disableRelativeTimestamps }) => (\n        $disableRelativeTimestamps\n          ? dayOnlyAbsoluteDateFormatter().format(editedAtDateTS || createdAtDateTS)\n          : formatTimeagoDate(editedAtDateTS || createdAtDateTS, $now)\n      ),\n      reblog: ({ status }) => status.reblog,\n      ariaLabel: ({\n        originalAccount, account, plainTextContent, shortInlineFormattedDate, spoilerText,\n        showContent, reblog, notification, visibility, $omitEmojiInDisplayNames, $disableLongAriaLabels,\n        showMedia, sensitive, sensitiveShown, mediaAttachments, showPoll\n      }) => (\n        getAccessibleLabelForStatus(originalAccount, account, plainTextContent,\n          shortInlineFormattedDate, spoilerText, showContent,\n          reblog, notification, visibility, $omitEmojiInDisplayNames, $disableLongAriaLabels,\n          showMedia, sensitive, sensitiveShown, mediaAttachments, showPoll\n        )\n      ),\n      showHeader: ({ notification, status, timelineType }) => (\n        (notification && ['reblog', 'favourite', 'poll', 'status', 'update', 'pleroma:emoji_reaction', 'reaction'].includes(notification.type)) ||\n        status.reblog ||\n        timelineType === 'pinned'\n      ),\n      hasReactions: ({ originalStatus }) => Boolean(originalStatus.reactions || originalStatus.emoji_reactions),\n      className: ({ visibility, timelineType, isStatusInOwnThread, $underlineLinks, $disableTapOnStatus, isQuote, treeMetadata }) => (classname(\n        'status-article',\n        'shortcut-list-item',\n        'focus-fix',\n        timelineType !== 'direct' && visibility === 'direct' && 'status-direct',\n        timelineType !== 'search' && 'status-in-timeline',\n        isStatusInOwnThread && 'status-in-own-thread',\n        $underlineLinks && 'underline-links',\n        !$disableTapOnStatus && !isStatusInOwnThread && 'tap-on-status',\n        isQuote && 'status-quoted',\n        (treeMetadata && treeMetadata.subtree && treeMetadata.subtree.start) && 'status-subtree-start',\n        (treeMetadata && treeMetadata.subtree && treeMetadata.subtree.end) && 'status-subtree-end'\n      )),\n      content: ({ originalStatus }) => originalStatus.content || '',\n      localOnly: ({ originalStatus }) => originalStatus.local_only || false,\n      showContent: ({ spoilerText, spoilerShown }) => !spoilerText || spoilerShown,\n      // These timestamp params may change every 10 seconds due to now() polling, so keep them\n      // separate from the generic `params` list to avoid costly recomputes.\n      timestampParams: ({ createdAtDate, createdAtDateTS, editedAtDate, editedAtDateTS, shortInlineFormattedDate, absoluteFormattedCreatedDate, absoluteFormattedEditedDate }) => ({\n        createdAtDate,\n        createdAtDateTS,\n        editedAtDate,\n        editedAtDateTS,\n        shortInlineFormattedDate,\n        absoluteFormattedCreatedDate,\n        absoluteFormattedEditedDate\n      }),\n      treeMetadata: ({ statusId, $currentInstance, $currentTimeline }) => {\n        const summaries = store.getForTimeline($currentInstance, $currentTimeline, 'timelineItemSummaries')\n        if (!summaries) return null\n        const summary = summaries.find(e => e.id === statusId)\n        if (!summary || typeof summary.level !== 'number') return null\n        return {\n          level: summary.level,\n          subtree: summary.subtree\n        }\n      },\n      hashtagsInBar: ({ originalStatus }) => originalStatus.hashtagsInBar || [],\n      showHashtagsInBar: ({ hashtagsInBar, showContent }) => showContent && (hashtagsInBar.length > 0),\n      // This params list deliberately does *not* include `spoilersShown` or `replyShown`, because these\n      // change frequently and would therefore cause costly recomputes if included here.\n      // The main goal here is to avoid typing by passing as many params as possible to child components.\n      params: ({\n        notification, notificationId, status, statusId, timelineType,\n        account, accountId, uuid, isStatusInNotification, isStatusInOwnThread,\n        originalAccount, originalAccountId, visibility,\n        replyVisibility, spoilerText, originalStatus, originalStatusId, inReplyToId,\n        enableShortcuts, shortcutScope, originalStatusEmojis, localOnly\n      }) => ({\n        notification,\n        notificationId,\n        status,\n        statusId,\n        timelineType,\n        account,\n        accountId,\n        uuid,\n        isStatusInNotification,\n        isStatusInOwnThread,\n        originalAccount,\n        originalAccountId,\n        visibility,\n        replyVisibility,\n        spoilerText,\n        originalStatus,\n        originalStatusId,\n        inReplyToId,\n        enableShortcuts,\n        shortcutScope,\n        originalStatusEmojis,\n        localOnly\n      })\n    }\n  }\n</script>\n","<div class=\"status-header {isStatusInNotification ? 'status-in-notification' : ''} {notificationType === 'follow' ? 'header-is-follow' : ''}\">\n  <div class=\"status-header-avatar {timelineType === 'pinned' || notificationType === 'poll' ? 'hidden' : ''}\">\n    <a id={avatarElementId}\n       href=\"/accounts/{accountId}\"\n       rel=\"prefetch\"\n       aria-hidden=\"true\"\n       tabindex=\"-1\"\n    >\n      <Avatar {account} size=\"extra-small\"/>\n    </a>\n  </div>\n  {#if emojiReaction}\n    <div class=\"status-header-emoji\">{@html emojiReaction}</div>\n  {:else}\n    <SvgIcon className=\"status-header-svg\" href={icon} />\n  {/if}\n  <div class=\"status-header-content\">\n    {#if timelineType === 'pinned'}\n      <span class=\"status-header-author\">\n        Pinned post\n      </span>\n    {:elseif notificationType !== 'poll'}\n      <a id={authorElementId}\n         href=\"/accounts/{accountId}\"\n         rel=\"prefetch\"\n         class=\"status-header-author\"\n         title=\"{'@' + account.acct}\"\n      >\n        <AccountDisplayName {account} />\n      </a>\n    {/if}\n\n    <span class=\"status-header-action\">{actionText}</span>\n  </div>\n</div>\n<style>\n  .status-header {\n    grid-area: header;\n    margin: 0 10px 5px 5px;\n    display: flex;\n    align-items: center;\n  }\n  .status-header.header-is-follow {\n    margin-bottom: 0; /* standalone, so doesn't need a bottom margin */\n  }\n\n  .status-header-avatar {\n    margin-left: 19px; /* offset for avatar, 48px - 24px - 5px */\n  }\n\n  :global(.status-header-svg), .status-header-emoji {\n    min-width: 18px;\n    margin-left: 20px;\n    width: 18px;\n    height: 18px;\n    fill: var(--deemphasized-text-color);\n    font-size: 13px;\n  }\n\n  .status-header-emoji .inline-emoji {\n    font-size: 18px;\n    line-height: 1;\n  }\n\n  :global(.status-header.status-in-notification .status-header-svg) {\n    fill: var(--body-text-color);\n  }\n\n  .status-header-content {\n    display: flex;\n    flex: 1;\n    min-width: 0;\n    width: 0;\n  }\n\n  .status-header-author {\n    margin-left: 5px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: 0;\n  }\n\n  .status-header-action {\n    margin-left: 0.5ch;\n    white-space: nowrap;\n    flex: 1;\n  }\n\n  .status-header-action,\n  .status-header-author,\n  .status-header-author:visited,\n  .status-header-author:hover {\n    color: var(--deemphasized-text-color);\n  }\n\n  .status-in-notification .status-header-action,\n  .status-in-notification .status-header-author,\n  .status-in-notification .status-header-author:visited,\n  .status-in-notification .status-header-author:hover {\n    color: var(--body-text-color);\n  }\n\n  @media (max-width: 767px) {\n    :global(.status-header-svg) {\n      margin-left: 10px;\n    }\n  }\n\n  @media (max-width: 240px) {\n    .status-header {\n      margin-left: 0;\n    }\n    .status-header-avatar {\n      margin-left: 0;\n    }\n  }\n</style>\n<script>\n  import Avatar from '../Avatar.html'\n  import AccountDisplayName from '../profile/AccountDisplayName.html'\n  import SvgIcon from '../SvgIcon.html'\n  import { store } from '../../_store/store.js'\n  import { emojifyText } from '../../_utils/emojifyText.js'\n\n  export default {\n    components: {\n      Avatar,\n      AccountDisplayName,\n      SvgIcon\n    },\n    store: () => store,\n    computed: {\n      authorElementId: ({ uuid }) => `status-header-author-${uuid}`,\n      avatarElementId: ({ uuid }) => `status-header-avatar-${uuid}`,\n      notificationType: ({ notification }) => notification && notification.type,\n      icon: ({ notificationType, status, timelineType }) => {\n        if (timelineType === 'pinned') {\n          return '#fa-thumb-tack'\n        } else if ((notificationType === 'reblog') || (status && status.reblog)) {\n          return '#fa-retweet'\n        } else if (notificationType === 'follow') {\n          return '#fa-user-plus'\n        } else if (notificationType === 'poll') {\n          return '#fa-bar-chart'\n        } else if (notificationType === 'status') {\n          return '#fa-comment'\n        } else if (notificationType === 'admin.sign_up') {\n          return '#fa-user-plus'\n        } else if (notificationType === 'update') {\n          return '#fa-pencil'\n        } else if (notificationType === 'follow_request') {\n          return '#fa-hourglass'\n        } else if (notificationType === 'admin.report') {\n          return '#fa-flag'\n        }\n        return '#fa-star'\n      },\n      actionText: ({ notificationType, status, $currentVerifyCredentials }) => {\n        if (notificationType === 'reblog') {\n          return \"boosted your post\"\n        } else if (notificationType === 'favourite') {\n          return \"favorited your post\"\n        } else if (notificationType === 'pleroma:emoji_reaction' || notificationType === 'reaction') {\n          return 'reacted with an emoji'\n        } else if (notificationType === 'admin.sign_up') {\n          return \"signed up\"\n        } else if (notificationType === 'follow') {\n          return \"followed you\"\n        } else if (notificationType === 'status') {\n          return \"posted\"\n        } else if (notificationType === 'poll') {\n          if ($currentVerifyCredentials && status && $currentVerifyCredentials.id === status.account.id) {\n            return \"A poll you created has ended\"\n          } else {\n            return \"A poll you voted on has ended\"\n          }\n        } else if (status && status.reblog) {\n          return \"boosted\"\n        } else if (notificationType === 'update') {\n          return \"edited their post\"\n        } else if (notificationType === 'follow_request') {\n          return \"requested to follow you\"\n        } else if (notificationType === 'admin.report') {\n          return \"filed a report\"\n        } else {\n          return ''\n        }\n      },\n      emojiReaction: ({ notification, $autoplayGifs }) => {\n        if (notification && (notification.type === 'pleroma:emoji_reaction' || notification.type === 'reaction') && notification.emoji) {\n          const shortcode = notification.emoji_url && notification.emoji.replace(/:/g, '')\n          return emojifyText(notification.emoji_url ? ':' + shortcode + ':' : notification.emoji, [{\n            url: notification.emoji_url,\n            static_url: notification.emoji_url,\n            shortcode\n          }], $autoplayGifs, true)\n        }\n      }\n    }\n  }\n</script>\n","import { removeEmoji } from '../_utils/removeEmoji.js'\n\nexport function getAccountAccessibleName (account, omitEmojiInDisplayNames) {\n  const emojis = account.emojis\n  let displayName = account.display_name || account.username\n  if (omitEmojiInDisplayNames) {\n    displayName = removeEmoji(displayName, emojis) || displayName\n  }\n  return displayName\n}\n","import { getAccount } from '../_api/user.js'\nimport { getRelationship } from '../_api/relationships.js'\nimport { database } from '../_database/database.js'\nimport { store } from '../_store/store.js'\n\nasync function _updateAccount (accountId, instanceName, accessToken) {\n  const localPromise = database.getAccount(instanceName, accountId)\n  const remotePromise = getAccount(instanceName, accessToken, accountId).then(account => {\n    /* no await */ database.setAccount(instanceName, account)\n    return account\n  })\n\n  try {\n    store.set({ currentAccountProfile: (await localPromise) })\n  } catch (e) {\n    console.error(e)\n  }\n  try {\n    store.set({ currentAccountProfile: (await remotePromise) })\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nasync function _updateRelationship (accountId, instanceName, accessToken) {\n  const localPromise = database.getRelationship(instanceName, accountId)\n  const remotePromise = getRelationship(instanceName, accessToken, accountId).then(relationship => {\n    /* no await */ database.setRelationship(instanceName, relationship)\n    return relationship\n  })\n  try {\n    store.set({ currentAccountRelationship: (await localPromise) })\n  } catch (e) {\n    console.error(e)\n  }\n  try {\n    store.set({ currentAccountRelationship: (await remotePromise) })\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport async function updateLocalRelationship (instanceName, accountId, relationship) {\n  await database.setRelationship(instanceName, relationship)\n  try {\n    store.set({ currentAccountRelationship: relationship })\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport async function clearProfileAndRelationship () {\n  store.set({\n    currentAccountProfile: null,\n    currentAccountRelationship: null\n  })\n}\n\nexport async function updateProfileAndRelationship (accountId) {\n  const { currentInstance, accessToken } = store.get()\n\n  await clearProfileAndRelationship()\n  await Promise.all([\n    _updateAccount(accountId, currentInstance, accessToken),\n    _updateRelationship(accountId, currentInstance, accessToken)\n  ])\n}\n\nexport async function updateRelationship (accountId) {\n  const { currentInstance, accessToken } = store.get()\n\n  await clearProfileAndRelationship()\n  await _updateRelationship(accountId, currentInstance, accessToken)\n}\n","import { basename, auth } from './utils.js'\nimport { get, paramsString, DEFAULT_TIMEOUT } from '../_utils/ajax.js'\n\nexport async function getRelationship (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/relationships?${paramsString({ id: accountId })}`\n  const res = await get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n  return res[0]\n}\n","import { store } from '../_store/store.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { bookmarkStatus, unbookmarkStatus } from '../_api/bookmark.js'\nimport { database } from '../_database/database.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setStatusBookmarkedOrUnbookmarked (statusId, bookmarked) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    if (bookmarked) {\n      await bookmarkStatus(currentInstance, accessToken, statusId)\n    } else {\n      await unbookmarkStatus(currentInstance, accessToken, statusId)\n    }\n    if (bookmarked) {\n      /* no await */ toast.say(\"Bookmarked post\")\n    } else {\n      /* no await */ toast.say(\"Unbookmarked post\")\n    }\n    store.setStatusBookmarked(currentInstance, statusId, bookmarked)\n    await database.setStatusBookmarked(currentInstance, statusId, bookmarked)\n  } catch (e) {\n    console.error(e)\n    /* no await */toast.say(\n      bookmarked\n        ? formatIntl([\"Unable to bookmark: \",[\"error\"]], { error: (e.message || '') })\n        : formatIntl([\"Unable to unbookmark: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { post, WRITE_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport async function bookmarkStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/bookmark`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function unbookmarkStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/unbookmark`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","import { importShowComposeDialog } from '../_components/dialog/asyncDialogs/importShowComposeDialog.js'\nimport { store } from '../_store/store.js'\n\nexport async function composeNewStatusMentioning (account) {\n  store.setComposeData('dialog', { text: `@${account.acct} ` })\n  const showComposeDialog = await importShowComposeDialog()\n  showComposeDialog()\n}\n","import { importShowComposeDialog } from '../_components/dialog/asyncDialogs/importShowComposeDialog.js'\r\nimport { store } from '../_store/store.js'\r\n\r\nexport async function quote (status) {\r\n  const dialogPromise = importShowComposeDialog()\r\n  store.setComposeData('dialog', {\r\n    text: '',\r\n    contentType: null,\r\n    contentWarningShown: !!status.spoiler_text,\r\n    contentWarning: status.spoiler_text || '',\r\n    postPrivacy: status.visibility,\r\n    media: null,\r\n    inReplyToId: null,\r\n    inReplyToHandle: null,\r\n    poll: null,\r\n    sensitive: !!status.sensitive,\r\n    quoteId: status.id,\r\n    quoteHandle: '@' + status.account.acct\r\n  })\r\n  const showComposeDialog = await dialogPromise\r\n  showComposeDialog()\r\n}\r\n","import { reactStatus, unreactStatus } from '../_api/react.js'\nimport { store } from '../_store/store.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\nimport { importShowEmojiDialog } from '../_components/dialog/asyncDialogs/importShowEmojiDialog.js'\nimport { updateCustomEmojiForInstance } from './emoji.js'\nimport { updateStatus } from './timeline.js'\nimport { scheduleIdleTask } from '../_utils/scheduleIdleTask.js'\n\nexport async function setReacted (statusId, reacting, reaction, apiVersion) {\n  if (reaction.extern && !apiVersion.externReactions) {\n    /* no await */ toast.say('Your instance doesn\\'t allow reacting with remote custom emojis')\n    return false\n  }\n  const { online } = store.get()\n  if (!online) {\n    /* no await */ toast.say(reacting ? \"You cannot favorite while offline\" : \"You cannot unfavorite while offline\")\n    return false\n  }\n  const { currentInstance, accessToken } = store.get()\n  const networkPromise = reacting\n    ? reactStatus(currentInstance, accessToken, statusId, reaction.name, apiVersion)\n    : unreactStatus(currentInstance, accessToken, statusId, reaction.name, apiVersion)\n  try {\n    await networkPromise\n    return true\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(reacting\n      ? formatIntl([\"Unable to favorite: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unfavorite: \",[\"error\"]], { error: (e.message || '') })\n    )\n    return false\n  }\n}\n\nexport async function pickEmojiReaction (status) {\n  const { currentInstance, accessToken, currentPleromaFeatures } = store.get()\n  const reactionApiVersion = {\n    customEmojiReactions: currentPleromaFeatures ? currentPleromaFeatures.includes('custom_emoji_reactions') : true,\n    externReactions: true,\n    isPleroma: !!currentPleromaFeatures\n  }\n  const [showEmojiDialog] = await Promise.all([\n    importShowEmojiDialog(),\n    updateCustomEmojiForInstance(currentInstance)\n  ])\n  showEmojiDialog(async pickedEmoji => {\n    const didReact = await setReacted(status.id, true, { name: pickedEmoji.name || pickedEmoji.unicode }, reactionApiVersion)\n    if (didReact) {\n      scheduleIdleTask(() => {\n        updateStatus(currentInstance, accessToken, status.id)\n      })\n    }\n  })\n}\n","import { post, put, del, WRITE_TIMEOUT } from '../_utils/ajax.js'\nimport { basename, auth } from './utils.js'\n\nexport async function reactStatus (instanceName, accessToken, statusId, reactionName, apiVersion) {\n  if (apiVersion.isPleroma) {\n    const url = `${basename(instanceName)}/api/v1/pleroma/statuses/${statusId}/reactions/${encodeURIComponent(reactionName)}`\n    return put(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n  } else {\n    const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/react/${encodeURIComponent(reactionName)}`\n    return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n  }\n}\n\nexport async function unreactStatus (instanceName, accessToken, statusId, reactionName, apiVersion) {\n  if (apiVersion.isPleroma) {\n    const url = `${basename(instanceName)}/api/v1/pleroma/statuses/${statusId}/reactions/${encodeURIComponent(reactionName)}`\n    return del(url, auth(accessToken), { timeout: WRITE_TIMEOUT })\n  } else {\n    const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/unreact/${encodeURIComponent(reactionName)}`\n    return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n  }\n}\n","// This is designed to exactly mimic Mastodon's ordering for threads. As described by Gargron:\n// \"statuses are ordered in the postgresql query and then any of OP's self-replies bubble to the top\"\n// Source: https://github.com/tootsuite/mastodon/blob/ef15246/app/models/concerns/status_threading_concern.rb\nimport { concat } from './arrays.js'\nimport { compareTimelineItemSummaries } from './statusIdSorting.js'\nimport { mapBy, multimapBy } from './maps.js'\n\nexport function sortItemSummariesForThread (summaries, statusId) {\n  const ancestors = []\n  const descendants = []\n  const summariesById = mapBy(summaries, _ => _.id)\n  const summariesByReplyId = multimapBy(summaries, _ => _.replyId)\n\n  const status = summariesById.get(statusId)\n  if (!status) {\n    // bail out, for some reason we can't find the status (should never happen)\n    return summaries\n  }\n\n  // find ancestors\n  let currentStatus = status\n  do {\n    currentStatus = summariesById.get(currentStatus.replyId)\n    if (currentStatus) {\n      ancestors.unshift(currentStatus)\n    }\n  } while (currentStatus)\n\n  // find descendants\n  // This mirrors the depth-first ordering used in the Postgres query in the Mastodon implementation\n  const stack = [status]\n  while (stack.length) {\n    const current = stack.shift()\n    const newChildren = (summariesByReplyId.get(current.id) || []).sort(compareTimelineItemSummaries)\n    Array.prototype.unshift.apply(stack, newChildren)\n    if (current.id !== status.id) { // the status is not a descendant of itself\n      descendants.push(current)\n    }\n  }\n\n  // Normally descendants are sorted in depth-first order, via normal ID sorting\n  // but replies that come from the account they're actually replying to get promoted\n  // This only counts if it's an unbroken self-reply, e.g. in the case of\n  //     A -> A -> A -> B -> A -> A\n  // B has broken the chain, so only the first three As are considered unbroken self-replies\n  const isUnbrokenSelfReply = (descendant) => {\n    let current = descendant\n    while (true) {\n      if (current.accountId !== status.accountId) {\n        return false\n      }\n      const parent = summariesById.get(current.replyId)\n      if (!parent) {\n        break\n      }\n      current = parent\n    }\n    return current.id === statusId\n  }\n\n  const promotedDescendants = []\n  const otherDescendants = []\n  for (const descendant of descendants) {\n    (isUnbrokenSelfReply(descendant) ? promotedDescendants : otherDescendants).push(descendant)\n  }\n\n  return concat(\n    ancestors,\n    [status],\n    promotedDescendants,\n    otherDescendants\n  )\n}\n","// utilities for working with Maps\n\nexport function mapBy (items, func) {\n  const map = new Map()\n  for (const item of items) {\n    map.set(func(item), item)\n  }\n  return map\n}\n\nexport function multimapBy (items, func) {\n  const map = new Map()\n  for (const item of items) {\n    const key = func(item)\n    if (map.has(key)) {\n      map.get(key).push(item)\n    } else {\n      map.set(key, [item])\n    }\n  }\n  return map\n}\n","import { store } from '../_store/store.js'\nimport { getTimeline } from '../_api/timelines.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { mark, stop } from '../_utils/marks.js'\nimport { concat, mergeArrays } from '../_utils/arrays.js'\nimport { compareTimelineItemSummaries } from '../_utils/statusIdSorting.js'\nimport { uniqBy, isEqual } from '../_thirdparty/lodash/objects.js'\nimport { database } from '../_database/database.js'\nimport { getStatus, getStatusContext } from '../_api/statuses.js'\nimport { emit } from '../_utils/eventBus.js'\nimport { TIMELINE_BATCH_SIZE } from '../_static/timelines.js'\nimport { timelineItemToSummary } from '../_utils/timelineItemToSummary.js'\nimport { addStatusesOrNotifications } from './addStatusOrNotification.js'\nimport { scheduleIdleTask } from '../_utils/scheduleIdleTask.js'\nimport { sortItemSummariesForThread } from '../_utils/sortItemSummariesForThread.js'\nimport { prepareToRehydrate, rehydrateStatusOrNotification } from './rehydrateStatusOrNotification.js'\nimport li from 'li'\n\nconst byId = _ => _.id\n\nasync function storeFreshTimelineItemsInDatabase (instanceName, timelineName, items) {\n  prepareToRehydrate()\n  await database.insertTimelineItems(instanceName, timelineName, items)\n  if (timelineName.startsWith('status/')) {\n    // For status threads, we want to be sure to update the favorite/reblog counts even if\n    // this is a stale \"view\" of the status. See 119-status-counts-update.js for\n    // an example of why we need this.\n    items.forEach(async status => {\n      await rehydrateStatusOrNotification({ status })\n      emit('statusUpdated', status)\n    })\n  }\n}\n\nexport async function updateStatus (instanceName, accessToken, statusId) {\n  const status = await getStatus(instanceName, accessToken, statusId)\n  await database.insertStatus(instanceName, status)\n  await rehydrateStatusOrNotification({ status })\n  emit('statusUpdated', status)\n  return status\n}\n\nasync function updateStatusAndThread (instanceName, accessToken, timelineName, statusId) {\n  const [status, context] = await Promise.all([\n    updateStatus(instanceName, accessToken, statusId),\n    getStatusContext(instanceName, accessToken, statusId)\n  ])\n  await database.insertTimelineItems(\n    instanceName,\n    timelineName,\n    concat(context.ancestors, status, context.descendants)\n  )\n  addStatusesOrNotifications(instanceName, timelineName, concat(context.ancestors, context.descendants))\n}\n\nasync function fetchFreshThreadFromNetwork (instanceName, accessToken, statusId) {\n  const [status, context] = await Promise.all([\n    getStatus(instanceName, accessToken, statusId),\n    getStatusContext(instanceName, accessToken, statusId)\n  ])\n  return concat(context.ancestors, status, context.descendants)\n}\n\nasync function fetchThreadFromNetwork (instanceName, accessToken, timelineName) {\n  const statusId = timelineName.split('/').slice(-1)[0]\n\n  // For threads, we do several optimizations to make it a bit faster to load.\n  // The vast majority of statuses have no replies and aren't in reply to anything,\n  // so we want that to be as fast as possible.\n  const status = await database.getStatus(instanceName, statusId)\n  if (!status) {\n    // If for whatever reason the status is not cached, fetch everything from the network\n    // and wait for the result. This happens in very unlikely cases (e.g. loading /statuses/<id>\n    // where <id> is not cached locally) but is worth covering.\n    return fetchFreshThreadFromNetwork(instanceName, accessToken, statusId)\n  }\n\n  if (!status.in_reply_to_id) {\n    // status is not a reply to another status (fast path)\n    // Update the status and thread asynchronously, but return just the status for now\n    // Any replies to the status will load asynchronously\n    /* no await */ updateStatusAndThread(instanceName, accessToken, timelineName, statusId)\n    return [status]\n  }\n  // status is a reply to some other status, meaning we don't want some\n  // jerky behavior where it suddenly scrolls into place. Update the status asynchronously\n  // but grab the thread now\n  scheduleIdleTask(() => updateStatus(instanceName, accessToken, statusId))\n  const context = await getStatusContext(instanceName, accessToken, statusId)\n  return concat(context.ancestors, status, context.descendants)\n}\n\nasync function fetchTimelineItemsFromNetwork (instanceName, accessToken, timelineName, lastTimelineItemId) {\n  if (timelineName.startsWith('status/')) { // special case - this is a list of descendents and ancestors\n    return fetchThreadFromNetwork(instanceName, accessToken, timelineName)\n  } else { // normal timeline\n    const { items } = await getTimeline(instanceName, accessToken, timelineName, lastTimelineItemId, null, TIMELINE_BATCH_SIZE)\n    return items\n  }\n}\nasync function addPagedTimelineItems (instanceName, timelineName, items) {\n  console.log('addPagedTimelineItems, length:', items.length)\n  mark('addPagedTimelineItemSummaries')\n  const newSummaries = items.map(item => timelineItemToSummary(item, instanceName))\n  await addPagedTimelineItemSummaries(instanceName, timelineName, newSummaries)\n  stop('addPagedTimelineItemSummaries')\n}\n\nexport async function addPagedTimelineItemSummaries (instanceName, timelineName, newSummaries) {\n  const oldSummaries = store.getForTimeline(instanceName, timelineName, 'timelineItemSummaries')\n\n  const mergedSummaries = uniqBy(concat(oldSummaries || [], newSummaries), byId)\n\n  if (!isEqual(oldSummaries, mergedSummaries)) {\n    store.setForTimeline(instanceName, timelineName, { timelineItemSummaries: mergedSummaries })\n  }\n}\n\nasync function fetchPagedItems (instanceName, accessToken, timelineName) {\n  const { timelineNextPageId } = store.get()\n  console.log('saved timelineNextPageId', timelineNextPageId)\n  const { items, headers } = await getTimeline(instanceName, accessToken, timelineName, timelineNextPageId, null, TIMELINE_BATCH_SIZE)\n  const linkHeader = headers.get('Link')\n  const parsedLinkHeader = li.parse(linkHeader)\n  const nextUrl = parsedLinkHeader && parsedLinkHeader.next\n  const nextId = nextUrl && (new URL(nextUrl)).searchParams.get('max_id')\n  console.log('new timelineNextPageId', nextId)\n  store.setForTimeline(instanceName, timelineName, { timelineNextPageId: nextId })\n  await storeFreshTimelineItemsInDatabase(instanceName, timelineName, items)\n  await addPagedTimelineItems(instanceName, timelineName, items)\n}\n\nasync function fetchTimelineItems (instanceName, accessToken, timelineName, online) {\n  mark('fetchTimelineItems')\n  const { lastTimelineItemId } = store.get()\n  let items\n  let stale = false\n  if (!online) {\n    items = await database.getTimeline(instanceName, timelineName, lastTimelineItemId, TIMELINE_BATCH_SIZE)\n    stale = true\n  } else {\n    try {\n      console.log('fetchTimelineItemsFromNetwork')\n      items = await fetchTimelineItemsFromNetwork(instanceName, accessToken, timelineName, lastTimelineItemId)\n      await storeFreshTimelineItemsInDatabase(instanceName, timelineName, items)\n    } catch (e) {\n      console.error(e)\n      /* no await */ toast.say(\"Internet request failed. Showing offline content.\")\n      items = await database.getTimeline(instanceName, timelineName, lastTimelineItemId, TIMELINE_BATCH_SIZE)\n      stale = true\n    }\n  }\n  stop('fetchTimelineItems')\n  return { items, stale }\n}\n\nasync function addTimelineItems (instanceName, timelineName, items, stale) {\n  console.log('addTimelineItems, length:', items.length)\n  mark('addTimelineItemSummaries')\n  const newSummaries = items.map(item => timelineItemToSummary(item, instanceName))\n  addTimelineItemSummaries(instanceName, timelineName, newSummaries, stale)\n  stop('addTimelineItemSummaries')\n}\n\nexport async function addTimelineItemSummaries (instanceName, timelineName, newSummaries, newStale) {\n  const oldSummaries = store.getForTimeline(instanceName, timelineName, 'timelineItemSummaries')\n  const oldStale = store.getForTimeline(instanceName, timelineName, 'timelineItemSummariesAreStale')\n\n  const mergedSummaries = uniqBy(mergeArrays(oldSummaries || [], newSummaries, compareTimelineItemSummaries), byId)\n\n  if (!isEqual(oldSummaries, mergedSummaries)) {\n    store.setForTimeline(instanceName, timelineName, { timelineItemSummaries: mergedSummaries })\n  }\n  if (oldStale !== newStale) {\n    store.setForTimeline(instanceName, timelineName, { timelineItemSummariesAreStale: newStale })\n  }\n}\n\nasync function fetchTimelineItemsAndPossiblyFallBack () {\n  console.log('fetchTimelineItemsAndPossiblyFallBack')\n  mark('fetchTimelineItemsAndPossiblyFallBack')\n  const {\n    currentTimeline,\n    currentInstance,\n    accessToken,\n    online\n  } = store.get()\n\n  if (currentTimeline === 'favorites' || currentTimeline === 'bookmarks') {\n    // Always fetch favorites from the network, we currently don't have a good way of storing\n    // these in IndexedDB because of \"internal ID\" system Mastodon uses to paginate these\n    await fetchPagedItems(currentInstance, accessToken, currentTimeline)\n  } else {\n    const { items, stale } = await fetchTimelineItems(currentInstance, accessToken, currentTimeline, online)\n    await addTimelineItems(currentInstance, currentTimeline, items, stale)\n  }\n  stop('fetchTimelineItemsAndPossiblyFallBack')\n}\n\nexport async function setupTimeline () {\n  console.log('setupTimeline')\n  mark('setupTimeline')\n  // If we don't have any item summaries, or if the current item summaries are stale\n  // (i.e. via offline mode), then we need to re-fetch\n  // Also do this if it's a thread, because threads change pretty frequently and\n  // we don't have a good way to update them.\n  const {\n    timelineItemSummaries,\n    timelineItemSummariesAreStale,\n    currentTimeline\n  } = store.get()\n  console.log({ timelineItemSummaries, timelineItemSummariesAreStale, currentTimeline })\n  if (!timelineItemSummaries ||\n    timelineItemSummariesAreStale ||\n    currentTimeline.startsWith('status/')) {\n    await fetchTimelineItemsAndPossiblyFallBack()\n  }\n  stop('setupTimeline')\n}\n\nexport async function fetchMoreItemsAtBottomOfTimeline (instanceName, timelineName) {\n  console.log('setting runningUpdate: true')\n  store.setForTimeline(instanceName, timelineName, { runningUpdate: true })\n  await fetchTimelineItemsAndPossiblyFallBack()\n  console.log('setting runningUpdate: false')\n  store.setForTimeline(instanceName, timelineName, { runningUpdate: false })\n}\n\nexport async function showMoreItemsForTimeline (instanceName, timelineName) {\n  mark('showMoreItemsForTimeline')\n  let itemSummariesToAdd = store.getForTimeline(instanceName, timelineName, 'timelineItemSummariesToAdd') || []\n  itemSummariesToAdd = itemSummariesToAdd.sort(compareTimelineItemSummaries).reverse()\n  addTimelineItemSummaries(instanceName, timelineName, itemSummariesToAdd, false)\n  store.setForTimeline(instanceName, timelineName, {\n    timelineItemSummariesToAdd: [],\n    shouldShowHeader: false,\n    showHeader: false\n  })\n  stop('showMoreItemsForTimeline')\n}\n\nexport function showMoreItemsForCurrentTimeline () {\n  const { currentInstance, currentTimeline } = store.get()\n  return showMoreItemsForTimeline(\n    currentInstance,\n    currentTimeline\n  )\n}\n\nexport async function showMoreItemsForThread (instanceName, timelineName) {\n  mark('showMoreItemsForThread')\n  const itemSummariesToAdd = store.getForTimeline(instanceName, timelineName, 'timelineItemSummariesToAdd')\n  const timelineItemSummaries = store.getForTimeline(instanceName, timelineName, 'timelineItemSummaries')\n  const timelineItemIds = new Set(timelineItemSummaries.map(_ => _.id))\n  // TODO: update database and do the thread merge correctly\n  for (const itemSummaryToAdd of itemSummariesToAdd) {\n    if (!timelineItemIds.has(itemSummaryToAdd.id)) {\n      timelineItemSummaries.push(itemSummaryToAdd)\n    }\n  }\n  const statusId = timelineName.split('/').slice(-1)[0]\n  const sortedTimelineItemSummaries = await sortItemSummariesForThread(timelineItemSummaries, statusId)\n  store.setForTimeline(instanceName, timelineName, {\n    timelineItemSummariesToAdd: [],\n    timelineItemSummaries: sortedTimelineItemSummaries\n  })\n  stop('showMoreItemsForThread')\n}\n","import { getWithHeaders, paramsString, DEFAULT_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nfunction getTimelineUrlPath (timeline) {\n  switch (timeline) {\n    case 'local':\n    case 'federated':\n      return 'timelines/public'\n    case 'bubble':\n      return 'timelines/bubble'\n    case 'home':\n      return 'timelines/home'\n    case 'notifications':\n    case 'notifications/mentions':\n      return 'notifications'\n    case 'favorites':\n      return 'favourites'\n    case 'direct':\n      return 'conversations'\n    case 'bookmarks':\n      return 'bookmarks'\n  }\n  if (timeline.startsWith('tag/')) {\n    return 'timelines/tag'\n  } else if (timeline.startsWith('account/')) {\n    return 'accounts'\n  } else if (timeline.startsWith('list/')) {\n    return 'timelines/list'\n  }\n  throw new Error(`Invalid timeline type: ${timeline}`)\n}\n\nexport async function getTimeline (instanceName, accessToken, timeline, maxId, since, limit) {\n  const timelineUrlName = getTimelineUrlPath(timeline)\n  let url = `${basename(instanceName)}/api/v1/${timelineUrlName}`\n\n  if (timeline.startsWith('tag/')) {\n    url += '/' + timeline.split('/')[1]\n  } else if (timeline.startsWith('account/')) {\n    url += '/' + timeline.split('/')[1] + '/statuses'\n  } else if (timeline.startsWith('list/')) {\n    url += '/' + timeline.split('/')[1]\n  }\n\n  const params = {}\n  if (since) {\n    params.since_id = since\n  }\n\n  if (maxId) {\n    params.max_id = maxId\n  }\n\n  if (limit) {\n    params.limit = limit\n  }\n\n  if (timeline === 'local') {\n    params.local = true\n  }\n\n  if (timeline.startsWith('account/')) {\n    if (timeline.endsWith('media')) {\n      params.only_media = true\n    } else {\n      params.exclude_replies = !timeline.endsWith('/with_replies')\n    }\n  }\n\n  if (timeline === 'notifications/mentions') {\n    params.exclude_types = ['follow', 'favourite', 'reblog', 'poll', 'admin.sign_up', 'update', 'follow_request', 'admin.report', 'reaction', 'pleroma:emoji_reaction']\n  }\n\n  url += '?' + paramsString(params)\n\n  console.log('fetching url', url)\n  let { json: items, headers } = await getWithHeaders(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n\n  if (timeline === 'direct') {\n    items = items.map(item => item.last_status).filter(Boolean) // ignore falsy last_status'es\n  }\n  return { items, headers }\n}\n","import { get, DEFAULT_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport function getVerifyCredentials (instanceName, accessToken) {\n  const url = `${basename(instanceName)}/api/v1/accounts/verify_credentials`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n\nexport function getAccount (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n","export const importShowComposeDialog = () => import(\n  '../creators/showComposeDialog.js'\n).then(mod => mod.default)\n","export const importShowMediaDialog = () => import(\n  '../creators/showMediaDialog.js'\n).then(mod => mod.default)\n","import { LOCALE } from './intl.js'\n\nexport const emojiPickerDataSource = `/emoji-${LOCALE}.json`\n\n// this should be undefined for English; it's already bundled with emoji-picker-element\nexport const emojiPickerI18n = process.env.EMOJI_PICKER_I18N\n\n// To avoid creating a new IDB database named emoji-picker-en-US, just\n// reuse the existing default \"en\" one (otherwise people will end up with\n// a stale database taking up useless space)\nexport const emojiPickerLocale = LOCALE === 'en-US' ? 'en' : LOCALE\n","export const TIMELINE_BATCH_SIZE = 20\n\nexport const timelines = {\n  home: { name: 'home', label: \"Home\" },\n  local: { name: 'local', label: \"Local\" },\n  bubble: { name: 'bubble', label: \"Bubble\" },\n  federated: { name: 'federated', label: \"Federated\" }\n}\n","import * as emojiDatabase from './emojiDatabase.js'\n\n// Add a nice little tooltip to native emoji showing the shortcodes you can type to search for them\n// TODO: titles are not accessible to keyboard users or touch users, and also they don't show up\n// if they're part of a link... should we have another system?\nexport async function addEmojiTooltips (domNode) {\n  if (!domNode) {\n    return\n  }\n  const emojis = domNode.querySelectorAll('.inline-emoji')\n  if (emojis.length) {\n    await Promise.all(Array.from(emojis).map(async emoji => {\n      const emojiData = await emojiDatabase.findByUnicodeOrName(emoji.textContent)\n      if (emojiData && emojiData.shortcodes) {\n        emoji.title = emojiData.shortcodes.map(_ => `:${_}:`).join(', ')\n      }\n    }))\n  }\n}\n","const ariaLiveElement = process.browser && document.getElementById('theAriaLive')\n\nexport function announceAriaLivePolite (text) {\n  ariaLiveElement.textContent = text\n}\n","export function createStatusOrNotificationUuid (currentInstance, timelineType, timelineValue, notificationId, statusId) {\n  return `${currentInstance}/${timelineType}/${timelineValue}/${notificationId || ''}/${statusId || ''}`\n}\n","import Database from 'emoji-picker-element/database.js'\nimport { lifecycle } from './lifecycle.js'\nimport { emojiPickerLocale, emojiPickerDataSource } from '../_static/emojiPickerIntl.js'\n\nlet database\n\nfunction applySkinToneToEmoji (emoji, skinTone) {\n  if (!emoji || emoji.url) { // nonexistent or custom emoji\n    return emoji\n  }\n  const res = {\n    unicode: emoji.unicode,\n    shortcodes: emoji.shortcodes\n  }\n  if (skinTone > 0 && emoji.skins) { // non-default skin tone\n    const tone = emoji.skins.find(_ => _.tone === skinTone)\n    if (tone) {\n      res.unicode = tone.unicode\n    }\n  }\n  return res\n}\n\nexport function init () {\n  if (!database) {\n    database = new Database({\n      locale: emojiPickerLocale,\n      dataSource: emojiPickerDataSource\n    })\n  }\n}\n\nexport function setCustomEmoji (customEmoji) {\n  init()\n  database.customEmoji = customEmoji\n}\n\nexport async function findByUnicodeOrName (unicodeOrName) {\n  init()\n  return database.getEmojiByUnicodeOrName(unicodeOrName)\n}\n\nexport async function findBySearchQuery (query) {\n  init()\n  const [emojis, skinTone] = await Promise.all([\n    database.getEmojiBySearchQuery(query),\n    database.getPreferredSkinTone()\n  ])\n  return emojis.map(emoji => applySkinToneToEmoji(emoji, skinTone))\n}\n\nif (process.browser) {\n  lifecycle.addEventListener('statechange', event => {\n    if (event.newState === 'frozen' && database) { // page is frozen, close IDB connections\n      console.log('closed emoji DB')\n      database.close()\n    }\n  })\n}\n","import { emojifyText } from './emojifyText.js'\n\nexport function massageUserText (text, emojis, $autoplayGifs, $disableDecomojiConverter) {\n  text = text || ''\n  text = emojifyText(text, emojis, $autoplayGifs, $disableDecomojiConverter)\n  return text\n}\n","// Pleroma uses base62 IDs, Mastodon uses 0-9 big ints encoded as strings.\n// Using base62 for both works, since the first 10 characters of base62\n// are 0-9.\n\nimport { padStart } from './lodash-lite.js'\n\n// Pleroma uses the 0-9A-Za-z alphabet for base62, which is the same as ASCII, which\n// is the same as JavaScript sort order and IndexedDB order.\nconst MIN_CHAR_CODE = 48 // '0'.charCodeAt(0)\nconst MAX_CHAR_CODE = 122 // 'z'.charCodeAt(0)\nconst MAX_ID_LENGTH = 30 // assume that Mastodon/Pleroma IDs won't get any bigger than this\n\nexport function zeroPad (str, toSize) {\n  return padStart(str, toSize, '0')\n}\n\nexport function toPaddedBigInt (id) {\n  return zeroPad(id, MAX_ID_LENGTH)\n}\n\nexport function toReversePaddedBigInt (id) {\n  const padded = toPaddedBigInt(id)\n  let reversed = ''\n  for (let i = 0; i < padded.length; i++) {\n    const charCode = padded.charCodeAt(i)\n    const inverseCharCode = MIN_CHAR_CODE + MAX_CHAR_CODE - charCode\n    reversed += String.fromCharCode(inverseCharCode)\n  }\n  return reversed\n}\n\nexport function compareTimelineItemSummaries (left, right) {\n  const leftPadded = toPaddedBigInt(left.id)\n  const rightPadded = toPaddedBigInt(right.id)\n  return leftPadded < rightPadded ? -1 : leftPadded === rightPadded ? 0 : 1\n}\n"],"names":["className","undefined","normalIconColor","ariaLabel","showIcon","href","computedClass","originalAccount","size","elementId","originalAccountId","uuid","isStatusInOwnThread","$isVeryTinyMobileSize","isStatusInNotification","acct","shortInlineFormattedDate","editedAtDate","createdAtDate","absoluteFormattedEditedDate","absoluteFormattedCreatedDate","formattedDateLabel","originalStatusId","tabindex","localOnly","$disableTapOnStatus","formatIntl","time","safeFormatter","formatter","format","date","e","RangeError","absoluteDateFormatter","thunk","Intl","DateTimeFormat","year","month","day","hour","minute","shortAbsoluteDateFormatter","dayOnlyAbsoluteDateFormatter","displayAbsoluteFormattedEditedDate","applicationWebsite","applicationName","applicationLinkLabel","store","overrideNumReblogs","overrideNumFavs","originalStatus","url","externalLinkLabel","displayAbsoluteFormattedCreatedDate","numReblogs","numFavs","reblogsLabel","favoritesLabel","id","application","name","website","$disableReblogCounts","reblogs_count","$disableFavCounts","favourites_count","createdAtDateTS","editedAtDateTS","$isMobileSize","count","label","chars","getRegex","patterns","Object","keys","concat","RegExp","join","toRegex","str","replace","match","knownValue","codePoint","startsWith","parseInt","substring","length","String","fromCodePoint","open","this","refs","cardlink","click","unescapedDescription","imageUrl","shortcutScope","unescapedTitle","description","enableShortcuts","card","title","window","URL","hostname","provider_name","image","callbacks","onEvent","type","keyCode","target","key","element","getAttribute","parentElement","selection","getSelection","selectionStr","toString","contains","anchorNode","preventDefault","stopPropagation","registerClickDelegates","component","delegates","assign","on","forEach","registerClickDelegate","callback","__delegateCallbacks","document","addEventListener","async","setFavorited","statusId","favorited","online","get","toast","say","currentInstance","accessToken","networkPromise","instanceName","timeout","favoriteStatus","unfavoriteStatus","setStatusFavorited","database","console","error","message","setReblogged","reblogged","reblogStatus","unreblogStatus","setStatusReblogged","fadeColorToPressedState","properties","fill","options","duration","easing","REBLOG_ANIMATION","transform","FAVORITE_ANIMATION","CHECKMARK_ANIMATION","REACT_ANIMATION","backgroundColor","toggleFavorite","announce","newFavoritedValue","favoriteIcon","animate","announceAriaLivePolite","reblog","newRebloggedValue","reblogIcon","reply","requestAnimationFrame","repliesShown","set","fire","dismiss","replyShown","onOptionsClick","updateRelationshipPromise","showStatusOptionsDialog","then","mod","default","Promise","resolve","onPostedStatus","realm","inReplyToUuid","node","querySelector","focus","preventScroll","bookmark","bookmarked","pickEmojiReaction","openQuoteDialog","quote","favoriteKey","reblogKey","replyKey","optionsKey","favoriteAnimation","reblogAnimation","replyLabel","replyIcon","reblogLabel","reblogDisabled","hasQuote","hasReactions","inReplyToId","$currentVerifyCredentials","visibility","isUser","$currentStatusModifications","reblogs","favorites","favourited","status","Boolean","reactions","emoji_reactions","focusStyle","poster","width","height","src","coordsToPercent","x","y","onMouseOver","mouseOver","playing","staticSrc","blurhash","oneTransparentPixel","event","colorsToUrls","Map","canvas","context","decodedBlurhash","$ignoreBlurhash","prop","color","getComputedStyle","documentElement","getPropertyValue","createElement","getContext","fillStyle","rect","toDataURL","convertCssPropertyToDataUrl","onClick","mediaAttachments","index","importShowMediaDialog","$autoplayGifs","mouseover","noNativeWidthHeight","imageButtonAriaLabel","ariaHidden","inlineWidth","inlineHeight","videoOrAudioButtonLabel","previewUrl","animatedLabel","media","meta","small","smallWidth","smallHeight","original","originalWidth","originalHeight","preview_url","blurhashToUse","showAsSensitive","animated","audio","toggleSensitiveMedia","changeFocus","sensitivesShown","hideSensitiveMedia","showSensitiveMedia","showFirstMedia","innerComputedClass","computedStyle","sensitiveShown","sensitive","$sensitivesShown","classname","media_attachments","$markMediaAsSensitive","$neverMarkMediaAsSensitive","spoiler_text","urlIsCrossOrigin","location","origin","grabAllTextNodes","allText","childNodes","subnode","nodeType","push","test","nodeName","toLowerCase","consumeBalanced","string","close","balance","consumed","slice","remaining","katexify","promises","modified","fragment","text","render","displayMode","textContent","all","reject","style","rel","integrity","crossOrigin","head","appendChild","katex","throwOnError","createDocumentFragment","nodeValue","prev","createTextNode","indexOf","parentNode","replaceChild","hydrateContent","mentions","tags","anchors","Array","from","getElementsByTagName","anchor","classList","tag","endsWith","setAttribute","removeAttribute","mention","hrefParsed","encodeURIComponent","pathname","confetti","renderPromise","s","onHideTranslateClick","translateKey","translateState","statusTranslations","statusTranslationContents","show","changed","massagedContent","showTranslate","translating","translateError","translatedFrom","$currentInstance","$statusTranslations","loading","shown","content","$statusTranslationContents","tc","html","detected","translateContent_","originalStatusEmojis","translateContent","$disableDecomojiConverter","massageUserText","languageNames","toggleSpoilers","spoilersShown","showAllSpoilers","currentValue","bind","spoilerShown","massagedSpoilerText","spoiler","spoilerText","emojifyText","observe","setupRecalculateHeightListener","recalc","debounced","throttled","leading","trailing","$currentComposeData","username","i","reaction","apiVersion","reduceMotion","setStatusReacted","me","currentTarget","scheduleIdleTask","processedReactions","realReactions","modifiedReactions","map","shortcode","static_url","$currentPleromaFeatures","customEmojiReactions","includes","externReactions","isPleroma","hashtagInBar","hashtagsInBar","IndexMapEn","SEC_ARRAY","intlFormat","RelativeTimeFormat","formatDiff","seconds","pastDate","Math","abs","floor","number","unit","formatRelativeTime","milliseconds","formatTimeagoDate","now","res","min","pollId","poll","getPoll","choices","voteOnPoll","_","doAsyncActionWithDelay","func","start","Date","timeElapsed","setTimeout","getChoices","form","elements","checked","expiresAtTS","expired","$now","max","formatTimeagoFutureDate","onRefreshClick","polls","onSubmit","formDisabled","onChange","refreshElementId","cleanTitle","option","multiple","share","ownVote","voted","votesText","expiryText","expiresAtTimeagoFormatted","notification","useNarrowSize","expiresAt","expiresAtAbsoluteFormatted","$polls","voters_count","votes_count","votersCount","votesCount","votersOrVotesCount","optionsVotesCount","round","own_votes","expires_at","getTime","checkDomAncestors","checkFunc","stopFunc","thisNode","getNotificationText","omitEmojiInDisplayNames","notificationAccountDisplayName","getAccountAccessibleName","account","getReblogText","accountDisplayName","cleanupText","trim","getAccessibleLabelForStatus","plainTextContent","showContent","disableLongAriaLabels","showMedia","showPoll","originalAccountDisplayName","contentTextToShow","mediaTextToShow","mediaDescText","pollTextToShow","privacyText","getPrivacyText","privacy","filter","INPUT_TAGS","Set","isUserInputElement","has","localName","isToolbar","isStatusArticle","onClickOrKeydown","openAuthorProfile","accountForShortcut","mentionAuthor","focusArticle","tryToFocusElement","recalculateHeight","overrideOriginalStatus","disableTapOnStatus","preloadHiddenContent","addEmojiTooltips","article","params","timestampParams","originalQuote","replyVisibility","isQuote","showCard","showQuote","treeMetadata","level","showHeader","showHashtagsInBar","warn","$hideLongPosts","measureText","plainTextContentOverLength","in_reply_to_id","timelineType","timelineValue","notificationId","createStatusOrNotificationUuid","$spoilersShown","$showAllSpoilers","$repliesShown","$hideCards","emojis","display_name","$omitEmojiInDisplayNames","edited_at","created_at","$disableRelativeTimestamps","$disableLongAriaLabels","$currentTimeline","summaries","getForTimeline","summary","find","subtree","$underlineLinks","end","local_only","accountId","icon","emojiReaction","authorElementId","notificationType","actionText","avatarElementId","emoji","emoji_url","displayName","_updateAccount","localPromise","getAccount","remotePromise","setAccount","currentAccountProfile","_updateRelationship","getRelationship","relationship","setRelationship","currentAccountRelationship","updateLocalRelationship","clearProfileAndRelationship","updateProfileAndRelationship","updateRelationship","setStatusBookmarkedOrUnbookmarked","bookmarkStatus","unbookmarkStatus","setStatusBookmarked","composeNewStatusMentioning","setComposeData","dialogPromise","contentType","contentWarningShown","contentWarning","postPrivacy","inReplyToHandle","quoteId","quoteHandle","setReacted","reacting","extern","reactionName","reactStatus","unreactStatus","currentPleromaFeatures","reactionApiVersion","showEmojiDialog","importShowEmojiDialog","pickedEmoji","unicode","sortItemSummariesForThread","ancestors","descendants","summariesById","items","item","mapBy","summariesByReplyId","multimapBy","replyId","currentStatus","unshift","stack","current","shift","newChildren","sort","prototype","apply","isUnbrokenSelfReply","descendant","parent","promotedDescendants","otherDescendants","byId","storeFreshTimelineItemsInDatabase","timelineName","insertTimelineItems","rehydrateStatusOrNotification","updateStatus","insertStatus","fetchThreadFromNetwork","split","getStatus","fetchFreshThreadFromNetwork","updateStatusAndThread","addPagedTimelineItems","newSummaries","timelineItemToSummary","oldSummaries","mergedSummaries","setForTimeline","timelineItemSummaries","addPagedTimelineItemSummaries","fetchTimelineItems","lastTimelineItemId","stale","fetchTimelineItemsFromNetwork","getTimeline","addTimelineItemSummaries","newStale","oldStale","timelineItemSummariesAreStale","fetchTimelineItemsAndPossiblyFallBack","currentTimeline","timelineNextPageId","headers","linkHeader","parsedLinkHeader","nextUrl","next","nextId","searchParams","fetchPagedItems","addTimelineItems","setupTimeline","fetchMoreItemsAtBottomOfTimeline","runningUpdate","showMoreItemsForTimeline","itemSummariesToAdd","reverse","timelineItemSummariesToAdd","shouldShowHeader","showMoreItemsForCurrentTimeline","showMoreItemsForThread","timelineItemIds","itemSummaryToAdd","sortedTimelineItemSummaries","timeline","maxId","since","limit","timelineUrlName","Error","getTimelineUrlPath","since_id","max_id","local","only_media","exclude_replies","exclude_types","json","last_status","getVerifyCredentials","importShowComposeDialog","emojiPickerDataSource","emojiPickerI18n","emojiPickerLocale","TIMELINE_BATCH_SIZE","timelines","home","bubble","federated","domNode","querySelectorAll","emojiData","shortcodes","ariaLiveElement","getElementById","init","locale","dataSource","setCustomEmoji","customEmoji","findByUnicodeOrName","unicodeOrName","getEmojiByUnicodeOrName","findBySearchQuery","query","skinTone","getEmojiBySearchQuery","getPreferredSkinTone","skins","tone","applySkinToneToEmoji","newState","MIN_CHAR_CODE","MAX_CHAR_CODE","MAX_ID_LENGTH","zeroPad","toSize","toPaddedBigInt","toReversePaddedBigInt","padded","reversed","charCode","charCodeAt","inverseCharCode","fromCharCode","compareTimelineItemSummaries","left","right","leftPadded","rightPadded"],"sourceRoot":""}