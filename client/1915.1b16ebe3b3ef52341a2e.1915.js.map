{"version":3,"file":"1915.1b16ebe3b3ef52341a2e.1915.js","mappings":"0JA0Ia,CACP,QAAAA,CAAUC,EAAMC,EAAYC,GAC1BC,KAAKC,IAAI,CAAEJ,OAAMC,aAAYC,kBAC7B,QAAU,KACRC,KAAKC,IAAI,CAAEC,OAAO,GAAM,GAEhC,EACI,OAAAC,CAASC,GACPA,EAAEC,iBACFD,EAAEE,kBACF,MAAM,aAAEP,GAAiBC,KAAKO,MAC1BR,GACFA,IAEFC,KAAKQ,OACX,EACI,KAAAA,CAAOJ,GACDA,IACFA,EAAEC,iBACFD,EAAEE,mBAEJG,uBAAsB,KACpBT,KAAKC,IAAI,CACPF,aAAc,KACdG,OAAO,GACR,GAET,G,6DAjCe,CACXA,OAAO,EACPL,KAAM,GACNC,WAAY,GACZC,aAAc,M,w5DA7HmBI,QAAQO,E,sHAGWF,MAAME,E,oFANzDb,M,yEAIEC,Y,4TAJFD,M,iKAIEC,Y,qgBAZuBI,MAAQ,QAAU,IAAE,mB,gGAGjC,EAAAA,Q,qOAKZL,M,2BAIEC,Y,qCAZuBI,MAAQ,QAAU,IAAE,qB,gCAGjC,EAAAA,S,6VCHZ,SAASS,EAAWC,GACzBH,uBAAsB,IAAMA,sBAAsBG,IACpD,C","sources":["webpack:///./src/routes/_components/snackbar/Snackbar.html","webpack:///./src/routes/_utils/doubleRAF.js"],"sourcesContent":["<section class=\"snackbar-modal {shown ? 'shown' : ''}\"\n     aria-live=\"assertive\"\n     aria-atomic=\"true\"\n     aria-hidden={!shown}\n     aria-label=\"Alert}\"\n>\n  <div class=\"snackbar-container\">\n    <span class=\"text\">\n      {text}\n    </span>\n    <div class=\"button-wrapper\">\n      <button class=\"button\" on:click=\"onClick(event)\">\n        {buttonText}\n      </button>\n      <button class=\"button\" aria-label=\"Close\" on:click=\"close(event)\">\n        <SvgIcon className=\"close-snackbar-button\" href=\"#fa-times\" />\n      </button>\n    </div>\n  </div>\n</section>\n<style>\n  .snackbar-modal {\n    position: fixed;\n    bottom: var(--toast-gap-bottom);\n    left: 0;\n    right: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    /* lower than the Nav.html .main-nav which is 100, but higher than .compose-autosuggest\n      and .status-sensitive-media-shown which are 90 */\n    z-index: 95;\n    transform: translateY(100%);\n  }\n  :global(body:not(.reduce-motion)) .snackbar-modal {\n    transition: transform 333ms ease-in-out;\n  }\n\n  /* For iOS < 11.2 */\n  @supports (padding-bottom: constant(safe-area-inset-bottom)) {\n    .snackbar-container {\n      --safe-area-inset-bottom: constant(safe-area-inset-bottom);\n    }\n  }\n\n  /* For iOS >= 11.2 */\n  @supports (padding-bottom: env(safe-area-inset-bottom)) {\n    .snackbar-container {\n      --safe-area-inset-bottom: env(safe-area-inset-bottom);\n    }\n  }\n\n  .snackbar-container {\n    width: 562px; /* same as .main, minus 20px padding */\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    background: var(--toast-bg);\n    padding: 10px 20px calc(10px + var(--safe-area-inset-bottom)) 20px;\n    font-size: 1.3em;\n    color: var(--toast-text);\n    border-radius: 4px 4px 0 0;\n    border: 1px solid var(--toast-border);\n    border-bottom: none;\n  }\n\n  .button-wrapper {\n    display: flex;\n    align-items: center;\n  }\n\n  .text {\n    flex: 1;\n  }\n\n  button {\n    font-size: 1em;\n    border: none;\n    color: var(--toast-anchor-color);\n    text-transform: uppercase;\n    font-weight: 500;\n    background: var(--toast-bg);\n    margin-left: 5px;\n  }\n\n  button:active {\n    background: var(--toast-button-active);\n  }\n\n  button:hover {\n    background: var(--toast-button-hover);\n  }\n\n  .snackbar-modal.shown {\n    transform: translateY(0);\n  }\n\n  :global(.close-snackbar-button) {\n    margin-top: 3px;\n    width: 18px;\n    height: 18px;\n    fill: var(--toast-text);\n  }\n\n  @media (max-width: 767px) {\n    .snackbar-container {\n      width: calc(100% - 20px);\n    }\n    button {\n      margin-left: 0;\n      padding: 7px 10px;\n    }\n  }\n\n  @media (max-width: 479px) {\n    button {\n      font-size: 0.9em;\n    }\n    :global(.close-snackbar-button) {\n      width: 14px;\n      height: 14px;\n    }\n    .text {\n      font-size: 0.9em;\n    }\n  }\n</style>\n<script>\n  import { doubleRAF } from '../../_utils/doubleRAF.js'\n  import SvgIcon from '../SvgIcon.html'\n\n  export default {\n    data: () => ({\n      shown: false,\n      text: '',\n      buttonText: '',\n      buttonAction: null\n    }),\n    methods: {\n      announce (text, buttonText, buttonAction) {\n        this.set({ text, buttonText, buttonAction })\n        doubleRAF(() => {\n          this.set({ shown: true })\n        })\n      },\n      onClick (e) {\n        e.preventDefault()\n        e.stopPropagation()\n        const { buttonAction } = this.get()\n        if (buttonAction) {\n          buttonAction()\n        }\n        this.close()\n      },\n      close (e) {\n        if (e) {\n          e.preventDefault()\n          e.stopPropagation()\n        }\n        requestAnimationFrame(() => {\n          this.set({\n            buttonAction: null, // avoid memory leaks from the closure\n            shown: false\n          })\n        })\n      }\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","export function doubleRAF (fn) {\n  requestAnimationFrame(() => requestAnimationFrame(fn))\n}\n"],"names":["announce","text","buttonText","buttonAction","this","set","shown","onClick","e","preventDefault","stopPropagation","get","close","requestAnimationFrame","event","doubleRAF","fn"],"sourceRoot":""}