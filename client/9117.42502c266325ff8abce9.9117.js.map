{"version":3,"file":"9117.42502c266325ff8abce9.9117.js","mappings":"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","sources":["webpack:///./src/routes/_components/dialog/asyncDialogs/importShowCopyDialog.js","webpack:///./src/routes/_actions/copyText.js","webpack:///./src/routes/_actions/mute.js","webpack:///./src/routes/_api/mute.js","webpack:///./src/routes/_components/dialog/asyncDialogs/importShowReportDialog.js","webpack:///./src/routes/_actions/report.js","webpack:///./src/routes/_actions/setAccountNotified.js","webpack:///./src/routes/_api/notify.js","webpack:///./src/routes/_components/dialog/asyncDialogs/importShowMuteDialog.js","webpack:///./src/routes/_actions/toggleMute.js","webpack:///./src/routes/_actions/setShowReblogs.js","webpack:///./src/routes/_api/showReblogs.js","webpack:///./src/routes/_actions/setDomainBlocked.js","webpack:///./src/routes/_api/blockDomain.js","webpack:///./src/routes/_components/dialog/components/AccountProfileOptionsDialog.html","webpack:///./src/routes/_components/dialog/creators/showAccountProfileOptionsDialog.js"],"sourcesContent":["export const importShowCopyDialog = () => import(\n  '../creators/showCopyDialog.js'\n).then(mod => mod.default)\n","import { importShowCopyDialog } from '../_components/dialog/asyncDialogs/importShowCopyDialog.js'\nimport { toast } from '../_components/toast/toast.js'\n\nexport async function copyText (text) {\n  if (navigator.clipboard) { // not supported in all browsers\n    try {\n      await navigator.clipboard.writeText(text)\n      /* no await */ toast.say(\"Copied to clipboard\")\n      return\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const showCopyDialog = await importShowCopyDialog()\n  showCopyDialog(text)\n}\n","import { store } from '../_store/store.js'\nimport { muteAccount, unmuteAccount } from '../_api/mute.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { updateLocalRelationship } from './accounts.js'\nimport { emit } from '../_utils/eventBus.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setAccountMuted (accountId, mute, notifications, toastOnSuccess) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    let relationship\n    if (mute) {\n      relationship = await muteAccount(currentInstance, accessToken, accountId, notifications)\n    } else {\n      relationship = await unmuteAccount(currentInstance, accessToken, accountId)\n    }\n    await updateLocalRelationship(currentInstance, accountId, relationship)\n    if (toastOnSuccess) {\n      /* no await */ toast.say(mute ? \"Muted account\" : \"Unmuted account\")\n    }\n    emit('refreshAccountsList')\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(mute\n      ? formatIntl([\"Unable to mute account: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unmute account: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { auth, basename } from './utils.js'\nimport { post, WRITE_TIMEOUT } from '../_utils/ajax.js'\n\nexport async function muteAccount (instanceName, accessToken, accountId, notifications) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/mute`\n  return post(url, { notifications }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function unmuteAccount (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/unmute`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","export const importShowReportDialog = () => import(\n  '../creators/showReportDialog.js'\n).then(mod => mod.default)\n","import { importShowReportDialog } from '../_components/dialog/asyncDialogs/importShowReportDialog.js'\n\nexport async function reportStatusOrAccount ({ status, account }) {\n  const showReportDialog = await importShowReportDialog()\n  showReportDialog({ status, account })\n}\n","import { store } from '../_store/store.js'\nimport { notifyAccount, denotifyAccount } from '../_api/notify.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { updateLocalRelationship } from './accounts.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setAccountNotified (accountId, notify, toastOnSuccess) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    let relationship\n    if (notify) {\n      relationship = await notifyAccount(currentInstance, accessToken, accountId)\n    } else {\n      relationship = await denotifyAccount(currentInstance, accessToken, accountId)\n    }\n    await updateLocalRelationship(currentInstance, accountId, relationship)\n    if (toastOnSuccess) {\n      /* no await */ toast.say(notify ? \"Subscribed to account\" : \"Unsubscribed from account\")\n    }\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(notify\n      ? formatIntl([\"Unable to subscribe: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unsubscribe: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { post, WRITE_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport async function notifyAccount (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/follow`\n  return post(url, {\n    notify: true\n  }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function denotifyAccount (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/follow`\n  return post(url, {\n    notify: false\n  }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","export const importShowMuteDialog = () => import(\n  '../creators/showMuteDialog.js'\n).then(mod => mod.default)\n","import { importShowMuteDialog } from '../_components/dialog/asyncDialogs/importShowMuteDialog.js'\nimport { setAccountMuted } from './mute.js'\n\nexport async function toggleMute (account, mute) {\n  if (mute) {\n    (await importShowMuteDialog())(account)\n  } else {\n    await setAccountMuted(account.id, mute, /* notifications */ false, /* toastOnSuccess */ true)\n  }\n}\n","import { store } from '../_store/store.js'\nimport { setShowReblogs as setShowReblogsApi } from '../_api/showReblogs.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { updateLocalRelationship } from './accounts.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setShowReblogs (accountId, showReblogs, toastOnSuccess) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    const relationship = await setShowReblogsApi(currentInstance, accessToken, accountId, showReblogs)\n    await updateLocalRelationship(currentInstance, accountId, relationship)\n    if (toastOnSuccess) {\n      /* no await */ toast.say(showReblogs ? \"Showing boosts\" : \"Hiding boosts\")\n    }\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(showReblogs\n      ? formatIntl([\"Unable to show boosts: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to hide boosts: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { auth, basename } from './utils.js'\nimport { post, WRITE_TIMEOUT } from '../_utils/ajax.js'\n\nexport function setShowReblogs (instanceName, accessToken, accountId, showReblogs) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/follow`\n  return post(url, { reblogs: !!showReblogs }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","import { store } from '../_store/store.js'\nimport { blockDomain, unblockDomain } from '../_api/blockDomain.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { updateRelationship } from './accounts.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function setDomainBlocked (accountId, domain, block, toastOnSuccess) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    if (block) {\n      await blockDomain(currentInstance, accessToken, domain)\n    } else {\n      await unblockDomain(currentInstance, accessToken, domain)\n    }\n    await updateRelationship(accountId)\n    if (toastOnSuccess) {\n      /* no await */ toast.say(block ? \"Hid domain\" : \"Unhid domain\")\n    }\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(block\n      ? formatIntl([\"Unable to hide domain: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unhide domain: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { post, WRITE_TIMEOUT, paramsString, del } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport async function blockDomain (instanceName, accessToken, domain) {\n  const url = `${basename(instanceName)}/api/v1/domain_blocks?${paramsString({ domain })}`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function unblockDomain (instanceName, accessToken, domain) {\n  const url = `${basename(instanceName)}/api/v1/domain_blocks?${paramsString({ domain })}`\n  return del(url, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","<ModalDialog\n  {id}\n  {label}\n  {title}\n  shrinkWidthToFit={true}\n  background=\"var(--main-bg)\"\n>\n  <GenericDialogList selectable={false} {items} on:click=\"onClick(event)\"/>\n</ModalDialog>\n<script>\nimport ModalDialog from './ModalDialog.html'\nimport { store } from '../../../_store/store.js'\nimport GenericDialogList from './GenericDialogList.html'\nimport { show } from '../helpers/showDialog.js'\nimport { close } from '../helpers/closeDialog.js'\nimport { oncreate } from '../helpers/onCreateDialog.js'\nimport { setAccountBlocked } from '../../../_actions/block.js'\nimport { setAccountFollowed } from '../../../_actions/follow.js'\nimport { setShowReblogs } from '../../../_actions/setShowReblogs.js'\nimport { setDomainBlocked } from '../../../_actions/setDomainBlocked.js'\nimport { copyText } from '../../../_actions/copyText.js'\nimport { composeNewStatusMentioning } from '../../../_actions/mention.js'\nimport { toggleMute } from '../../../_actions/toggleMute.js'\nimport { reportStatusOrAccount } from '../../../_actions/report.js'\nimport { formatIntl } from '../../../_utils/formatIntl.js'\nimport { setAccountNotified } from '../../../_actions/setAccountNotified.js'\n\nexport default {\n  oncreate,\n  store: () => store,\n  computed: {\n    //\n    // begin copypasta (StatusOptionsDialog.html / AccountProfileOptionsDialog.html)\n    //\n    verifyCredentialsId: ({ verifyCredentials }) => verifyCredentials.id,\n    following: ({ relationship }) => relationship && relationship.following,\n    followRequested: ({ relationship }) => relationship && relationship.requested,\n    accountId: ({ account }) => account && account.id,\n    acct: ({ account }) => account.acct,\n    username: ({ account }) => account.username,\n    muting: ({ relationship }) => relationship && relationship.muting,\n    blocking: ({ relationship }) => relationship && relationship.blocking,\n    notifying: ({ relationship }) => relationship && relationship.notifying,\n    followLabel: ({ following, followRequested, account, username }) => {\n      if (typeof following === 'undefined' || !account) {\n        return ''\n      }\n      return (following || followRequested)\n        ? formatIntl([\"Unfollow \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Follow \",[\"account\"]], { account: `@${username}` })\n    },\n    followIcon: ({ following, followRequested }) => (\n      following ? '#fa-user-times' : followRequested ? '#fa-hourglass' : '#fa-user-plus'\n    ),\n    blockLabel: ({ blocking, username }) => (\n      blocking\n        ? formatIntl([\"Unblock \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Block \",[\"account\"]], { account: `@${username}` })\n    ),\n    blockIcon: ({ blocking }) => blocking ? '#fa-unlock' : '#fa-ban',\n    muteLabel: ({ muting, username }) => (\n      muting\n        ? formatIntl([\"Unmute \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Mute \",[\"account\"]], { account: `@${username}` })\n    ),\n    muteIcon: ({ muting }) => muting ? '#fa-volume-up' : '#fa-volume-off',\n    isUser: ({ accountId, verifyCredentialsId }) => accountId === verifyCredentialsId,\n    //\n    // end copypasta (StatusOptionsDialog.html / AccountProfileOptionsDialog.html)\n    //\n    showingReblogs: ({ relationship }) => relationship ? relationship.showing_reblogs : true,\n    showReblogsLabel: ({ showingReblogs, username }) => (\n      showingReblogs\n        ? formatIntl([\"Hide boosts from \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Show boosts from \",[\"account\"]], { account: `@${username}` })\n    ),\n    domain: ({ acct }) => acct.split('@')[1],\n    blockingDomain: ({ relationship }) => relationship && relationship.domain_blocking,\n    blockDomainLabel: ({ blockingDomain, domain }) => (\n      blockingDomain\n        ? formatIntl([\"Unblock \",[\"domain\"]], { domain })\n        : formatIntl([\"Block \",[\"domain\"]], { domain })\n    ),\n    reportLabel: ({ username }) => (\n      formatIntl([\"Report \",[\"account\"]], { account: `@${username}` })\n    ),\n    items: ({\n      blockLabel, blocking, blockIcon, muteLabel, muteIcon,\n      followLabel, followIcon, following, followRequested,\n      accountId, verifyCredentialsId, username, isUser, showReblogsLabel,\n      domain, blockDomainLabel, reportLabel, notifying\n    }) => ([\n      !isUser && {\n        key: 'mention',\n        label: formatIntl([\"Mention \",[\"account\"]], { account: `@${username}` }),\n        icon: '#fa-comments'\n      },\n      !isUser && !blocking && {\n        key: 'follow',\n        label: followLabel,\n        icon: followIcon\n      },\n      !isUser && following && notifying === false && { // notifying could be undefined for old servers\n        key: 'notify',\n        label: formatIntl([\"Subscribe to \",[\"account\"]], { account: `@${username}` }),\n        icon: '#fa-bell'\n      },\n      !isUser && following && notifying === true && { // notifying could be undefined for old servers\n        key: 'denotify',\n        label: formatIntl([\"Unsubscribe from \",[\"account\"]], { account: `@${username}` }),\n        icon: '#fa-bell-o'\n      },\n      !isUser && {\n        key: 'block',\n        label: blockLabel,\n        icon: blockIcon\n      },\n      !isUser && !blocking && {\n        key: 'mute',\n        label: muteLabel,\n        icon: muteIcon\n      },\n      !isUser && following && {\n        key: 'showReblogs',\n        label: showReblogsLabel,\n        icon: '#fa-retweet'\n      },\n      !isUser && domain && {\n        key: 'blockDomain',\n        label: blockDomainLabel,\n        icon: '#fa-ban'\n      },\n      !isUser && {\n        key: 'report',\n        label: reportLabel,\n        icon: '#fa-flag'\n      },\n      {\n        key: 'copy',\n        label: \"Copy link to account\",\n        icon: '#fa-link'\n      }\n    ].filter(Boolean))\n  },\n  methods: {\n    show,\n    close,\n    onClick (item) {\n      switch (item.key) {\n        case 'mention':\n          return this.onMentionClicked()\n        case 'follow':\n          return this.onFollowClicked()\n        case 'block':\n          return this.onBlockClicked()\n        case 'mute':\n          return this.onMuteClicked()\n        case 'showReblogs':\n          return this.onShowReblogsClicked()\n        case 'blockDomain':\n          return this.onBlockDomainClicked()\n        case 'copy':\n          return this.onCopyClicked()\n        case 'report':\n          return this.onReport()\n        case 'notify':\n          return this.onNotifyClicked()\n        case 'denotify':\n          return this.onDenotifyClicked()\n      }\n    },\n    async onMentionClicked () {\n      const { account } = this.get()\n      this.close()\n      await composeNewStatusMentioning(account)\n    },\n    async onFollowClicked () {\n      const { accountId, following } = this.get()\n      this.close()\n      await setAccountFollowed(accountId, !following, true)\n    },\n    async onBlockClicked () {\n      const { accountId, blocking } = this.get()\n      this.close()\n      await setAccountBlocked(accountId, !blocking, true)\n    },\n    async onMuteClicked () {\n      const { account, muting } = this.get()\n      this.close()\n      await toggleMute(account, !muting)\n    },\n    async onShowReblogsClicked () {\n      const { accountId, showingReblogs } = this.get()\n      this.close()\n      await setShowReblogs(accountId, !showingReblogs, true)\n    },\n    async onBlockDomainClicked () {\n      const { accountId, domain, blockingDomain } = this.get()\n      this.close()\n      await setDomainBlocked(accountId, domain, !blockingDomain, true)\n    },\n    async onCopyClicked () {\n      const { account } = this.get()\n      const { url } = account\n      this.close()\n      await copyText(url)\n    },\n    async onReport () {\n      const { account } = this.get()\n      this.close()\n      await reportStatusOrAccount({ account })\n    },\n    async onNotifyClicked () {\n      const { accountId } = this.get()\n      this.close()\n      await setAccountNotified(accountId, /* notify */ true, /* toastOnSuccess */ true)\n    },\n    async onDenotifyClicked () {\n      const { accountId } = this.get()\n      this.close()\n      await setAccountNotified(accountId, /* notify */ false, /* toastOnSuccess */ true)\n    }\n  },\n  components: {\n    ModalDialog,\n    GenericDialogList\n  }\n}\n</script>\n","import AccountProfileOptionsDialog from '../components/AccountProfileOptionsDialog.html'\nimport { showDialog } from './showDialog.js'\n\nexport default function showAccountProfileOptionsDialog (account, relationship, verifyCredentials) {\n  return showDialog(AccountProfileOptionsDialog, {\n    label: \"Profile options\",\n    title: '',\n    account,\n    relationship,\n    verifyCredentials\n  })\n}\n"],"names":["importShowCopyDialog","then","mod","default","async","copyText","text","navigator","clipboard","writeText","toast","say","e","console","error","setAccountMuted","accountId","mute","notifications","toastOnSuccess","currentInstance","accessToken","store","get","relationship","instanceName","url","timeout","muteAccount","unmuteAccount","formatIntl","message","importShowReportDialog","reportStatusOrAccount","status","account","setAccountNotified","notify","notifyAccount","denotifyAccount","importShowMuteDialog","toggleMute","id","showReblogs","reblogs","setShowReblogs","setDomainBlocked","domain","block","blockDomain","unblockDomain","show","close","onClick","item","key","this","onMentionClicked","onFollowClicked","onBlockClicked","onMuteClicked","onShowReblogsClicked","onBlockDomainClicked","onCopyClicked","onReport","onNotifyClicked","onDenotifyClicked","following","blocking","muting","showingReblogs","blockingDomain","report","items","event","label","title","verifyCredentials","requested","acct","username","notifying","followRequested","verifyCredentialsId","showing_reblogs","split","domain_blocking","blockLabel","blockIcon","muteLabel","muteIcon","followLabel","followIcon","isUser","showReblogsLabel","blockDomainLabel","reportLabel","icon","filter","Boolean","showAccountProfileOptionsDialog"],"sourceRoot":""}