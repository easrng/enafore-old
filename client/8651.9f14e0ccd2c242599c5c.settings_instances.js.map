{"version":3,"file":"8651.9f14e0ccd2c242599c5c.settings_instances.js","mappings":"6PA+Fa,CACP,sBAAAA,CAAwBC,EAAGC,GACzBD,EAAEE,iBACFF,EAAEG,mBACF,QAAiBF,EACvB,G,29BA7FaG,e,aAAL,Y,8KAF8DC,c,2mCAEzDD,e,gBAAL,a,0HAAA,M,sCAF8DC,c,wNAKfC,SAASC,K,QAC7BD,SAASC,K,YACLD,SAASE,O,iGAUrBF,SAASG,QAAU,WAAa,c,mHALlCH,SAASI,Y,UACPJ,SAASG,Q,QACXH,SAASK,O,qGACNZ,uBAAuBa,EAAO,EAAAN,SAASC,K,mrBAVZD,SAASC,M,6BAC7BD,SAASC,M,iCACLD,SAASE,O,+CAUrBF,SAASG,QAAU,WAAa,c,gDALlCH,SAASI,a,+BACPJ,SAASG,S,6BACXH,SAASK,O,sHAmFnBE,EAAA,E,q8BAnGVC,gBAAe,E,+9BAkFtB,UAmBuB,yBAAEC,I,OACjBA,EAAyBC,KAAI,EAAGT,OAAME,WAAWE,KAAU,CACzDA,QACAJ,OACAE,UACAD,OAAO,EAAAS,EAAA,GAAW,CAAC,CAAC,YAAY,IAAI,CAAC,UAAU,SAAS,CAAC,KAAO,CAAC,sBAAsB,MAAQ,MAAO,CAAEX,SAAUC,EAAME,YACxHC,aAAa,EAAAO,EAAA,GAAW,CAAC,aAAa,CAAC,aAAc,CAAEX,SAAUC,O,mFAGtD,yBAAEQ,I,OAA+BA,EAAyBG,M,8GClG9D,CACXC,cAAa,G,sIAhBmB,K,mBAEzBA,c,SAAgBC,Q,gRAAhBD,e,sBAAgBC,Q,oTCCtB,SAASC,EAAsBpB,EAAcqB,GAClD,MAAMC,EAAM,IAAG,OAAStB,wCACxB,OAAO,QAAIsB,GAAK,OAAKD,GAAc,CAAEE,QAAS,MAChD,CAEO,SAASC,EAAYxB,EAAcqB,EAAaI,GACrD,MAAMH,EAAM,IAAG,OAAStB,sBAAiCyB,IACzD,OAAO,QAAIH,GAAK,OAAKD,GAAc,CAAEE,QAAS,MAChD,C","sources":["webpack:///./src/routes/_pages/settings/instances/index.html","webpack:///./src/routes/settings/instances/index.html","webpack:///./src/routes/_api/user.js"],"sourcesContent":["<SettingsLayout page='settings/instances' label=\"Instances\">\n  <h1>Instances</h1>\n\n  {#if $isUserLoggedIn}\n    <p>Instances you've logged in to:</p>\n    <RadioGroup id=\"instance-switch\" label=\"Switch to instance\" length={numInstances}>\n      <SettingsList label=\"Instances\">\n        {#each instanceStates as instance}\n        <SettingsListRow>\n          <SettingsListButton className=\"instance-switcher-instance-name\"\n                              href=\"/settings/instances/{instance.name}\"\n                              label={instance.name}\n                              ariaLabel={instance.label} />\n          <div class=\"instance-switcher-button-wrapper\">\n            <RadioGroupButton\n                    id=\"instance-switch\"\n                    className=\"instance-switcher-button\"\n                    label={instance.switchLabel}\n                    checked={instance.current}\n                    index={instance.index}\n                    on:click=\"onSwitchToThisInstance(event, instance.name)\">\n              <SvgIcon className=\"instance-switcher-button-svg\"\n                       href={instance.current ? '#fa-star' : '#fa-star-o'} />\n            </RadioGroupButton>\n          </div>\n        </SettingsListRow>\n        {/each}\n      </SettingsList>\n    </RadioGroup>\n    <p>\n      <a rel=\"prefetch\" href=\"/settings/instances/add\" id=\"log-in-link-1\">Add another instance</a>\n    </p>\n  {:else}\n    <p>You're not logged in to any instances.</p>\n    <p>\n      \n      <a rel=\"prefetch\" href=\"/settings/instances/add\" id=\"log-in-link-2\">Log in to an instance</a>\n      to start using Enafore.\n    </p>\n  {/if}\n</SettingsLayout>\n<style>\n  :global(.instance-switcher-instance-name) {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  .instance-switcher-button-wrapper {\n    position: relative;\n    border: 1px solid var(--settings-list-item-border);\n    min-width: 44px;\n  }\n  :global(.instance-switcher-button) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    border: none;\n    background: none;\n    align-items: center;\n    justify-content: center;\n    margin: 1px;\n  }\n  :global(.instance-switcher-button-svg) {\n    width: 24px;\n    height: 24px;\n    display: inline-block;\n    fill: var(--svg-fill);\n  }\n</style>\n<script>\n  import { store } from '../../../_store/store.js'\n  import { switchToInstance } from '../../../_actions/instances.js'\n  import SettingsLayout from '../../../_components/settings/SettingsLayout.html'\n  import SettingsList from '../../../_components/settings/SettingsList.html'\n  import SettingsListRow from '../../../_components/settings/SettingsListRow.html'\n  import SettingsListButton from '../../../_components/settings/SettingsListButton.html'\n  import SvgIcon from '../../../_components/SvgIcon.html'\n  import RadioGroup from '../../../_components/radio/RadioGroup.html'\n  import RadioGroupButton from '../../../_components/radio/RadioGroupButton.html'\n  import { formatIntl } from '../../../_utils/formatIntl.js'\n\n  export default {\n    components: {\n      SettingsLayout,\n      SettingsList,\n      SettingsListRow,\n      SettingsListButton,\n      SvgIcon,\n      RadioGroup,\n      RadioGroupButton\n    },\n    methods: {\n      onSwitchToThisInstance (e, instanceName) {\n        e.preventDefault()\n        e.stopPropagation()\n        switchToInstance(instanceName)\n      }\n    },\n    store: () => store,\n    computed: {\n      instanceStates: ({ $loggedInInstancesAsList }) => (\n        $loggedInInstancesAsList.map(({ name, current }, index) => ({\n          index,\n          name,\n          current,\n          label: formatIntl([[\"instance\"],\" \",[\"current\",\"select\",{\"true\":[\"(current instance)\"],\"other\":[]}]], { instance: name, current }),\n          switchLabel: formatIntl([\"Switch to \",[\"instance\"]], { instance: name })\n        }))\n      ),\n      numInstances: ({ $loggedInInstancesAsList }) => $loggedInInstancesAsList.length\n    }\n  }\n</script>\n","<Title name=\"Instances\" settingsPage={true} />\n\n  <LazyPage {pageComponent} {params} />\n\n<script>\n  import Title from '../../_components/Title.html'\n  import LazyPage from '../../_components/LazyPage.html'\n  import pageComponent from '../../_pages/settings/instances/index.html'\n\n  export default {\n    components: {\n\n      Title,\n      LazyPage\n    },\n    data: () => ({\n      pageComponent\n    })\n  }\n</script>\n","import { get, DEFAULT_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport function getVerifyCredentials (instanceName, accessToken) {\n  const url = `${basename(instanceName)}/api/v1/accounts/verify_credentials`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n\nexport function getAccount (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n"],"names":["onSwitchToThisInstance","e","instanceName","preventDefault","stopPropagation","instanceStates","numInstances","instance","name","label","current","switchLabel","index","event","store","$isUserLoggedIn","$loggedInInstancesAsList","map","formatIntl","length","pageComponent","params","getVerifyCredentials","accessToken","url","timeout","getAccount","accountId"],"sourceRoot":""}