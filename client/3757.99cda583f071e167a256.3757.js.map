{"version":3,"file":"3757.99cda583f071e167a256.3757.js","mappings":"gMA6BA,MAKa,CACP,QAAAA,GAEJ,EACIC,KAAI,KACJC,WCjCCC,iBAC2B,WAA5BC,EAAA,EAAMC,MAAMC,aACd,OAAK,qBAELF,EAAA,EAAMG,IAAI,CAAEC,kBAAkB,KAC9B,QAAK,WAET,ED2BM,4BAAMC,UExCsC,kEAEhDC,MAAKC,GAAOA,EAAIC,YFyChB,EACI,uBAAMC,UAC4B,EAAAC,EAAA,OAEtC,EACI,aAAAC,CAAeC,GACb,IAAI,YAAEV,EAAW,SAAEW,GAAaC,KAAKd,MAAMC,MAC3CC,GAAc,EAAAa,EAAA,GAAkBb,GAChC,MAAMc,EAAMH,EAASI,WAAUC,GAAKA,EAAEC,OAASjB,KAClC,IAATc,IAGAJ,GAAQI,EAAM,GAChB,QAAKH,EAASG,EAAM,GAAGI,OACbR,GAAQI,EAAMH,EAASQ,OAAS,IAC1C,QAAKR,EAASG,EAAM,GAAGI,MAE/B,G,2LA/CsCT,eAAc,E,4GACbA,eAAc,E,0PAGrC,EAAAW,EAAI,GAAGC,Y,mFAAwB1B,KAAK,EAAA2B,QAAQJ,K,oJAa7CpB,EAAA,E,+UA9BeH,KAAK,a,8FACLA,KAAK,a,8FACLA,KAAK,U,8FACLA,KAAK,S,8FACLA,KAAK,I,8FACLA,KAAK,iB,8FACLA,KAAK,a,8FACLA,KAAK,U,8FACLA,KAAK,sB,8FACLC,Y,8FACAO,wB,8FACAI,mB,eAC1B,EAAAgB,wBAAsB,K,IAIrBC,U,aAAL,Y,28CAJI,EAAAD,uB,0EAICC,U,gBAAL,a,0HAAA,M,opBGhBK,MAAMhB,EAA0B,IAAM,wIAE3CJ,MAAKC,GAAOA,EAAIC,S","sources":["webpack:///./src/routes/_components/NavShortcuts.html","webpack:///./src/routes/_actions/goToSearch.js","webpack:///./src/routes/_components/dialog/asyncDialogs/importShowShortcutHelpDialog.js","webpack:///./src/routes/_components/dialog/asyncDialogs/importShowComposeDialog.js"],"sourcesContent":["<Shortcut key=\"g t\" on:pressed=\"goto('/federated')\"/>\n<Shortcut key=\"g f\" on:pressed=\"goto('/favorites')\"/>\n<Shortcut key=\"g b\" on:pressed=\"goto('/bubble')\"/>\n<Shortcut key=\"g l\" on:pressed=\"goto('/local')\"/>\n<Shortcut key=\"g h\" on:pressed=\"goto('/')\"/>\n<Shortcut key=\"g n\" on:pressed=\"goto('/notifications')\"/>\n<Shortcut key=\"g c\" on:pressed=\"goto('/community')\"/>\n<Shortcut key=\"g d\" on:pressed=\"goto('/direct')\"/>\n<Shortcut key=\"g i\" on:pressed=\"goto('/settings/instances')\"/>\n<Shortcut key=\"s|/\" on:pressed=\"goToSearch()\"/>\n<Shortcut key=\"h|?\" on:pressed=\"showShortcutHelpDialog()\"/>\n<Shortcut key=\"c|7\" on:pressed=\"showComposeDialog()\"/>\n{#if !$leftRightChangesFocus}\n  <Shortcut key=\"ArrowLeft\" on:pressed=\"goLeftOrRight(true)\" />\n  <Shortcut key=\"ArrowRight\" on:pressed=\"goLeftOrRight(false)\" />\n{/if}\n{#each $navPages as navPage, i}\n  <Shortcut key={(i + 1).toString()} on:pressed=\"goto(navPage.href)\" />\n{/each}\n\n<script>\n  import Shortcut from './shortcut/Shortcut.html'\n  import { goto } from '../../../__sapper__/client.js'\n  import { importShowShortcutHelpDialog } from './dialog/asyncDialogs/importShowShortcutHelpDialog.js'\n  import { importShowComposeDialog } from './dialog/asyncDialogs/importShowComposeDialog.js'\n  import { store } from '../_store/store.js'\n  import { normalizePageName } from '../_utils/normalizePageName.js'\n  import { goToSearch } from '../_actions/goToSearch.js'\n\n  export default {\n    store: () => store,\n    components: {\n      Shortcut\n    },\n    methods: {\n      oncreate () {\n        console.log('nav shortcuts')\n      },\n      goto,\n      goToSearch,\n      async showShortcutHelpDialog () {\n        const showShortcutHelpDialog = await importShowShortcutHelpDialog()\n        showShortcutHelpDialog()\n      },\n      async showComposeDialog () {\n        const showComposeDialog = await importShowComposeDialog()\n        showComposeDialog()\n      },\n      goLeftOrRight (left) {\n        let { currentPage, navPages } = this.store.get()\n        currentPage = normalizePageName(currentPage)\n        const idx = navPages.findIndex(_ => _.name === currentPage)\n        if (idx === -1) {\n          return\n        }\n        if (left && idx > 0) {\n          goto(navPages[idx - 1].href)\n        } else if (!left && idx < navPages.length - 1) {\n          goto(navPages[idx + 1].href)\n        }\n      }\n    }\n  }\n</script>\n","import { store } from '../_store/store.js'\nimport { goto } from '../../../__sapper__/client.js'\nimport { emit } from '../_utils/eventBus.js'\n\n// Go to the search page, and also focus the search input. For accessibility\n// and usability reasons, this only happens on pressing these particular hotkeys.\nexport async function goToSearch () {\n  if (store.get().currentPage === 'search') {\n    emit('focusSearchInput')\n  } else {\n    store.set({ focusSearchInput: true })\n    goto('/search')\n  }\n}\n","export const importShowShortcutHelpDialog = () => import(\n  '../creators/showShortcutHelpDialog.js'\n).then(mod => mod.default)\n","export const importShowComposeDialog = () => import(\n  '../creators/showComposeDialog.js'\n).then(mod => mod.default)\n"],"names":["oncreate","goto","goToSearch","async","store","get","currentPage","set","focusSearchInput","showShortcutHelpDialog","then","mod","default","showComposeDialog","importShowComposeDialog","goLeftOrRight","left","navPages","this","normalizePageName","idx","findIndex","_","name","href","length","i","toString","navPage","$leftRightChangesFocus","$navPages"],"sourceRoot":""}