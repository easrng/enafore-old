{"version":3,"file":"2307.476ed8152381f667e17f.2307.js","mappings":"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","sources":["webpack:///./src/routes/_utils/asyncModules/importVirtualListStore.js","webpack:///./src/routes/_actions/instances.js","webpack:///./src/routes/_api/instance.js"],"sourcesContent":["export const importVirtualListStore = () => import(\n  '../../_components/virtualList/virtualListStore.js'\n)\n","import { getVerifyCredentials } from '../_api/user.js'\nimport { store } from '../_store/store.js'\nimport { switchToTheme } from '../_utils/themeEngine.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { goto } from '../../../__sapper__/client.js'\nimport { cacheFirstUpdateAfter } from '../_utils/sync.js'\nimport { getInstanceInfo } from '../_api/instance.js'\nimport { database } from '../_database/database.js'\nimport { importVirtualListStore } from '../_utils/asyncModules/importVirtualListStore.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport function changeTheme (instanceName, newTheme) {\n  const { instanceThemes } = store.get()\n  instanceThemes[instanceName] = newTheme\n  store.set({ instanceThemes })\n  store.save()\n  const { currentInstance } = store.get()\n  if (instanceName === currentInstance) {\n    const { enableGrayscale } = store.get()\n    switchToTheme(newTheme, enableGrayscale)\n  }\n}\n\nexport function switchToInstance (instanceName) {\n  const { instanceThemes } = store.get()\n  store.set({\n    currentInstance: instanceName,\n    searchResults: null,\n    queryInSearch: ''\n  })\n  store.save()\n  const { enableGrayscale } = store.get()\n  switchToTheme(instanceThemes[instanceName], enableGrayscale)\n}\n\nexport async function logOutOfInstance (instanceName, message) {\n  message = message || formatIntl([\"Logged out of \",[\"instance\"]], { instance: instanceName })\n  const {\n    composeData,\n    currentInstance,\n    customEmoji,\n    instanceInfos,\n    instanceLists,\n    instanceThemes,\n    loggedInInstances,\n    loggedInInstancesInOrder,\n    verifyCredentials\n  } = store.get()\n  loggedInInstancesInOrder.splice(loggedInInstancesInOrder.indexOf(instanceName), 1)\n  const newInstance = instanceName === currentInstance ? loggedInInstancesInOrder[0] : currentInstance\n  const objectsToClear = [\n    composeData,\n    customEmoji,\n    instanceInfos,\n    instanceLists,\n    instanceThemes,\n    loggedInInstances,\n    verifyCredentials\n  ]\n  for (const obj of objectsToClear) {\n    delete obj[instanceName]\n  }\n  store.set({\n    composeData,\n    currentInstance: newInstance,\n    customEmoji,\n    instanceInfos,\n    instanceLists,\n    instanceThemes,\n    loggedInInstances,\n    loggedInInstancesInOrder,\n    queryInSearch: '',\n    searchResults: null,\n    timelineInitialized: false,\n    timelinePreinitialized: false,\n    verifyCredentials\n  })\n  store.clearTimelineDataForInstance(instanceName)\n  store.clearAutosuggestDataForInstance(instanceName)\n  store.save()\n  const { virtualListStore } = await importVirtualListStore()\n  virtualListStore.clearRealmByPrefix(currentInstance + '/') // TODO: this is a hacky way to clear the vlist cache\n  toast.say(message)\n  const { enableGrayscale } = store.get()\n  switchToTheme(instanceThemes[newInstance], enableGrayscale)\n  /* no await */ database.clearDatabaseForInstance(instanceName)\n  goto('/settings/instances')\n}\n\nfunction setStoreVerifyCredentials (instanceName, thisVerifyCredentials) {\n  const { verifyCredentials } = store.get()\n  verifyCredentials[instanceName] = thisVerifyCredentials\n  store.set({ verifyCredentials })\n}\n\nexport async function updateVerifyCredentialsForInstance (instanceName) {\n  const { loggedInInstances } = store.get()\n  const accessToken = loggedInInstances[instanceName].access_token\n  await cacheFirstUpdateAfter(\n    () => getVerifyCredentials(instanceName, accessToken).catch(logOutOnUnauthorized(instanceName)),\n    () => database.getInstanceVerifyCredentials(instanceName),\n    verifyCredentials => database.setInstanceVerifyCredentials(instanceName, verifyCredentials),\n    verifyCredentials => setStoreVerifyCredentials(instanceName, verifyCredentials)\n  )\n}\n\nexport async function updateVerifyCredentialsForCurrentInstance () {\n  const { currentInstance } = store.get()\n  await updateVerifyCredentialsForInstance(currentInstance)\n}\n\nexport async function updateInstanceInfo (instanceName) {\n  await cacheFirstUpdateAfter(\n    () => {\n      const { loggedInInstances } = store.get()\n      const accessToken = loggedInInstances[instanceName] && loggedInInstances[instanceName].access_token\n      return getInstanceInfo(instanceName, accessToken)\n    },\n    () => database.getInstanceInfo(instanceName),\n    info => database.setInstanceInfo(instanceName, info),\n    info => {\n      const { instanceInfos } = store.get()\n      instanceInfos[instanceName] = info\n      store.set({ instanceInfos })\n    }\n  )\n}\n\nexport function logOutOnUnauthorized (instanceName) {\n  return async error => {\n    if (error.message.startsWith('401:')) {\n      await logOutOfInstance(instanceName, formatIntl([\"The access token was revoked, logged out of \",[\"instance\"]], { instance: instanceName }))\n    }\n\n    throw error\n  }\n}\n","import { get, DEFAULT_TIMEOUT } from '../_utils/ajax.js'\nimport { auth, basename } from './utils.js'\n\nexport async function getInstanceInfo (instanceName, accessToken) {\n  const url = `${basename(instanceName)}/api/v1/instance`\n  // accessToken is required in limited federation mode, but elsewhere we don't need it (e.g. during login)\n  const headers = accessToken ? auth(accessToken) : null\n  const instance = await get(url, headers, { timeout: DEFAULT_TIMEOUT })\n  instance.nodeInfo = null\n  try {\n    const nodeInfo = await get(`${basename(instanceName)}/.well-known/nodeinfo`, headers, { timeout: DEFAULT_TIMEOUT })\n    let nodeInfo21, nodeInfo20\n    for (const link of nodeInfo.links) {\n      if (link.rel === 'http://nodeinfo.diaspora.software/ns/schema/2.1') {\n        nodeInfo21 = link.href\n      } else if (link.rel === 'http://nodeinfo.diaspora.software/ns/schema/2.0') {\n        nodeInfo20 = link.href\n      }\n    }\n    const realNodeInfo = await get(nodeInfo21 || nodeInfo20, {}, { timeout: DEFAULT_TIMEOUT })\n    instance.nodeInfo = realNodeInfo\n  } catch (e) {\n    console.warn('got error fetching nodeInfo', e)\n  }\n  return instance\n}\n"],"names":["importVirtualListStore","changeTheme","instanceName","newTheme","instanceThemes","get","set","save","currentInstance","enableGrayscale","switchToInstance","searchResults","queryInSearch","async","logOutOfInstance","message","formatIntl","instance","composeData","customEmoji","instanceInfos","instanceLists","loggedInInstances","loggedInInstancesInOrder","verifyCredentials","splice","indexOf","newInstance","objectsToClear","obj","timelineInitialized","timelinePreinitialized","clearTimelineDataForInstance","clearAutosuggestDataForInstance","virtualListStore","clearRealmByPrefix","toast","say","database","clearDatabaseForInstance","updateVerifyCredentialsForInstance","accessToken","access_token","catch","error","startsWith","logOutOnUnauthorized","getInstanceVerifyCredentials","setInstanceVerifyCredentials","thisVerifyCredentials","setStoreVerifyCredentials","updateInstanceInfo","getInstanceInfo","info","setInstanceInfo","url","headers","timeout","nodeInfo","nodeInfo21","nodeInfo20","link","links","rel","href","realNodeInfo","e","console","warn"],"sourceRoot":""}