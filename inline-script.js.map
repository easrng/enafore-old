{"version":3,"file":"inline-script.js","sources":["src/routes/_static/themes.js","src/routes/_utils/themeEngine.js","src/routes/_utils/thunk.js","src/routes/_utils/testStorage.js","src/routes/_store/storeLite.js","src/routes/_utils/safeParse.js","src/routes/_utils/userAgent/isIOS.js","src/routes/_utils/userAgent/isIOSPre12Point2.js","src/inline-script/inline-script.js","src/routes/_api/utils.js","src/routes/_actions/onUserIsLoggedOut.js"],"sourcesContent":["const themes = [\n  {\n    name: 'default',\n    label: 'intl.themeRoyal',\n    dark: false,\n    color: 'royalblue'\n  },\n  {\n    name: 'scarlet',\n    label: 'intl.themeScarlet',\n    dark: false,\n    color: '#e04e41'\n  },\n  {\n    name: 'seafoam',\n    label: 'intl.themeSeafoam',\n    dark: false,\n    color: '#177380'\n  },\n  {\n    name: 'hotpants',\n    label: 'intl.themeHotpants',\n    dark: false,\n    color: 'hotpink'\n  },\n  {\n    name: 'tangerine',\n    label: 'intl.themeTangerine',\n    dark: false,\n    color: '#df5815'\n  },\n  {\n    name: 'oaken',\n    label: 'intl.themeOaken',\n    dark: false,\n    color: 'saddlebrown'\n  },\n  {\n    name: 'majesty',\n    label: 'intl.themeMajesty',\n    dark: false,\n    color: 'blueviolet'\n  },\n  {\n    name: 'gecko',\n    label: 'intl.themeGecko',\n    dark: false,\n    color: '#4ab92f'\n  },\n  {\n    name: 'grayscale',\n    label: 'intl.themeGrayscale',\n    dark: false,\n    color: '#999999'\n  },\n  {\n    name: 'ozark',\n    label: 'intl.themeOzark',\n    dark: true,\n    color: '#5263af'\n  },\n  {\n    name: 'cobalt',\n    label: 'intl.themeCobalt',\n    dark: true,\n    color: '#08439b'\n  },\n  {\n    name: 'sorcery',\n    label: 'intl.themeSorcery',\n    dark: true,\n    color: '#ae91e8'\n  },\n  {\n    name: 'punk',\n    label: 'intl.themePunk',\n    dark: true,\n    color: '#ff5050'\n  },\n  {\n    name: 'ember',\n    label: 'intl.themeEmber',\n    dark: true,\n    color: '#f76522'\n  },\n  {\n    name: 'riot',\n    label: 'intl.themeRiot',\n    dark: true,\n    color: 'hotpink'\n  },\n  {\n    name: 'hacker',\n    label: 'intl.themeHacker',\n    dark: true,\n    color: '#4ab92f'\n  },\n  {\n    name: 'mastodon',\n    label: 'intl.themeMastodon',\n    dark: true,\n    color: '#282C37'\n  },\n  {\n    name: 'pitchblack',\n    label: 'intl.themePitchBlack',\n    dark: true,\n    color: '#000'\n  },\n  {\n    name: 'dark-grayscale',\n    label: 'intl.themeDarkGrayscale',\n    dark: true,\n    color: '#666'\n  }\n]\n\nexport { themes }\n","import { themes } from '../_static/themes.js'\nconst prefersDarkTheme = process.browser && matchMedia('(prefers-color-scheme: dark)').matches\nconst meta = process.browser && document.getElementById('theThemeColor')\n\nexport const DEFAULT_LIGHT_THEME = 'default' // theme that is shown by default\nexport const DEFAULT_DARK_THEME = 'ozark' // theme that is shown for prefers-color-scheme:dark\nexport const DEFAULT_THEME = prefersDarkTheme ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME\nconst THEME_COLORS = process.env.THEME_COLORS ? process.env.THEME_COLORS : Object.fromEntries(themes.map(_ => ([_.name, _.color])))\n\nfunction getExistingThemeLink () {\n  return document.head.querySelector('link[rel=stylesheet][href^=\"/theme-\"]')\n}\n\nfunction loadCSS (href) {\n  const existingLink = getExistingThemeLink()\n\n  const link = document.createElement('link')\n  link.rel = 'stylesheet'\n  link.href = href\n\n  link.addEventListener('load', function onload () {\n    link.removeEventListener('load', onload)\n    if (existingLink) { // remove after load to avoid flash of default theme\n      document.head.removeChild(existingLink)\n    }\n  })\n\n  document.head.appendChild(link)\n}\n\nexport function switchToTheme (themeName = DEFAULT_THEME, enableGrayscale) {\n  const themeColor = THEME_COLORS[themeName]\n  meta.content = themeColor || THEME_COLORS[DEFAULT_THEME]\n  loadCSS(`/theme-${themeName}.css`)\n}\n","// Run a function once, then cache the result and return the cached result thereafter\nexport function thunk (func) {\n  let cached\n  let runOnce\n  return () => {\n    if (!runOnce) {\n      cached = func()\n      runOnce = true\n    }\n    return cached\n  }\n}\n","// LocalStorage and IDB may be disabled in private mode, when \"blocking cookies\" in Safari,\n// or other cases\n\nimport { thunk } from './thunk.js'\n\nconst testKey = '__test__'\n\nexport const testHasLocalStorage = thunk(() => {\n  try {\n    localStorage.setItem(testKey, testKey)\n    if (!localStorage.length || localStorage.getItem(testKey) !== testKey) {\n      return false\n    }\n    localStorage.removeItem(testKey)\n  } catch (e) {\n    return false\n  }\n  return true\n})\n\nexport const testHasIndexedDB = thunk(async () => {\n  if (typeof indexedDB === 'undefined') {\n    return false\n  }\n\n  try {\n    const idbFailed = await new Promise(resolve => {\n      const db = indexedDB.open(testKey)\n      db.onerror = () => resolve(true)\n      db.onsuccess = () => {\n        indexedDB.deleteDatabase(testKey)\n        resolve(false)\n      }\n    })\n    if (idbFailed) {\n      return false\n    }\n  } catch (e) {\n    return false\n  }\n  return true\n})\n","// \"lite\" version of the store used in the inline script.\n\nimport { safeParse } from '../_utils/safeParse.js'\nimport { testHasLocalStorage } from '../_utils/testStorage.js'\n\nconst hasLocalStorage = testHasLocalStorage()\n\nexport const storeLite = {\n  get () {\n    return new Proxy({}, {\n      get: function (obj, prop) {\n        if (!(prop in obj)) {\n          obj[prop] = hasLocalStorage && safeParse(localStorage.getItem(`store_${prop}`))\n        }\n        return obj[prop]\n      }\n    })\n  },\n\n  set (obj) {\n    if (hasLocalStorage) {\n      for (const [key, value] of Object.entries(obj)) {\n        localStorage.setItem(`store_${key}`, JSON.stringify(value))\n      }\n    }\n  }\n}\n","export function safeParse (str) {\n  return !str ? undefined : (str === 'undefined' ? undefined : JSON.parse(str))\n}\n","import { thunk } from '../thunk.js'\n\nexport const isIOS = thunk(() => process.browser && /iP(?:hone|ad|od)/.test(navigator.userAgent))\n","// IntersectionObserver introduced in iOS 12.2 https://caniuse.com/#feat=intersectionobserver\nimport { thunk } from '../thunk.js'\nimport { isIOS } from './isIOS.js'\n\nexport const isIOSPre12Point2 = thunk(() => process.browser && isIOS() &&\n  !(typeof IntersectionObserver === 'function' &&\n    IntersectionObserver.toString().includes('[native code]')))\n","// For perf reasons, this script is run inline to quickly set certain styles.\n// To allow CSP to work correctly, we also calculate a sha256 hash during\n// the build process and write it to checksum.js.\n\nimport { /* INLINE_THEME, */DEFAULT_THEME, switchToTheme } from '../routes/_utils/themeEngine.js'\nimport { basename } from '../routes/_api/utils.js'\nimport { onUserIsLoggedOut } from '../routes/_actions/onUserIsLoggedOut.js'\nimport { storeLite } from '../routes/_store/storeLite.js'\nimport { isIOSPre12Point2 } from '../routes/_utils/userAgent/isIOSPre12Point2.js'\n\nconst {\n  currentInstance,\n  instanceThemes,\n  disableCustomScrollbars,\n  bottomNav,\n  enableGrayscale,\n  pushSubscription,\n  loggedInInstancesInOrder,\n  centerNav\n} = storeLite.get()\n\nconst theme = (instanceThemes && instanceThemes[currentInstance]) || DEFAULT_THEME\n\nif (currentInstance) {\n  // Do preconnect if we're logged in, so we can connect faster to the other origin.\n  const link = document.createElement('link')\n  link.setAttribute('rel', 'preconnect')\n  link.setAttribute('href', basename(currentInstance))\n  link.setAttribute('crossorigin', 'anonymous')\n  document.head.appendChild(link)\n}\n\nswitchToTheme(theme, enableGrayscale)\n\nif (enableGrayscale) {\n  // set the grayscale style on every img, svg, etc.\n  document.getElementById('theGrayscaleStyle')\n    .setAttribute('media', 'all') // enables the style\n}\n\nif (!currentInstance) {\n  // if not logged in, show all these 'hidden-from-ssr' elements\n  onUserIsLoggedOut()\n}\n\nif (disableCustomScrollbars) {\n  document.getElementById('theScrollbarStyle')\n    .setAttribute('media', 'only x') // disables the style\n}\n\nif (bottomNav) {\n  document.getElementById('theBottomNavStyle')\n    .setAttribute('media', 'all') // enables the style\n}\n\nif (centerNav) {\n  document.getElementById('theCenterNavStyle')\n    .setAttribute('media', 'all') // enables the style\n}\n\n// Versions of iOS Safari before iOS 12.2 do not work properly as a PWA\n// for cross-origin authentication\n// Here we sniff for iOS <12.2 by checking for the existence of a native IntersectionObserver\n// function, which was added in 12.2.\nif (isIOSPre12Point2()) {\n  document.head.removeChild(document.getElementById('theManifest'))\n}\n\nif (pushSubscription) {\n  // Fix a bug in Pinafore <=v1.9.0 if we only have one instance we're logged in to\n  if (loggedInInstancesInOrder && loggedInInstancesInOrder.length === 1) {\n    storeLite.set({\n      pushSubscriptions: {\n        [currentInstance]: pushSubscription\n      }\n    })\n  }\n  storeLite.set({\n    pushSubscription: null\n  })\n}\n","function targetIsLocalhost (instanceName) {\n  return instanceName.startsWith('localhost:') || instanceName.startsWith('127.0.0.1:')\n}\n\nexport function basename (instanceName) {\n  if (targetIsLocalhost(instanceName)) {\n    return `http://${instanceName}`\n  }\n  return `https://${instanceName}`\n}\n\nexport function auth (accessToken) {\n  return {\n    Authorization: `Bearer ${accessToken}`\n  }\n}\n","// When the user is logged out, we need to be sure to re-show all the \"hidden from SSR\" styles\n// so that we don't get a blank page.\nexport function onUserIsLoggedOut () {\n  if (document.getElementById('hiddenFromSsrStyle')) {\n    return\n  }\n  const style = document.createElement('style')\n  style.setAttribute('id', 'hiddenFromSsrStyle')\n  style.textContent = '.hidden-from-ssr { opacity: 1 !important; }'\n  document.head.appendChild(style)\n}\n"],"names":["prefersDarkTheme","matchMedia","matches","meta","document","getElementById","DEFAULT_THEME","THEME_COLORS","loadCSS","href","existingLink","head","querySelector","link","createElement","rel","addEventListener","onload","removeEventListener","removeChild","appendChild","thunk","func","cached","runOnce","testKey","hasLocalStorage","localStorage","setItem","length","getItem","removeItem","e","testHasLocalStorage","storeLite","get","Proxy","obj","prop","str","undefined","JSON","parse","set","key","value","Object","entries","stringify","isIOS","test","navigator","userAgent","isIOSPre12Point2","IntersectionObserver","toString","includes","currentInstance","instanceThemes","disableCustomScrollbars","bottomNav","enableGrayscale","pushSubscription","loggedInInstancesInOrder","centerNav","theme","setAttribute","instanceName","startsWith","targetIsLocalhost","themeName","themeColor","content","switchToTheme","style","textContent","onUserIsLoggedOut","pushSubscriptions"],"mappings":"yBAAA,MCCMA,EAAsCC,WAAW,gCAAgCC,QACjFC,EAA0BC,SAASC,eAAe,iBAI3CC,EAAgBN,EADK,QADC,UAG7BO,EAA0C,6VAMhD,SAASC,EAASC,GAChB,MAAMC,EAJCN,SAASO,KAAKC,cAAc,yCAM7BC,EAAOT,SAASU,cAAc,QACpCD,EAAKE,IAAM,aACXF,EAAKJ,KAAOA,EAEZI,EAAKG,iBAAiB,QAAQ,SAASC,IACrCJ,EAAKK,oBAAoB,OAAQD,GAC7BP,GACFN,SAASO,KAAKQ,YAAYT,EAEhC,IAEEN,SAASO,KAAKS,YAAYP,EAC5B,CC3BO,SAASQ,EAAOC,GACrB,IAAIC,EACAC,EACJ,MAAO,KACAA,IACHD,EAASD,IACTE,GAAU,GAELD,EAEX,CCNA,MAAME,EAAU,WCAVC,EDE6BL,GAAM,KACvC,IAEE,GADAM,aAAaC,QAAQH,EAASA,IACzBE,aAAaE,QAAUF,aAAaG,QAAQL,KAAaA,EAC5D,OAAO,EAETE,aAAaI,WAAWN,EACzB,CAAC,MAAOO,GACP,OAAO,CACR,CACD,OAAO,ICZeC,GAEXC,EAAY,CACvBC,IAAI,IACK,IAAIC,MAAM,GAAI,CACnBD,IAAK,SAAUE,EAAKC,GCVnB,IAAoBC,EDcnB,OAHMD,KAAQD,IACZA,EAAIC,GAAQZ,KCZKa,EDYwBZ,aAAaG,QAAQ,SAASQ,MCX5C,cAARC,OAAsBC,EAAYC,KAAKC,MAAMH,QAA1DC,IDaDH,EAAIC,EACZ,IAIL,GAAAK,CAAKN,GACH,GAAIX,EACF,IAAK,MAAOkB,EAAKC,KAAUC,OAAOC,QAAQV,GACxCV,aAAaC,QAAQ,SAASgB,IAAOH,KAAKO,UAAUH,GAGzD,GEvBUI,EAAQ5B,GAAM,IAAyB,mBAAmB6B,KAAKC,UAAUC,aCEzEC,EAAmBhC,GAAM,IAAyB4B,OAC3B,mBAAzBK,sBACPA,qBAAqBC,WAAWC,SAAS,qBCIvCC,gBACJA,EAAeC,eACfA,EAAcC,wBACdA,EAAuBC,UACvBA,EAASC,gBACTA,EAAeC,iBACfA,EAAgBC,yBAChBA,EAAwBC,UACxBA,GACE9B,EAAUC,MAER8B,EAASP,GAAkBA,EAAeD,IAAqBnD,EAErE,GAAImD,EAAiB,CAEnB,MAAM5C,EAAOT,SAASU,cAAc,QACpCD,EAAKqD,aAAa,MAAO,cACzBrD,EAAKqD,aAAa,OC3BpB,SAA4BC,GAC1B,OAAOA,EAAaC,WAAW,eAAiBD,EAAaC,WAAW,aAC1E,CAGMC,CADoBF,EDuBWV,GCrB1B,UAAUU,IAEZ,WAAWA,KDoBlBtD,EAAKqD,aAAa,cAAe,aACjC9D,SAASO,KAAKS,YAAYP,EAC5B,CC1BO,IAAmBsD,GR0BnB,SAAwBG,EAAYhE,EAAeuD,GACxD,MAAMU,EAAahE,EAAa+D,GAChCnE,EAAKqE,QAAUD,GAAchE,EAAaD,GAC1CE,EAAQ,UAAU8D,QACpB,COFAG,CAAcR,GAEVJ,GAEFzD,SAASC,eAAe,qBACrB6D,aAAa,QAAS,OAGtBT,GEtCE,WACL,GAAIrD,SAASC,eAAe,sBAC1B,OAEF,MAAMqE,EAAQtE,SAASU,cAAc,SACrC4D,EAAMR,aAAa,KAAM,sBACzBQ,EAAMC,YAAc,8CACpBvE,SAASO,KAAKS,YAAYsD,EAC5B,CFgCEE,GAGEjB,GACFvD,SAASC,eAAe,qBACrB6D,aAAa,QAAS,UAGvBN,GACFxD,SAASC,eAAe,qBACrB6D,aAAa,QAAS,OAGvBF,GACF5D,SAASC,eAAe,qBACrB6D,aAAa,QAAS,OAOvBb,KACFjD,SAASO,KAAKQ,YAAYf,SAASC,eAAe,gBAGhDyD,IAEEC,GAAgE,IAApCA,EAAyBlC,QACvDK,EAAUS,IAAI,CACZkC,kBAAmB,CACjBpB,CAACA,GAAkBK,KAIzB5B,EAAUS,IAAI,CACZmB,iBAAkB"}